{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/helper.js","webpack:///./src/component/element.js","webpack:///./src/formula.js","webpack:///./src/format.js","webpack:///./src/font.js","webpack:///./src/alphabet.js","webpack:///./src/cell.js","webpack:///./src/data_proxy.js","webpack:///./src/event.js","webpack:///./src/config.js","webpack:///./src/component/resizer.js","webpack:///./src/component/scrollbar.js","webpack:///./src/component/selector.js","webpack:///./src/component/suggest.js","webpack:///./src/component/editor.js","webpack:///./src/component/contextmenu.js","webpack:///./src/canvas/draw.js","webpack:///./src/component/table.js","webpack:///./src/component/dropdown.js","webpack:///./src/component/dropdown_font.js","webpack:///./src/component/dropdown_fontsize.js","webpack:///./src/component/dropdown_format.js","webpack:///./src/component/icon.js","webpack:///./src/component/dropdown_formula.js","webpack:///./src/component/color_palette.js","webpack:///./src/component/dropdown_color.js","webpack:///./src/component/dropdown_align.js","webpack:///./src/component/dropdown_linetype.js","webpack:///./src/component/border_palette.js","webpack:///./src/component/dropdown_border.js","webpack:///./src/component/toolbar.js","webpack:///./src/component/tooltip.js","webpack:///./src/component/sheet.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","mergeDeep","sources","forEach","source","keys","v","Array","isArray","helper","cloneDeep","obj","JSON","parse","stringify","merge","equals","obj1","obj2","length","k","v1","v2","undefined","ai","sum","objOrAry","cb","total","size","rangeEach","min","max","rangeSum","getv","rangeReduceIf","inits","initv","ifv","deleteProperty","oldv","Element","[object Object]","tag","className","this","el","document","createElement","data","eventNames","handler","fen","oen","split","eventName","test","window","navigator","userAgent","addEventListener","evt","button","stopPropagation","css","offsetTop","offsetLeft","offsetHeight","offsetWidth","top","left","height","width","scrollLeft","scrollTop","getBoundingClientRect","parentNode","eles","arguments","childNodes","ele","child","arg","createTextNode","appendChild","contains","classList","add","remove","cls","toggleClass","toggle","flag","addClass","removeClass","setAttribute","getAttribute","removeAttribute","content","innerHTML","style","removeProperty","getComputedStyle","h","baseFormulas","title","render","ary","reduce","a","b","Number","Math","map","join","formula_formulas","formulaAry","formulaMap","concat","f","formatStringRender","formatNumberRender","toFixed","toString","first","parts","replace","baseFormats","type","label","formats","baseFonts","fontSizes","pt","px","fonts","alphabets","alphabet","stringAt","index","str","cindex","parseInt","indexAt","ret","charCodeAt","exponet","expr2xy","src","x","y","charAt","expr2expr","xn","yn","evalSubExpr","subExpr","cellRender","substring","sri","sci","getCellText","stack","operatorStack","subStrs","fnArgType","fnArgsLen","push","toUpperCase","c1","pop","ex","ey","sx","sy","rangelen","last","infixExprToSuffixExpr","srcStack","bottom","formula","len","params","j","evalSuffixExpr","cellText","src_cell","defaultData","freeze","merges","rowm","colm","cellmm","styles","data_proxy_History","undoItems","redoItems","currentd","canUndo","canRedo","Clipboard","sIndexes","eIndexes","state","set","data_proxy_Selector","indexes","eri","eci","Scroll","addHistory","history","deleteCells","what","cell","getCell","text","si","eachMerges","inMerges","ri","ci","deleteMerges","nmerges","msri","msci","meri","meci","addMerges","addMergesByCellIndexes","rn","cn","modifyMerges","idx","copyPaste","srcIndexes","dstIndexes","autofill","dsri","dsci","deri","deci","isAdd","dn","ii","jj","nri","nci","ncell","word","result","exec","setCell","cutPaste","clipboard","ncellmm","clear","setStyleBorder","bss","getCellOrNew","cstyle","assign","addStyle","getMergesInView","viewRangeIndexes","data_proxy_DataProxy","options","formulam","formulas","formatm","fontm","scroll","selector","change","view","undo","redo","getRange","setRange","getSelectedRect","row","col","x1","indexWidth","y1","getCellStyle","setCellText","getRect","unmerge","color","multiple","isMultiple","prop","mergeIndexes","mri","mci","it","splice","mrl","mcl","bb","br","bl","bt","getCellMerge","each","format","nfont","font","isClear","cellPosition","rowSumHeight","colSumWidth","left0","top0","fsh","freezeTotalHeight","fsw","freezeTotalWidth","scrollOffsety","rowLen","getRowHeight","scrollOffsetx","colLen","getColWidth","colTotalWidth","rowTotalHeight","cellRect","cri","cci","setSelectedIndexes","mIndexes","copy","cut","isCopy","isCut","canUnmerge","ndata","rndata","fci","getFreeze","fri","rowHeight","colWidth","rowStart","colStart","rowEnd","colEnd","nstyle","target","fn","unbind","removeEventListener","mouseMoveUp","movefunc","upfunc","xEvtUp","calTouchDirection","spanx","spany","direction","abs","cssPrefix","devicePixelRatio","resizer_Resizer","vertical","minDistance","moving","children","hoverEl","on","mousedownHandler","lineEl","hide","cRect","finishedFn","rect","line","offset","show","startEvt","distance","e","buttons","movementX","movementY","scrollbar_Scrollbar","moveFn","contentEl","contentDistance","cssKey","selectorHeightBorderWidth","startZIndex","selector_SelectorElement","cornerEl","areaEl","clipboardEl","autofillEl","calBRAreaOffset","ftwidth","ftheight","calTAreaOffset","calLAreaOffset","setBRAreaOffset","setAreaOffset","setTAreaOffset","setLAreaOffset","setLClipboardOffset","setClipboardOffset","setBRClipboardOffset","setTClipboardOffset","setAllAreaOffset","tl","setAllClipboardOffset","selector_Selector","areaOffset","saIndexes","eaIndexes","freezeHeight","freezeWidth","setOffset","coffset","getClipboardRect","resetOffset","indexesUpdated","calRangeIndexes","setSelectedCurrentIndexes","moveIndexes","resetAreaOffset","calRangeIndexes2","reset","srn","ern","ecn","showAutofill","hideAutofill","showClipboard","hideClipboard","inputEnter","preventDefault","filterItems","itemIndex","click","suggest_Suggest","items","itemClick","cssRemoveKeys","filter","startsWith","item","html","input","keyCode","ctrlKey","resetTextareaSize","inputText","textlineEl","textEl","tlineWidth","maxWidth","viewFn","twidth","h1","setText","position","blur","val","setTimeout","focus","setSelectionRange","editor_Editor","suggest","start","lastIndexOf","sit","eit","indexOf","search","bindInputEvents","w","suggestPosition","elOffset","sOffset","menuItems","buildMenu","contextmenu_ContextMenu","draw_dpr","thinLineWidth","npx","DrawBox","padding","bgcolor","borderTop","borderRight","borderBottom","borderLeft","align","fontSize","hoffset","y2","drawFontLine","tx","ty","valign","blheight","blwidth","floffset","Draw","ctx","getContext","resize","scale","clearRect","save","beginPath","restore","translate","fillRect","fillText","txt","box","attr","textWrap","strikethrough","underline","textx","textAlign","textBaseline","italic","bold","fillStyle","strokeStyle","txtWidth","measureText","ceil","innerWidth","texty","textLine","lineWidth","setLineDash","xys","moveTo","lineTo","stroke","border","topxys","rightxys","bottomxys","leftxys","fill","strokeBorders","cellPaddingWidth","tableFixedHeaderCleanStyle","getDrawBox","rindex","renderCell","draw","dbox","getFontSizePxByPt","textwrap","renderContent","scrollOffset","getViewRangeIndexes","eachCellsInView","eachMergesInView","getStyle","setBorders","renderSelectedHeaderCell","renderFixedHeaders","sumHeight","sumWidth","rowEach","colEach","renderFreezeHighlightLine","p1","p2","renderAll","component_table","getView","sheight","theight","swidth","dropdown_Dropdown","showArrow","placement","super","headerEl","parent","active","dropdown_font_DropdownFont","nfonts","setTitle","dropdown_fontsize_DropdownFontSize","dropdown_format_DropdownFormat","nformats","slice","icon_Icon","iconNameEl","dropdown_formula_DropdownFormula","nformulas","themeColorPlaceHolders","themeColors","standardColors","buildTd","color_palette_ColorPalette","table","dropdown_color_DropdownColor","iconName","icon","colorPalette","dropdown_align_DropdownAlign","aligns","buildItemWithIcon","setName","lineTypes","dropdown_linetype_DropdownLineType","beforei","lineTypeEls","iti","buildTable","trs","border_palette_buildTd","border_palette_BorderPalette","ddColor","ddType","dropdown_border_DropdownBorder","borderPalette","buildButton","tooltipdata","body","elBox","removeChild","tooltip","buildDivider","buildButtonWithIcon","buildIcon","toggleChange","elName","types","hasClass","toolbar_DropdownMore","moreBtns","moreResize","btns","moreEl","ddMore","btnChildren","sumWidth2","list1","list2","marginLeft","marginRight","computedStyle","toolbar_Toolbar","ddFormat","ddFont","ddFormula","ddFontSize","ddTextColor","ddFillColor","ddAlign","ddVAlign","ddBorder","undoEl","redoEl","paintformatEl","clearformatEl","fontBoldEl","fontItalicEl","underlineEl","strikethroughEl","mergeEl","textwrapEl","freezeEl","getSelectedCellStyle","getSelectedCell","disabled","seqe","freezeIsActive","selectorSet","toolbar","setEnd","selectorMove","verticalScrollbar","horizontalScrollbar","tableOffset","getTableOffset","move","verticalScrollbarSet","horizontalScrollbarSet","sheetReset","tableEl","overlayerEl","overlayerCEl","tOffset","vRect","editor","fwidth","fheight","setFreezeLengths","clearClipboard","paste","overlayerMousedown","isAutofillEl","getCellRectByXY","offsetX","offsetY","shiftKey","paintformatActive","paintformatToggle","editorSetOffset","sPosition","editorSet","dataSetCellText","setSelectedCellText","insertDeleteRowColumn","insertRow","deleteRow","insertColumn","deleteColumn","deleteCell","sheetInitEvents","rowResizer","colResizer","contextMenu","getFixedHeaderWidth","getFixedHeaderHeight","tRect","xyInSelectedRect","setPosition","detail","delta","deltaY","end","startx","starty","pageX","pageY","touches","changedTouches","bindTouch","setSelectedCellAttr","setRowHeight","setColWidth","scrolly","resetBRLAreaOffset","scrollx","resetBRTAreaOffset","itext","reload","focusing","which","altKey","trigger","sheet_Sheet","targetEl","minWidth","values","load","setFreeze","__webpack_exports__","spreadsheet","defaultOptions","documentElement","clientHeight","clientWidth","textDecoration","src_Spreadsheet","selectors","querySelector","rootEl","sheet","loadData"],"mappings":"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","file":"xspreadsheet.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/* eslint-disable no-param-reassign */\nfunction cloneDeep(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nconst mergeDeep = (object = {}, ...sources) => {\n  sources.forEach((source) => {\n    Object.keys(source).forEach((key) => {\n      const v = source[key];\n      // console.log('k:', key, ', v:', source[key], typeof v, v instanceof Object);\n      if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean') {\n        object[key] = v;\n      } else if (typeof v !== 'function' && !Array.isArray(v) && v instanceof Object) {\n        object[key] = object[key] || {};\n        mergeDeep(object[key], v);\n      } else {\n        object[key] = v;\n      }\n    });\n  });\n  // console.log('::', object);\n  return object;\n};\n\nfunction equals(obj1, obj2) {\n  const keys = Object.keys(obj1);\n  if (keys.length !== Object.keys(obj2).length) return false;\n  for (let i = 0; i < keys.length; i += 1) {\n    const k = keys[i];\n    const v1 = obj1[k];\n    const v2 = obj2[k];\n    if (v2 === undefined) return false;\n    if (typeof v1 === 'string' || typeof v1 === 'number' || typeof v1 === 'boolean') {\n      if (v1 !== v2) return false;\n    } else if (Array.isArray(v1)) {\n      if (v1.length !== v2.length) return false;\n      for (let ai = 0; ai < v1.length; ai += 1) {\n        if (!equals(v1[ai], v2[ai])) return false;\n      }\n    } else if (typeof v1 !== 'function' && !Array.isArray(v1) && v1 instanceof Object) {\n      if (!equals(v1, v2)) return false;\n    }\n  }\n  return true;\n}\n\n/*\n  objOrAry: obejct or Array\n  cb: (value, index | key) => { return value }\n*/\nconst sum = (objOrAry, cb = value => value) => {\n  let total = 0;\n  let size = 0;\n  Object.keys(objOrAry).forEach((key) => {\n    total += cb(objOrAry[key], key);\n    size += 1;\n  });\n  return [total, size];\n};\n\nfunction deleteProperty(obj, property) {\n  const oldv = obj[`${property}`];\n  delete obj[`${property}`];\n  return oldv;\n}\n\nfunction rangeReduceIf(min, max, inits, initv, ifv, getv) {\n  let s = inits;\n  let v = initv;\n  let i = min;\n  for (; i < max; i += 1) {\n    if (s > ifv) break;\n    v = getv(i);\n    s += v;\n  }\n  return [i, s - v, v];\n}\n\nfunction rangeSum(min, max, getv) {\n  let s = 0;\n  for (let i = min; i < max; i += 1) {\n    s += getv(i);\n  }\n  return s;\n}\n\nfunction rangeEach(min, max, cb) {\n  for (let i = min; i < max; i += 1) {\n    cb(i);\n  }\n}\n\nexport default {\n  cloneDeep,\n  merge: (...sources) => mergeDeep({}, ...sources),\n  equals,\n  sum,\n  rangeEach,\n  rangeSum,\n  rangeReduceIf,\n  deleteProperty,\n};\n","/* global document */\n/* global window */\nclass Element {\n  constructor(tag, className = '') {\n    if (typeof tag === 'string') {\n      this.el = document.createElement(tag);\n      this.el.className = className;\n    } else {\n      this.el = tag;\n    }\n    this.data = {};\n  }\n\n  data(key, value) {\n    if (value !== undefined) {\n      this.data[key] = value;\n      return this;\n    }\n    return this.data[key];\n  }\n\n  on(eventNames, handler) {\n    const [fen, ...oen] = eventNames.split('.');\n    let eventName = fen;\n    if (eventName === 'mousewheel' && /Firefox/i.test(window.navigator.userAgent)) {\n      eventName = 'DOMMouseScroll';\n    }\n    this.el.addEventListener(eventName, (evt) => {\n      handler(evt);\n      for (let i = 0; i < oen.length; i += 1) {\n        const k = oen[i];\n        if (k === 'left' && evt.button !== 0) {\n          return;\n        } if (k === 'right' && evt.button !== 2) {\n          return;\n        } if (k === 'stop') {\n          evt.stopPropagation();\n        }\n      }\n    });\n    return this;\n  }\n\n  offset(value) {\n    if (value !== undefined) {\n      Object.keys(value).forEach((k) => {\n        this.css(k, `${value[k]}px`);\n      });\n      return this;\n    }\n    const {\n      offsetTop, offsetLeft, offsetHeight, offsetWidth,\n    } = this.el;\n    return {\n      top: offsetTop,\n      left: offsetLeft,\n      height: offsetHeight,\n      width: offsetWidth,\n    };\n  }\n\n  scroll(v) {\n    const { el } = this;\n    if (v !== undefined) {\n      if (v.left !== undefined) {\n        el.scrollLeft = v.left;\n      }\n      if (v.top !== undefined) {\n        el.scrollTop = v.top;\n      }\n    }\n    return { left: el.scrollLeft, top: el.scrollTop };\n  }\n\n  box() {\n    return this.el.getBoundingClientRect();\n  }\n\n  parent() {\n    return new Element(this.el.parentNode);\n  }\n\n  children(...eles) {\n    if (arguments.length === 0) {\n      return this.el.childNodes;\n    }\n    eles.forEach(ele => this.child(ele));\n    return this;\n  }\n\n  /*\n  first() {\n    return this.el.firstChild;\n  }\n\n  last() {\n    return this.el.lastChild;\n  }\n\n  remove(ele) {\n    return this.el.removeChild(ele);\n  }\n\n  prepend(ele) {\n    const { el } = this;\n    if (el.children.length > 0) {\n      el.insertBefore(ele, el.firstChild);\n    } else {\n      el.appendChild(ele);\n    }\n    return this;\n  }\n\n  prev() {\n    return this.el.previousSibling;\n  }\n\n  next() {\n    return this.el.nextSibling;\n  }\n  */\n\n  child(arg) {\n    let ele = arg;\n    if (typeof arg === 'string') {\n      ele = document.createTextNode(arg);\n    } else if (arg instanceof Element) {\n      ele = arg.el;\n    }\n    this.el.appendChild(ele);\n    return this;\n  }\n\n  contains(ele) {\n    return this.el.contains(ele);\n  }\n\n  className(v) {\n    if (v !== undefined) {\n      this.el.className = v;\n      return this;\n    }\n    return this.el.className;\n  }\n\n  addClass(name) {\n    this.el.classList.add(name);\n    return this;\n  }\n\n  hasClass(name) {\n    return this.el.classList.contains(name);\n  }\n\n  removeClass(name) {\n    this.el.classList.remove(name);\n    return this;\n  }\n\n  toggle(cls = 'active') {\n    return this.toggleClass(cls);\n  }\n\n  toggleClass(name) {\n    return this.el.classList.toggle(name);\n  }\n\n  active(flag = true) {\n    if (flag) this.addClass('active');\n    else this.removeClass('active');\n    return this;\n  }\n\n  disabled(flag = true) {\n    if (flag) this.addClass('disabled');\n    else this.removeClass('disabled');\n    return this;\n  }\n\n  // key, value\n  // key\n  // {k, v}...\n  attr(key, value) {\n    if (value !== undefined) {\n      this.el.setAttribute(key, value);\n    } else {\n      if (typeof key === 'string') {\n        return this.el.getAttribute(key);\n      }\n      Object.keys(key).forEach((k) => {\n        this.el.setAttribute(k, key[k]);\n      });\n    }\n    return this;\n  }\n\n  removeAttr(key) {\n    this.el.removeAttribute(key);\n    return this;\n  }\n\n  html(content) {\n    if (content !== undefined) {\n      this.el.innerHTML = content;\n      return this;\n    }\n    return this.el.innerHTML;\n  }\n\n  val(v) {\n    if (v !== undefined) {\n      this.el.value = v;\n      return this;\n    }\n    return this.el.value;\n  }\n\n  cssRemoveKeys(...keys) {\n    keys.forEach(k => this.el.style.removeProperty(k));\n    return this;\n  }\n\n  // css( propertyName )\n  // css( propertyName, value )\n  // css( properties )\n  css(name, value) {\n    if (value === undefined && typeof name !== 'string') {\n      Object.keys(name).forEach((k) => {\n        this.el.style[k] = name[k];\n      });\n      return this;\n    }\n    if (value !== undefined) {\n      this.el.style[name] = value;\n      return this;\n    }\n    return this.el.style[name];\n  }\n\n  computedStyle() {\n    return window.getComputedStyle(this.el, null);\n  }\n\n  show() {\n    this.css('display', 'block');\n    return this;\n  }\n\n  hide() {\n    this.css('display', 'none');\n    return this;\n  }\n}\n\nconst h = (tag, className = '') => new Element(tag, className);\n\nexport {\n  Element,\n  h,\n};\n","/**\n  formula:\n    key\n    title\n    render\n*/\nconst baseFormulas = [\n  {\n    key: 'SUM',\n    title: '求和',\n    render: ary => ary.reduce((a, b) => Number(a) + Number(b), 0),\n  },\n  {\n    key: 'AVERAGE',\n    title: '求平均值',\n    render: ary => ary.reduce((a, b) => Number(a) + Number(b), 0) / ary.length,\n  },\n  {\n    key: 'MAX',\n    title: '最大值',\n    render: ary => Math.max(...ary.map(v => Number(v))),\n  },\n  {\n    key: 'MIN',\n    title: '最小值',\n    render: ary => Math.min(...ary.map(v => Number(v))),\n  },\n  {\n    key: 'CONCAT',\n    title: '字符串拼接',\n    render: ary => ary.join(''),\n  },\n];\n\nconst formulas = (formulaAry = []) => {\n  const formulaMap = {};\n  baseFormulas.concat(formulaAry).forEach((f) => {\n    formulaMap[f.key] = f;\n  });\n  return formulaMap;\n};\n\nexport default {\n};\n\nexport {\n  formulas,\n  baseFormulas,\n};\n","const formatStringRender = v => v;\n\nconst formatNumberRender = (v) => {\n  if (/^(-?\\d*.?\\d*)$/.test(v)) {\n    const v1 = Number(v).toFixed(2).toString();\n    const [first, ...parts] = v1.split('\\\\.');\n    return [first.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,'), ...parts];\n  }\n  return v;\n};\n\nconst baseFormats = [\n  {\n    key: 'normal',\n    title: 'Normal',\n    type: 'string',\n    render: formatStringRender,\n  },\n  {\n    key: 'text',\n    title: 'Plain Text',\n    type: 'string',\n    render: formatStringRender,\n  },\n  {\n    key: 'number',\n    title: 'Number',\n    type: 'number',\n    label: '1,000.12',\n    render: formatNumberRender,\n  },\n  {\n    key: 'percent',\n    title: 'Percent',\n    type: 'number',\n    label: '10.12%',\n    render: v => `${v}%`,\n  },\n  {\n    key: 'rmb',\n    title: 'RMB',\n    type: 'number',\n    label: '￥10.00',\n    render: v => `￥${formatNumberRender(v)}`,\n  },\n  {\n    key: 'usd',\n    title: 'USD',\n    type: 'number',\n    label: '$10.00',\n    render: v => `$${formatNumberRender(v)}`,\n  },\n  {\n    key: 'date',\n    title: 'Date',\n    type: 'date',\n    label: '26/09/2008',\n    render: formatStringRender,\n  },\n  {\n    key: 'time',\n    title: 'Time',\n    type: 'date',\n    label: '15:59:00',\n    render: formatStringRender,\n  },\n  {\n    key: 'datetime',\n    title: 'Date time',\n    type: 'date',\n    label: '26/09/2008 15:59:00',\n    render: formatStringRender,\n  },\n  {\n    key: 'duration',\n    title: 'Duration',\n    type: 'date',\n    label: '24:01:00',\n    render: formatStringRender,\n  },\n];\n\nconst formats = (ary = []) => {\n  const map = {};\n  baseFormats.concat(ary).forEach((f) => {\n    map[f.key] = f;\n  });\n  return map;\n};\n\nexport default {\n};\nexport {\n  formats,\n  baseFormats,\n};\n","const baseFonts = [\n  { key: 'Helvetica', title: 'Helvetica' },\n  { key: 'Source Sans Pro', title: 'Source Sans Pro' },\n  { key: 'Comic Sans MS', title: 'Comic Sans MS' },\n  { key: 'Arial', title: 'Arial' },\n  { key: 'Courier New', title: 'Courier New' },\n  { key: 'Verdana', title: 'Verdana' },\n];\n\nconst fontSizes = [\n  { pt: 7.5, px: 10 },\n  { pt: 8, px: 11 },\n  { pt: 9, px: 12 },\n  { pt: 10, px: 13 },\n  { pt: 10.5, px: 14 },\n  { pt: 11, px: 15 },\n  { pt: 12, px: 16 },\n  { pt: 14, px: 18.7 },\n  { pt: 15, px: 20 },\n  { pt: 16, px: 21.3 },\n  { pt: 18, px: 24 },\n  { pt: 22, px: 29.3 },\n  { pt: 24, px: 32 },\n  { pt: 26, px: 34.7 },\n  { pt: 36, px: 48 },\n  { pt: 42, px: 56 },\n  // { pt: 54, px: 71.7 },\n  // { pt: 63, px: 83.7 },\n  // { pt: 72, px: 95.6 },\n];\n\nfunction getFontSizePxByPt(pt) {\n  for (let i = 0; i < fontSizes.length; i += 1) {\n    const fontSize = fontSizes[i];\n    if (fontSize.pt === pt) {\n      return fontSize.px;\n    }\n  }\n  return pt;\n}\n\nconst fonts = (ary = []) => {\n  const map = {};\n  baseFonts.concat(ary).forEach((f) => {\n    map[f.key] = f;\n  });\n  return map;\n};\n\nexport default {};\nexport {\n  fontSizes,\n  fonts,\n  baseFonts,\n  getFontSizePxByPt,\n};\n","const alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\nexport default {\n  stringAt: (index) => {\n    let str = '';\n    let cindex = index;\n    while (cindex >= alphabets.length) {\n      cindex /= alphabets.length;\n      cindex -= 1;\n      str += alphabets[parseInt(cindex, 10) % alphabets.length];\n    }\n    const last = index % alphabets.length;\n    str += alphabets[last];\n    return str;\n  },\n  indexAt: (str) => {\n    let ret = 0;\n    for (let i = 0; i < str.length - 1; i += 1) {\n      const cindex = str.charCodeAt(i) - 65;\n      const exponet = str.length - 1 - i;\n      ret += (alphabets.length ** exponet) + (alphabets.length * cindex);\n    }\n    ret += str.charCodeAt(str.length - 1) - 65;\n    return ret;\n  },\n};\n","import alphabet from './alphabet';\n\n// B10 => x,y\nconst expr2xy = (src) => {\n  let x = '';\n  let y = '';\n  for (let i = 0; i < src.length; i += 1) {\n    if (src.charAt(i) >= '0' && src.charAt(i) <= '9') {\n      y += src.charAt(i);\n    } else {\n      x += src.charAt(i);\n    }\n  }\n  return [alphabet.indexAt(x), parseInt(y, 10)];\n};\n\nconst expr2expr = (src, xn, yn) => {\n  const [x, y] = expr2xy(src);\n  return alphabet.stringAt(x + xn) + (y + yn);\n};\n\n// Converting infix expression to a suffix expression\n// src: AVERAGE(SUM(A1,A2), B1) + 50 + B20\n// return: [A1, A2], SUM[, B1],AVERAGE,50,+,B20,+\nconst infixExprToSuffixExpr = (src) => {\n  const operatorStack = [];\n  const stack = [];\n  let subStrs = []; // SUM, A1, B2, 50 ...\n  let fnArgType = 0; // 1 => , 2 => :\n  let fnArgsLen = 1; // A1,A2,A3...\n  for (let i = 0; i < src.length; i += 1) {\n    const c = src.charAt(i);\n    // console.log('c:', c);\n    if (c !== ' ') {\n      if (c >= 'a' && c <= 'z') {\n        subStrs.push(c.toUpperCase());\n      } else if ((c >= '0' && c <= '9') || (c >= 'A' && c <= 'Z') || c === '.') {\n        subStrs.push(c);\n      } else if (c === '\"') {\n        i += 1;\n        while (src.charAt(i) !== '\"') {\n          subStrs.push(src.charAt(i));\n          i += 1;\n        }\n        stack.push(`\"${subStrs.join('')}`);\n        subStrs = [];\n      } else {\n        if (subStrs.length > 0) {\n          stack.push(subStrs.join(''));\n        }\n        if (c === ')') {\n          let c1 = operatorStack.pop();\n          if (fnArgType === 2) {\n            // fn argument range => A1:B5\n            const [ex, ey] = expr2xy(stack.pop());\n            const [sx, sy] = expr2xy(stack.pop());\n            // console.log('::', sx, sy, ex, ey);\n            let rangelen = 0;\n            for (let x = sx; x <= ex; x += 1) {\n              for (let y = sy; y <= ey; y += 1) {\n                stack.push(alphabet.stringAt(x) + y);\n                rangelen += 1;\n              }\n            }\n            stack.push([c1, rangelen]);\n          } else if (fnArgType === 1) {\n            // fn argument => A1,A2,B5\n            stack.push([c1, fnArgsLen]);\n            fnArgsLen = 1;\n          } else {\n            // console.log('c1:', c1, fnArgType, operatorStack);\n            while (c1 !== '(' && operatorStack.length > 0) {\n              stack.push(c1);\n              c1 = operatorStack.pop();\n            }\n          }\n          fnArgType = 0;\n        } else if (c === ':') {\n          fnArgType = 2;\n        } else if (c === ',') {\n          fnArgType = 1;\n          fnArgsLen += 1;\n        } else if (c === '(' && subStrs.length > 0) {\n          // function\n          stack.pop();\n          operatorStack.push(subStrs.join(''));\n        } else {\n          // priority: */ > +-\n          if (operatorStack.length > 0 && (c === '+' || c === '-')) {\n            const last = operatorStack[operatorStack.length - 1];\n            if (last === '*' || last === '/') {\n              while (operatorStack.length > 0) {\n                stack.push(operatorStack.pop());\n              }\n            }\n          }\n          operatorStack.push(c);\n        }\n        subStrs = [];\n      }\n    }\n  }\n  if (subStrs.length > 0) {\n    stack.push(subStrs.join(''));\n  }\n  while (operatorStack.length > 0) {\n    stack.push(operatorStack.pop());\n  }\n  return stack;\n};\n\nconst evalSubExpr = (subExpr, cellRender) => {\n  if (subExpr[0] >= '0' && subExpr[0] <= '9') {\n    return Number(subExpr);\n  }\n  if (subExpr[0] === '\"') {\n    return subExpr.substring(1);\n  }\n  const [x, y] = expr2xy(subExpr);\n  return cellRender(x, y);\n};\n\n// evaluate the suffix expression\n// srcStack: <= infixExprToSufixExpr\n// formulaMap: {'SUM': {}, ...}\n// cellRender: (x, y) => {}\nconst evalSuffixExpr = (srcStack, formulaMap, cellRender) => {\n  const stack = [];\n  // console.log(':::::formulaMap:', formulaMap);\n  for (let i = 0; i < srcStack.length; i += 1) {\n    // console.log(':::>>>', srcStack[i]);\n    if (srcStack[i] === '+') {\n      const top = stack.pop();\n      const bottom = stack.pop();\n      stack.push(Number(bottom) + Number(top));\n    } else if (srcStack[i] === '-') {\n      const top = stack.pop();\n      stack.push(Number(stack.pop()) - Number(top));\n    } else if (srcStack[i] === '*') {\n      stack.push(Number(stack.pop()) * Number(stack.pop()));\n    } else if (srcStack[i] === '/') {\n      const top = stack.pop();\n      stack.push(Number(stack.pop()) / Number(top));\n    } else if (Array.isArray(srcStack[i])) {\n      const [formula, len] = srcStack[i];\n      const params = [];\n      for (let j = 0; j < len; j += 1) {\n        params.push(stack.pop());\n      }\n      stack.push(formulaMap[formula].render(params));\n    } else {\n      stack.push(evalSubExpr(srcStack[i], cellRender));\n    }\n    // console.log('stack:', stack);\n  }\n  return stack[0];\n};\n\nconst cellRender = (sri, sci, src, formulaMap, getCellText) => {\n  // const srcExpr = alphabet.stringAt(sci) + (sri + 1);\n  // console.log(':::::::::::::src:', src, srcExpr);\n  if (src[0] === '=') {\n    const stack = infixExprToSuffixExpr(src.substring(1));\n    // if (stack.includes(srcExpr)) return '';\n    // console.log('suffixExpr:', stack);\n    if (stack.length <= 0) return src;\n    // const cb = (x, y) => cellRender(sri, sci, getCellText(x, y - 1), formulaMap, getCellText);\n    return evalSuffixExpr(stack, formulaMap, (x, y) => {\n      const cellText = (sri === y - 1 && sci === x) ? 0 : getCellText(x, y - 1);\n      return cellRender(sri, sci, cellText, formulaMap, getCellText);\n    });\n  }\n  return src;\n};\n\nexport default {\n  render: cellRender,\n};\nexport {\n  infixExprToSuffixExpr,\n  expr2xy,\n  expr2expr,\n};\n","/* eslint no-new-wrappers: \"error\" */\nimport helper from './helper';\nimport { formulas as _formulas } from './formula';\nimport { formats as _formats } from './format';\nimport { fonts as _fonts } from './font';\nimport { expr2expr } from './cell';\n\n/*\nCell: {\n  text: string,\n  merge: [rowLen, colLen],\n  format: string,\n  si: style-index\n}\n*/\nconst defaultData = {\n  freeze: [0, 0],\n  merges: [], // [[[sri, sci], [eri, eci]],...]\n  rowm: {}, // Map<int, Row>, len\n  colm: {}, // Map<int, Row>, len\n  cellmm: {}, // Map<int, Map<int, Cell>>\n  styles: [],\n  // borders: [], // [[[sri, sci], [eri, eci], mode, style, color], ...]\n};\n\nclass History {\n  constructor() {\n    this.undoItems = [];\n    this.redoItems = [];\n  }\n\n  add(data) {\n    this.undoItems.push(helper.cloneDeep(data));\n    this.redoItems = [];\n  }\n\n  canUndo() {\n    return this.undoItems.length > 0;\n  }\n\n  canRedo() {\n    return this.redoItems.length > 0;\n  }\n\n  undo(currentd, cb) {\n    const { undoItems, redoItems } = this;\n    if (this.canUndo()) {\n      redoItems.push(helper.cloneDeep(currentd));\n      cb(undoItems.pop());\n    }\n  }\n\n  redo(currentd, cb) {\n    const { undoItems, redoItems } = this;\n    if (this.canRedo()) {\n      undoItems.push(helper.cloneDeep(currentd));\n      cb(redoItems.pop());\n    }\n  }\n}\n\nclass Clipboard {\n  constructor() {\n    this.sIndexes = null;\n    this.eIndexes = null;\n    this.state = 'clear';\n  }\n\n  copy(sIndexes, eIndexes) {\n    this.set(sIndexes, eIndexes, 'copy');\n    return this;\n  }\n\n  cut(sIndexes, eIndexes) {\n    this.set(sIndexes, eIndexes, 'cut');\n    return this;\n  }\n\n  isCopy() {\n    return this.state === 'copy';\n  }\n\n  isCut() {\n    return this.state === 'cut';\n  }\n\n  set(sIndexes, eIndexes, state) {\n    this.sIndexes = sIndexes;\n    this.eIndexes = eIndexes;\n    this.state = state;\n    return this;\n  }\n\n  get() {\n    return [this.sIndexes, this.eIndexes];\n  }\n\n  isClear() {\n    return this.state === 'clear';\n  }\n\n  clear() {\n    this.sIndexes = null;\n    this.sIndexes = null;\n    this.state = 'clear';\n  }\n}\n\nclass Selector {\n  constructor() {\n    this.indexes = [0, 0];\n    this.sIndexes = [-1, -1];\n    this.eIndexes = [-1, -1];\n  }\n\n  getRange() {\n    return [this.sIndexes, this.eIndexes];\n  }\n\n  setRange(sIndexes, eIndexes) {\n    this.sIndexes = sIndexes;\n    this.eIndexes = eIndexes;\n  }\n\n  seqe() {\n    const [sri, sci] = this.sIndexes;\n    const [eri, eci] = this.eIndexes;\n    return sri === eri && sci === eci;\n  }\n\n  each(cb) {\n    const [sri, sci] = this.sIndexes;\n    const [eri, eci] = this.eIndexes;\n    for (let i = sri; i <= eri; i += 1) {\n      for (let j = sci; j <= eci; j += 1) {\n        cb(i, j);\n      }\n    }\n  }\n}\n\nclass Scroll {\n  constructor() {\n    this.x = 0;\n    this.y = 0;\n    this.indexes = [0, 0];\n  }\n}\n\nfunction addHistory() {\n  this.history.add(this.d);\n}\n\n// what: all | text | format\nfunction deleteCells([sri, sci], [eri, eci], what = 'all') {\n  const { d } = this;\n  const { cellmm } = d;\n  // console.log('cellmm:', cellmm, ', sri:', sri, ', sci:', sci, ', eri:', eri, ', eci:', eci);\n  for (let i = sri; i <= eri; i += 1) {\n    for (let j = sci; j <= eci; j += 1) {\n      const cell = this.getCell(i, j);\n      if (cell) {\n        if (what === 'all') {\n          delete cellmm[i][`${j}`];\n        } else if (what === 'text') {\n          if (cell.text) delete cell.text;\n        } else if (what === 'format') {\n          if (cell.si !== undefined) delete cell.si;\n          if (cell.merge) delete cell.merge;\n        }\n      }\n    }\n  }\n}\n\nfunction getCellRowByY(y, scrollOffsety) {\n  const { options } = this;\n  const { row } = options;\n  const fsh = this.freezeTotalHeight();\n  // console.log('y:', y, ', fsh:', fsh);\n  let inits = row.height;\n  if (fsh + row.height < y) inits -= scrollOffsety;\n  const [ri, top, height] = helper.rangeReduceIf(\n    0,\n    this.rowLen(),\n    inits,\n    row.height,\n    y,\n    i => this.getRowHeight(i),\n  );\n  if (top <= 0) {\n    return { ri: -1, top: 0, height };\n  }\n  return { ri: ri - 1, top, height };\n  // return { ri, top: top - row.height, height };\n}\n\nfunction getCellColByX(x, scrollOffsetx) {\n  const { options } = this;\n  const { col } = options;\n  const fsw = this.freezeTotalWidth();\n  let inits = col.indexWidth;\n  if (fsw + col.indexWidth < x) inits -= scrollOffsetx;\n  const [ci, left, width] = helper.rangeReduceIf(\n    0,\n    this.colLen(),\n    inits,\n    col.indexWidth,\n    x,\n    i => this.getColWidth(i),\n  );\n  if (left <= 0) {\n    return { ci: -1, left: 0, width: col.indexWidth };\n  }\n  return { ci: ci - 1, left, width };\n  // return { ci, left: left - col.indexWidth, width };\n}\n\nfunction eachMerges(cb) {\n  const { merges } = this.d;\n  if (merges.length > 0) {\n    for (let i = 0; i < merges.length; i += 1) {\n      cb(merges[i]);\n    }\n  }\n}\n\nfunction inMerges(merges, ri, ci, cb) {\n  // console.log('merges:', merges);\n  if (merges.length > 0) {\n    for (let i = 0; i < merges.length; i += 1) {\n      // console.log('merges:', merges);\n      const [[sri, sci], [eri, eci]] = merges[i];\n      if (ri >= sri && ri <= eri && ci >= sci && ci <= eci) {\n        cb(merges[i]);\n        break;\n      }\n    }\n  }\n}\n\nfunction deleteMerges([sri, sci], [eri, eci]) {\n  const nmerges = [];\n  eachMerges.call(this, (merge) => {\n    const [[msri, msci], [meri, meci]] = merge;\n    if (msri > eri || sri > meri || msci > eci || sci > meci) {\n      nmerges.push(merge);\n    }\n  });\n  this.d.merges = nmerges;\n}\n\nfunction addMerges(sIndexes, eIndexes) {\n  deleteMerges.call(this, sIndexes, eIndexes);\n  this.d.merges.push([sIndexes, eIndexes]);\n}\n\nfunction addMergesByCellIndexes(ri, ci) {\n  const cell = this.getCell(ri, ci);\n  if (cell && cell.merge) {\n    // console.log('cell:', ri, ci, cell);\n    const [rn, cn] = cell.merge;\n    if (rn <= 0 && cn <= 0) return;\n    addMerges.call(this, [ri, ci], [ri + rn, ci + cn]);\n  }\n}\n\nfunction moveMerges([sri, sci], [eri, eci], rn, cn) {\n  eachMerges.call(this, (merge) => {\n    const [[msri, msci], [meri, meci]] = merge;\n    if (msri > eri || sri > meri || msci > eci || sci > meci) {\n      // no intersection\n    } else {\n      // console.log('::::::::', merge, rn, cn);\n      for (let i = 0; i <= 1; i += 1) {\n        const indexes = merge[i];\n        indexes[0] += rn;\n        indexes[1] += cn;\n      }\n    }\n  });\n}\n\n// type: row | col\n// i: index\nfunction modifyMerges(type, i, n) {\n  const idx = type === 'row' ? 0 : 1;\n  eachMerges.call(this, (merge) => {\n    const [sIndexes, eIndexes] = merge;\n    if (sIndexes[idx] >= i) {\n      sIndexes[idx] += n;\n      eIndexes[idx] += n;\n    } else if (sIndexes[idx] < i && i <= eIndexes[idx]) {\n      eIndexes[idx] += n;\n      const cell = this.getCell(...sIndexes);\n      cell.merge[idx] += n;\n    }\n  });\n}\n\nfunction copyPaste(srcIndexes, dstIndexes, what, autofill = false) {\n  const { cellmm } = this.d;\n  const [[sri, sci], [eri, eci]] = srcIndexes;\n  const [[dsri, dsci], [deri, deci]] = dstIndexes;\n  const rn = eri - sri + 1;\n  const cn = eci - sci + 1;\n  const drn = deri - dsri + 1;\n  const dcn = deci - dsci + 1;\n  // console.log(srcIndexes, dstIndexes);\n  let isAdd = true;\n  let dn = 0;\n  if (deri < sri || deci < sci) {\n    isAdd = false;\n    if (deri < sri) dn = drn;\n    else dn = dcn;\n  }\n  // delete dest merge\n  if (what === 'all' || what === 'format') {\n    deleteCells.call(this, [dsri, dsci], [deri, deci], what);\n    deleteMerges.call(this, [dsri, dsci], [deri, deci]);\n  }\n  // console.log('drn:', drn, ', dcn:', dcn);\n  for (let i = sri; i <= eri; i += 1) {\n    if (cellmm[i]) {\n      for (let j = sci; j <= eci; j += 1) {\n        if (cellmm[i][j]) {\n          for (let ii = dsri; ii <= deri; ii += rn) {\n            for (let jj = dsci; jj <= deci; jj += cn) {\n              const nri = ii + (i - sri);\n              const nci = jj + (j - sci);\n              const ncell = helper.cloneDeep(cellmm[i][j]);\n              // ncell.text\n              if (autofill && ncell && ncell.text && ncell.text.length > 0) {\n                const { text } = ncell;\n                let n = (jj - dsci) + (ii - dsri) + 1;\n                // console.log('n:', n);\n                if (!isAdd) {\n                  n -= dn + 1;\n                }\n                if (text[0] === '=') {\n                  ncell.text = text.replace(/\\w{1,3}\\d/g, (word) => {\n                    let [xn, yn] = [0, 0];\n                    if (sri === dsri) {\n                      xn = n;\n                    } else {\n                      yn = n;\n                    }\n                    // console.log('xn:', xn, ', yn:', yn, expr2expr(word, xn, yn));\n                    return expr2expr(word, xn, yn);\n                  });\n                } else {\n                  const result = /[\\\\.\\d]+$/.exec(text);\n                  // console.log('result:', result);\n                  if (result !== null) {\n                    const index = Number(result[0]) + n;\n                    ncell.text = text.substring(0, result.index) + index;\n                  }\n                }\n              }\n              // console.log('ncell:', nri, nci, ncell);\n              this.setCell(nri, nci, ncell, what);\n              addMergesByCellIndexes.call(this, nri, nci);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction cutPaste(srcIndexes, dstIndexes) {\n  const { clipboard, d } = this;\n  const { cellmm } = d;\n  const [[sri, sci], [eri, eci]] = srcIndexes;\n  const [[dsri, dsci]] = dstIndexes;\n  const ncellmm = {};\n  Object.keys(cellmm).forEach((ri) => {\n    Object.keys(cellmm[ri]).forEach((ci) => {\n      let nri = parseInt(ri, 10);\n      let nci = parseInt(ci, 10);\n      if (ri >= sri && ri <= eri && ci >= sci && ci <= eci) {\n        nri = dsri + (nri - sri);\n        nci = dsci + (nci - sci);\n      }\n      ncellmm[nri] = ncellmm[nri] || {};\n      ncellmm[nri][nci] = cellmm[ri][ci];\n    });\n  });\n  // console.log('rn:', nsri - sri, ', cn:', nsci - sci);\n  moveMerges.call(this, [sri, sci], [eri, eci], dsri - sri, dsci - sci);\n  d.cellmm = ncellmm;\n  clipboard.clear();\n}\n\n// bss: { bt, bb, bl, br }\nfunction setStyleBorder(ri, ci, bss) {\n  const { styles } = this.d;\n  const cell = this.getCellOrNew(ri, ci);\n  let cstyle = {};\n  if (cell.si !== undefined) {\n    cstyle = helper.cloneDeep(styles[cell.si]);\n  }\n  Object.assign(cstyle, bss);\n  cell.si = this.addStyle(cstyle);\n}\n\nfunction setStyleBorders({ mode, style, color }) {\n  const { styles } = this.d;\n  const [[sri, sci], [eri, eci]] = this.selector.getRange();\n  const multiple = this.isMultiple();\n  if (!multiple) {\n    if (mode === 'inside' || mode === 'horizontal' || mode === 'vertical') {\n      return;\n    }\n  }\n  if (mode === 'outside' && !multiple) {\n    setStyleBorder.call(this, sri, sci, {\n      bt: [style, color], bb: [style, color], bl: [style, color], br: [style, color],\n    });\n  } else if (mode === 'none') {\n    for (let ri = sri; ri <= eri; ri += 1) {\n      for (let ci = sci; ci <= eci; ci += 1) {\n        const cell = this.getCell(ri, ci);\n        if (cell && cell.si !== undefined) {\n          const ns = helper.cloneDeep(styles[cell.si]);\n          ['bb', 'bt', 'bl', 'br'].forEach((prop) => {\n            if (ns[prop]) delete ns[prop];\n          });\n          cell.si = this.addStyle(ns);\n        }\n      }\n    }\n  } else if (mode === 'all' || mode === 'inside' || mode === 'outside'\n    || mode === 'horizontal' || mode === 'vertical') {\n    const merges = [];\n    for (let ri = sri; ri <= eri; ri += 1) {\n      for (let ci = sci; ci <= eci; ci += 1) {\n        // jump merges -- start\n        const mergeIndexes = [];\n        for (let ii = 0; ii < merges.length; ii += 1) {\n          const [mri, mci, rn, cn] = merges[ii];\n          if (ri === mri + rn + 1) mergeIndexes.push(ii);\n          if (mri <= ri && ri <= mri + rn) {\n            if (ci === mci) {\n              ci += cn + 1;\n              break;\n            }\n          }\n        }\n        mergeIndexes.forEach(it => merges.splice(it, 1));\n        if (ci > eci) break;\n        // jump merges -- end\n        const cell = this.getCell(ri, ci);\n        let [rn, cn] = [0, 0];\n        if (cell && cell.merge) {\n          [rn, cn] = cell.merge;\n          merges.push([ri, ci, rn, cn]);\n        }\n        const mrl = rn > 0 && ri + rn === eri;\n        const mcl = cn > 0 && ci + cn === eci;\n        let bss = {};\n        if (mode === 'all') {\n          bss = {\n            bb: [style, color], br: [style, color], bl: [style, color], bt: [style, color],\n          };\n        } else if (mode === 'inside') {\n          if (!mcl && ci < eci) bss.br = [style, color];\n          if (!mrl && ri < eri) bss.bb = [style, color];\n        } else if (mode === 'horizontal') {\n          if (!mrl && ri < eri) bss.bb = [style, color];\n        } else if (mode === 'vertical') {\n          if (!mcl && ci < eci) bss.br = [style, color];\n        } else if (mode === 'outside' && multiple) {\n          if (sri === ri) bss.bt = [style, color];\n          if (mrl || eri === ri) bss.bb = [style, color];\n          if (sci === ci) bss.bl = [style, color];\n          if (mcl || eci === ci) bss.br = [style, color];\n        }\n        if (Object.keys(bss).length > 0) {\n          setStyleBorder.call(this, ri, ci, bss);\n        }\n        ci += cn;\n      }\n    }\n  } else if (mode === 'top' || mode === 'bottom') {\n    for (let ci = sci; ci <= eci; ci += 1) {\n      if (mode === 'top') {\n        setStyleBorder.call(this, sri, ci, { bt: [style, color] });\n        ci += this.getCellMerge(sri, ci)[1];\n      }\n      if (mode === 'bottom') {\n        setStyleBorder.call(this, eri, ci, { bb: [style, color] });\n        ci += this.getCellMerge(eri, ci)[1];\n      }\n    }\n  } else if (mode === 'left' || mode === 'right') {\n    for (let ri = sri; ri <= eri; ri += 1) {\n      if (mode === 'left') {\n        setStyleBorder.call(this, ri, sci, { bl: [style, color] });\n        ri += this.getCellMerge(ri, sci)[0];\n      }\n      if (mode === 'right') {\n        setStyleBorder.call(this, ri, eci, { br: [style, color] });\n        ri += this.getCellMerge(ri, eci)[0];\n      }\n    }\n  }\n}\n\nfunction getViewRangeIndexes(rowStart, rowLen, colStart, colLen) {\n  const { view } = this.options;\n  let [x, y] = [0, 0];\n  let [rowEnd, colEnd] = [rowStart, colStart];\n  for (let i = rowStart; i < rowLen; i += 1) {\n    y += this.getRowHeight(i);\n    rowEnd = i;\n    if (y > view.height()) break;\n  }\n  for (let j = colStart; j < colLen; j += 1) {\n    x += this.getColWidth(j);\n    colEnd = j;\n    if (x > view.width()) break;\n  }\n  return [rowStart, colStart, rowEnd, colEnd];\n}\n\nfunction getMergesInView(merges, viewRangeIndexes) {\n  const [sri, sci, eri, eci] = viewRangeIndexes;\n  const nmerges = [];\n  for (let i = 0; i < merges.length; i += 1) {\n    const [[msri, msci], [meri, meci]] = merges[i];\n    // console.log(viewRangeIndexes, ':', merges[i]);\n    if (msri > eri || sri > meri || msci > eci || sci > meci) {\n      // no intersection\n    } else {\n      nmerges.push(merges[i]);\n    }\n  }\n  return nmerges;\n}\n\nfunction eachMergesInView(viewRangeIndexes, cb) {\n  getMergesInView(this.d.merges, viewRangeIndexes).forEach(([[sri, sci]]) => {\n    cb(sri, sci);\n  });\n}\n\nfunction eachCellsInView(viewRangeIndexes, cb) {\n  const [sri, sci, eri, eci] = viewRangeIndexes;\n  const merges = getMergesInView(this.d.merges, viewRangeIndexes);\n  // console.log('merges:', merges);\n  for (let i = sri; i <= eri; i += 1) {\n    for (let j = sci; j <= eci; j += 1) {\n      let [mri, mci] = [i, j];\n      inMerges(merges, i, j, ([[msri, msci], [, meci]]) => {\n        [mri, mci] = [msri, msci];\n        if (msri !== i || msci !== j) {\n          j += (meci - j) + 1;\n        }\n      });\n      cb(i, j, mri, mci);\n    }\n  }\n}\n\nexport default class DataProxy {\n  constructor(options) {\n    this.options = options;\n    this.formulam = _formulas(options.formulas);\n    this.formatm = _formats(options.formats);\n    this.fontm = _fonts(options.fonts);\n    this.d = defaultData;\n    this.clipboard = new Clipboard();\n    this.history = new History();\n    this.scroll = new Scroll();\n    this.selector = new Selector();\n    this.change = () => {};\n  }\n\n  getView() {\n    return this.options.view;\n  }\n\n  load(data) {\n    this.d = helper.merge(defaultData, data);\n  }\n\n  canUndo() {\n    return this.history.canUndo();\n  }\n\n  canRedo() {\n    return this.history.canRedo();\n  }\n\n  undo() {\n    const { history } = this;\n    history.undo(this.d, (d) => {\n      this.d = d;\n    });\n  }\n\n  redo() {\n    const { history } = this;\n    history.redo(this.d, (d) => {\n      this.d = d;\n    });\n  }\n\n  /* for select start */\n  isMultiple() {\n    const [[sri, sci], [eri, eci]] = this.selector.getRange();\n    if (sri === eri && sci === eci) return false;\n    const cell = this.getCell(sri, sci);\n    if (cell && cell.merge) {\n      const [rn, cn] = cell.merge;\n      if (sri + rn === eri && sci + cn === eci) return false;\n    }\n    return true;\n  }\n\n  setSelectedIndexes(sIndexes, eIndexes) {\n    this.selector.setRange(sIndexes, eIndexes);\n  }\n\n  setSelectedCurrentIndexes(indexes) {\n    this.selector.indexes = indexes;\n  }\n\n  xyInSelectedRect(x, y) {\n    const {\n      left, top, width, height,\n    } = this.getSelectedRect();\n    const { row, col } = this.options;\n    const x1 = x - col.indexWidth;\n    const y1 = y - row.height;\n    // console.log('x:', x, ',y:', y, 'left:', left, 'top:', top);\n    return x1 > left && x1 < (left + width)\n      && y1 > top && y1 < (top + height);\n  }\n\n  getSelectedCellStyle() {\n    return this.getCellStyle(...this.selector.indexes);\n  }\n\n  getSelectedCellOrNew() {\n    return this.getCellOrNew(...this.selector.indexes);\n  }\n\n  getSelectedCell() {\n    return this.getCell(...this.selector.indexes);\n  }\n\n  setSelectedCellText(text) {\n    this.setCellText(...this.selector.indexes, text);\n  }\n\n  getSelectedRect() {\n    return this.getRect(...this.selector.getRange());\n  }\n\n  setSelectedCellAttr(property, value) {\n    addHistory.call(this);\n    const { selector } = this;\n    const { styles } = this.d;\n    if (property === 'merge') {\n      if (value) this.merge();\n      else this.unmerge();\n    } else if (property === 'border') {\n      setStyleBorders.call(this, value);\n    } else if (property === 'formula') {\n      const cell = this.getCellOrNew(...selector.indexes);\n      cell.text = `=${value}()`;\n    } else {\n      selector.each((ri, ci) => {\n        const cell = this.getCellOrNew(ri, ci);\n        let cstyle = {};\n        if (cell.si !== undefined) {\n          cstyle = helper.cloneDeep(styles[cell.si]);\n        }\n        if (property === 'format') {\n          cell.format = value;\n        } else if (property === 'font-bold' || property === 'font-italic'\n          || property === 'font-name' || property === 'font-size') {\n          const nfont = {};\n          nfont[property.split('-')[1]] = value;\n          cstyle.font = Object.assign(cstyle.font || {}, nfont);\n          cell.si = this.addStyle(cstyle);\n        } else if (property === 'strikethrough' || property === 'textwrap'\n          || property === 'underline'\n          || property === 'align' || property === 'valign'\n          || property === 'color' || property === 'bgcolor') {\n          cstyle[property] = value;\n          cell.si = this.addStyle(cstyle);\n        }\n      });\n    }\n    this.change(this.d);\n  }\n\n  getClipboardRect() {\n    const { clipboard } = this;\n    if (!clipboard.isClear()) {\n      const [sIndexes, eIndexes] = clipboard.get();\n      return this.getRect(sIndexes, eIndexes);\n    }\n    return { left: -100, top: -100 };\n  }\n\n  getRect([sri, sci], [eri, eci]) {\n    const { scroll } = this;\n    // console.log('sri:', sri, ',sci:', sci, ', eri:', eri, ', eci:', eci);\n    // no selector\n    if (sri < 0 && sci < 0) {\n      return {\n        left: 0, l: 0, top: 0, t: 0, scroll,\n      };\n    }\n    const { left, top } = this.cellPosition(sri, sci);\n    const height = this.rowSumHeight(sri, eri + 1);\n    const width = this.colSumWidth(sci, eci + 1);\n    // console.log('sri:', sri, ', sci:', sci, ', eri:', eri, ', eci:', eci);\n    let left0 = left - scroll.x;\n    let top0 = top - scroll.y;\n    const fsh = this.freezeTotalHeight();\n    const fsw = this.freezeTotalWidth();\n    if (fsw > 0 && fsw > left) {\n      left0 = left;\n    }\n    if (fsh > 0 && fsh > top) {\n      top0 = top;\n    }\n    return {\n      l: left,\n      t: top,\n      left: left0,\n      top: top0,\n      height,\n      width,\n      scroll,\n    };\n  }\n\n  getCellRectByXY(x, y) {\n    const { scroll, d } = this;\n    let { ri, top, height } = getCellRowByY.call(this, y, scroll.y);\n    let { ci, left, width } = getCellColByX.call(this, x, scroll.x);\n    if (ci === -1) {\n      width = this.colTotalWidth();\n    }\n    if (ri === -1) {\n      height = this.rowTotalHeight();\n    }\n    if (ri >= 0 || ci >= 0) {\n      inMerges(d.merges, ri, ci, ([[sri, sci]]) => {\n        ri = sri;\n        ci = sci;\n        ({\n          left, top, width, height,\n        } = this.cellRect(sri, sci));\n      });\n    }\n    return {\n      ri, ci, left, top, width, height,\n    };\n  }\n  /* for selector end */\n\n  calRangeIndexes2(ri, ci) {\n    const { indexes, sIndexes, eIndexes } = this.selector;\n    const [cri, cci] = indexes;\n    let [sri, sci] = sIndexes;\n    let [eri, eci] = eIndexes;\n    let [nri, nci] = [ri, ci];\n    if (ri < 0) nri = this.rowLen() - 1;\n    if (ci < 0) nci = this.colLen() - 1;\n    // row index\n    if (nri <= cri) [sri, eri] = [nri, cri];\n    else eri = nri;\n    // col index\n    if (nci <= cci) [sci, eci] = [nci, cci];\n    else eci = nci;\n    eachMerges.call(this, ([[msri, msci], [meri, meci]]) => {\n      // console.log(msri, eri, sri, meri, msci, eci, sci, meci);\n      if (msri > eri || sri > meri || msci > eci || sci > meci) {\n        // console.log('没有交集');\n      } else {\n        if (msri < sri) sri = msri;\n        if (msci < sci) sci = msci;\n        if (meri > eri) eri = meri;\n        if (meci > eci) eci = meci;\n      }\n    });\n    this.setSelectedIndexes([sri, sci], [eri, eci]);\n    return this.selector.getRange();\n  }\n\n  calRangeIndexes(ri, ci) {\n    const sIndexes = [ri, ci];\n    const eIndexes = [ri, ci];\n    if (ri === -1) {\n      sIndexes[0] = 0;\n      eIndexes[0] = this.rowLen() - 1;\n    }\n    if (ci === -1) {\n      sIndexes[1] = 0;\n      eIndexes[1] = this.colLen() - 1;\n    }\n    let mIndexes = [sIndexes, eIndexes];\n    inMerges(this.d.merges, ri, ci, (merge) => {\n      // console.log('merge:', merge);\n      mIndexes = merge;\n    });\n    this.setSelectedIndexes(...mIndexes);\n    return mIndexes;\n  }\n\n  copy() {\n    const { sIndexes, eIndexes } = this.selector;\n    this.clipboard.copy(sIndexes, eIndexes);\n  }\n\n  cut() {\n    const { sIndexes, eIndexes } = this.selector;\n    this.clipboard.cut(sIndexes, eIndexes);\n  }\n\n  // what: all | text | format\n  paste(what = 'all') {\n    // console.log('sIndexes:', sIndexes);\n    const { clipboard } = this;\n    if (clipboard.isClear()) return;\n\n    const { sIndexes, eIndexes } = this.selector;\n    addHistory.call(this);\n    if (clipboard.isCopy()) {\n      copyPaste.call(this, clipboard.get(), [sIndexes, eIndexes], what);\n    } else if (clipboard.isCut()) {\n      cutPaste.call(this, clipboard.get(), [sIndexes, eIndexes]);\n    }\n    this.change(this.d);\n  }\n\n  autofill(sIndexes, eIndexes, what) {\n    addHistory.call(this);\n    copyPaste.call(this, this.selector.getRange(), [sIndexes, eIndexes], what, true);\n    this.change(this.d);\n  }\n\n  clearClipboard() {\n    this.clipboard.clear();\n  }\n\n  /* merge methods start */\n  eachMerges(cb) {\n    eachMerges.call(this, cb);\n  }\n\n  canUnmerge() {\n    const [[sri, sci], [eri, eci]] = this.selector.getRange();\n    const cell = this.getCell(sri, sci);\n    if (cell && cell.merge) {\n      const [rn, cn] = cell.merge;\n      if (sri + rn === eri && sci + cn === eci) return true;\n    }\n    return false;\n  }\n\n  merge() {\n    if (!this.isMultiple()) return;\n    const { sIndexes, eIndexes } = this.selector;\n    const [sri, sci] = sIndexes;\n    const [eri, eci] = eIndexes;\n    const rn = eri - sri;\n    const cn = eci - sci;\n    // console.log('merge:', rn, cn);\n    if (rn > 0 || cn > 0) {\n      addHistory.call(this);\n      const cell = this.getCellOrNew(sri, sci);\n      cell.merge = [rn, cn];\n      addMerges.call(this, sIndexes, eIndexes);\n      // delete merge cells\n      deleteCells.call(this, sIndexes, eIndexes);\n      // console.log('cell:', cell, this.d);\n      this.setCell(sri, sci, cell, 'all');\n      this.change(this.d);\n    }\n  }\n\n  unmerge() {\n    if (!this.canUnmerge()) return;\n    addHistory.call(this);\n    const { sIndexes, eIndexes } = this.selector;\n    const cell = this.getCell(...sIndexes);\n    delete cell.merge;\n    deleteMerges.call(this, sIndexes, eIndexes);\n    this.change(this.d);\n  }\n  /* merge methods end */\n\n  deleteCell(what = 'all') {\n    const { sIndexes, eIndexes } = this.selector;\n    addHistory.call(this);\n    deleteCells.call(this, sIndexes, eIndexes, what);\n    if (what === 'all' || what === 'format') {\n      deleteMerges.call(this, sIndexes, eIndexes);\n    }\n    this.change(this.d);\n  }\n\n  insertRow(n = 1) {\n    addHistory.call(this);\n    const { cellmm, rowm } = this.d;\n    const [sri] = this.selector.sIndexes;\n    const ndata = {};\n    Object.keys(cellmm).forEach((ri) => {\n      let nri = parseInt(ri, 10);\n      if (nri >= sri) {\n        nri += n;\n      }\n      ndata[nri] = cellmm[ri];\n    });\n    this.d.cellmm = ndata;\n    rowm.len = this.rowLen() + n;\n    modifyMerges.call(this, 'row', sri, n);\n    this.change(this.d);\n  }\n\n  deleteRow() {\n    addHistory.call(this);\n    const { cellmm, rowm } = this.d;\n    const [[sri], [eri]] = this.selector.getRange();\n    // console.log('min:', min, ',max:', max);\n    const n = eri - sri + 1;\n    const ndata = {};\n    Object.keys(cellmm).forEach((ri) => {\n      const nri = parseInt(ri, 10);\n      if (nri < sri) {\n        ndata[nri] = cellmm[nri];\n      } else if (ri > eri) {\n        ndata[nri - n] = cellmm[nri];\n      }\n    });\n    // console.log('cellmm:', cellmm, ', ndata:', ndata);\n    this.d.cellmm = ndata;\n    rowm.len = this.rowLen() - n;\n    modifyMerges.call(this, 'row', sri, -n);\n    this.change(this.d);\n  }\n\n  insertColumn(n = 1) {\n    addHistory.call(this);\n    const { cellmm, colm } = this.d;\n    const [, sci] = this.selector.sIndexes;\n    Object.keys(cellmm).forEach((ri) => {\n      const rndata = {};\n      Object.keys(cellmm[ri]).forEach((ci) => {\n        let nci = parseInt(ci, 10);\n        if (nci >= sci) {\n          nci += n;\n        }\n        rndata[nci] = cellmm[ri][ci];\n      });\n      cellmm[ri] = rndata;\n    });\n    colm.len = this.colLen() + n;\n    modifyMerges.call(this, 'col', sci, n);\n    this.change(this.d);\n  }\n\n  deleteColumn() {\n    addHistory.call(this);\n    const { cellmm, colm } = this.d;\n    const [[, sci], [, eci]] = this.selector.getRange();\n    const n = eci - sci + 1;\n    Object.keys(cellmm).forEach((ri) => {\n      const rndata = {};\n      Object.keys(cellmm[ri]).forEach((ci) => {\n        const nci = parseInt(ci, 10);\n        if (nci < sci) {\n          rndata[nci] = cellmm[ri][ci];\n        } else if (nci > eci) {\n          rndata[nci - n] = cellmm[ri][ci];\n        }\n      });\n      cellmm[ri] = rndata;\n    });\n    colm.len = this.colLen() - n;\n    // console.log('n:', n);\n    modifyMerges.call(this, 'col', sci, -n);\n    this.change(this.d);\n  }\n\n  scrollx(x, cb) {\n    const { scroll } = this;\n    const [, fci] = this.getFreeze();\n    const [\n      ci, left, width,\n    ] = helper.rangeReduceIf(fci, this.colLen(), 0, 0, x, i => this.getColWidth(i));\n    // console.log('fci:', fci, ', ci:', ci);\n    let x1 = left;\n    if (x > 0) x1 += width;\n    if (scroll.x !== x1) {\n      scroll.indexes[1] = x > 0 ? ci - fci : 0;\n      scroll.x = x1;\n      cb();\n    }\n  }\n\n  scrolly(y, cb) {\n    const { scroll } = this;\n    const [fri] = this.getFreeze();\n    const [\n      ri, top, height,\n    ] = helper.rangeReduceIf(fri, this.rowLen(), 0, 0, y, i => this.getRowHeight(i));\n    let y1 = top;\n    if (y > 0) y1 += height;\n    if (scroll.y !== y1) {\n      scroll.indexes[0] = y > 0 ? ri - fri : 0;\n      scroll.y = y1;\n      cb();\n    }\n  }\n\n  colTotalWidth() {\n    return this.colSumWidth(0, this.colLen());\n  }\n\n  rowTotalHeight() {\n    return this.rowSumHeight(0, this.rowLen());\n  }\n\n  cellRect(ri, ci) {\n    const { left, top } = this.cellPosition(ri, ci);\n    const cell = this.getCell(ri, ci);\n    let width = this.getColWidth(ci);\n    let height = this.getRowHeight(ri);\n    if (cell !== null) {\n      if (cell.merge) {\n        const [rn, cn] = cell.merge;\n        // console.log('cell.merge:', cell.merge);\n        if (rn > 0) {\n          for (let i = 1; i <= rn; i += 1) {\n            height += this.getRowHeight(ri + i);\n          }\n        }\n        if (cn > 0) {\n          for (let i = 1; i <= cn; i += 1) {\n            width += this.getColWidth(ci + i);\n          }\n        }\n      }\n    }\n    // console.log('data:', this.d);\n    return {\n      left, top, width, height, cell,\n    };\n  }\n\n  cellPosition(ri, ci) {\n    const left = this.colSumWidth(0, ci);\n    const top = this.rowSumHeight(0, ri);\n    return {\n      left, top,\n    };\n  }\n\n  getCellMerge(ri, ci) {\n    const cell = this.getCell(ri, ci);\n    if (cell && cell.merge) return cell.merge;\n    return [0, 0];\n  }\n\n  getCell(ri, ci) {\n    const { cellmm } = this.d;\n    if (cellmm[ri] !== undefined && cellmm[ri][ci] !== undefined) {\n      return cellmm[ri][ci];\n    }\n    return null;\n  }\n\n  getCellStyle(ri, ci) {\n    const cell = this.getCell(ri, ci);\n    const { styles } = this.d;\n    // console.log('options:', this.opitons.style);\n    return helper.merge(this.options.style, (cell && cell.si !== undefined) ? styles[cell.si] : {});\n  }\n\n  setCellText(ri, ci, text) {\n    addHistory.call(this);\n    const cell = this.getCellOrNew(ri, ci);\n    cell.text = text;\n    this.change(this.d);\n  }\n\n  // what: all | text | format\n  setCell(ri, ci, cell, what = 'all') {\n    const { cellmm } = this.d;\n    cellmm[ri] = cellmm[ri] || {};\n    if (what === 'all') {\n      cellmm[ri][ci] = cell;\n    } else if (what === 'text') {\n      cellmm[ri][ci] = cellmm[ri][ci] || {};\n      cellmm[ri][ci].text = cell.text;\n    } else if (what === 'format') {\n      cellmm[ri][ci] = cellmm[ri][ci] || {};\n      cellmm[ri][ci].si = cell.si;\n      if (cell.merge) cellmm[ri][ci].merge = cell.merge;\n    }\n  }\n\n  getCellOrNew(ri, ci) {\n    const { cellmm } = this.d;\n    cellmm[ri] = cellmm[ri] || {};\n    cellmm[ri][ci] = cellmm[ri][ci] || {};\n    // console.log('ri:', ri, ', ci:', ci, cellmm);\n    return cellmm[ri][ci];\n  }\n\n  getFreeze() {\n    return this.d.freeze;\n  }\n\n  freezeIsActive() {\n    const [ri, ci] = this.d.freeze;\n    return ri > 0 || ci > 0;\n  }\n\n  setFreeze(ri, ci) {\n    addHistory.call(this);\n    this.d.freeze[0] = ri;\n    this.d.freeze[1] = ci;\n  }\n\n  freezeTotalWidth() {\n    return this.colSumWidth(0, this.d.freeze[1]);\n  }\n\n  freezeTotalHeight() {\n    return this.rowSumHeight(0, this.d.freeze[0]);\n  }\n\n  colSumWidth(min, max) {\n    return helper.rangeSum(min, max, i => this.getColWidth(i));\n  }\n\n  rowSumHeight(min, max) {\n    return helper.rangeSum(min, max, i => this.getRowHeight(i));\n  }\n\n  rowEach(min, max, cb) {\n    let y = 0;\n    const { view } = this.options;\n    // console.log('min:', min, ', max:', max, ', scroll:', scroll);\n    for (let i = min; i <= max; i += 1) {\n      const rowHeight = this.getRowHeight(i);\n      cb(i, y, rowHeight);\n      y += rowHeight;\n      if (y > view.height()) break;\n    }\n  }\n\n  colEach(min, max, cb) {\n    let x = 0;\n    const { view } = this.options;\n    for (let i = min; i <= max; i += 1) {\n      const colWidth = this.getColWidth(i);\n      cb(i, x, colWidth);\n      x += colWidth;\n      if (x > view.width()) break;\n    }\n  }\n\n  rowLen() {\n    return this.d.rowm.len || this.options.row.len;\n  }\n\n  colLen() {\n    return this.d.colm.len || this.options.col.len;\n  }\n\n  getColWidth(index) {\n    const { colm } = this.d;\n    const { col } = this.options;\n    return colm[`${index}`] ? colm[`${index}`].width : col.width;\n  }\n\n  setColWidth(index, v) {\n    addHistory.call(this);\n    const { colm } = this.d;\n    colm[`${index}`] = colm[`${index}`] || {};\n    colm[`${index}`].width = v;\n    this.change(this.d);\n  }\n\n  getRowHeight(index) {\n    const { rowm } = this.d;\n    const { row } = this.options;\n    // console.log('rowm.index:', rowm[index], rowm[`${index}`]);\n    return rowm[`${index}`] ? rowm[`${index}`].height : row.height;\n  }\n\n  setRowHeight(index, v) {\n    addHistory.call(this);\n    const { rowm } = this.d;\n    rowm[`${index}`] = rowm[`${index}`] || {};\n    rowm[`${index}`].height = v;\n    this.change(this.d);\n  }\n\n  getFixedHeaderWidth() {\n    return this.options.col.indexWidth;\n  }\n\n  getFixedHeaderHeight() {\n    return this.options.row.height;\n  }\n\n  eachCells(cb) {\n    const { cellmm } = this.d;\n    // console.log('celmm:', cellmm);\n    Object.keys(cellmm).forEach((ri) => {\n      Object.keys(cellmm[ri]).forEach((ci) => {\n        cb(this.getCell(ri, ci), parseInt(ri, 10), parseInt(ci, 10));\n      });\n    });\n  }\n\n  eachMergesInView(viewRangeIndexes, cb) {\n    eachMergesInView.call(this, viewRangeIndexes, cb);\n  }\n\n  eachCellsInView(viewRangeIndexes, cb) {\n    eachCellsInView.call(this, viewRangeIndexes, cb);\n  }\n\n  // return [sri, sci, eri, eci]\n  getViewRangeIndexes(rowStart, rowLen, colStart, colLen) {\n    return getViewRangeIndexes.call(this, rowStart, rowLen, colStart, colLen);\n  }\n\n  addStyle(nstyle) {\n    const { styles } = this.d;\n    // console.log('old.styles:', styles, nstyle);\n    for (let i = 0; i < styles.length; i += 1) {\n      const style = styles[i];\n      if (helper.equals(style, nstyle)) return i;\n    }\n    styles.push(nstyle);\n    return styles.length - 1;\n  }\n\n  getStyle(index) {\n    return this.d.styles[index];\n  }\n}\n","export function bind(target, name, fn) {\n  target.addEventListener(name, fn);\n}\nexport function unbind(target, name, fn) {\n  target.removeEventListener(name, fn);\n}\nexport function mouseMoveUp(target, movefunc, upfunc) {\n  bind(target, 'mousemove', movefunc);\n  const t = target;\n  t.xEvtUp = (evt) => {\n    // console.log('mouseup>>>');\n    unbind(target, 'mousemove', movefunc);\n    unbind(target, 'mouseup', target.xEvtUp);\n    upfunc(evt);\n  };\n  bind(target, 'mouseup', target.xEvtUp);\n}\n\nfunction calTouchDirection(spanx, spany, evt, cb) {\n  let direction = '';\n  if (Math.abs(spanx) > Math.abs(spany)) {\n    // horizontal\n    direction = spanx > 0 ? 'right' : 'left';\n  } else {\n    // vertical\n    direction = spany > 0 ? 'down' : 'up';\n  }\n  cb(direction, spany, evt);\n}\n// cb = (direction, distance) => {}\nexport function bindTouch(target, { move, end }) {\n  let startx = 0;\n  let starty = 0;\n  bind(target, 'touchstart', (evt) => {\n    const { pageX, pageY } = evt.touches[0];\n    startx = pageX;\n    starty = pageY;\n  });\n  bind(target, 'touchmove', (evt) => {\n    if (!move) return;\n    const { pageX, pageY } = evt.changedTouches[0];\n    const spanx = pageX - startx;\n    const spany = pageY - starty;\n    // console.log('spanx:', spanx, ', spany:', spany);\n    calTouchDirection(spanx, spany, evt, move);\n    startx = pageX;\n    starty = pageY;\n    evt.preventDefault();\n  });\n  bind(target, 'touchend', (evt) => {\n    if (!end) return;\n    const { pageX, pageY } = evt.changedTouches[0];\n    const spanx = pageX - startx;\n    const spany = pageY - starty;\n    calTouchDirection(spanx, spany, evt, end);\n  });\n}\n","/* global window */\nexport const cssPrefix = 'x-spreadsheet';\nexport const dpr = window.devicePixelRatio || 1;\nexport default {\n  cssPrefix,\n  dpr,\n};\n","/* global window */\nimport { h } from './element';\nimport { mouseMoveUp } from '../event';\nimport { cssPrefix } from '../config';\n\nexport default class Resizer {\n  constructor(vertical = false, minDistance) {\n    this.moving = false;\n    this.vertical = vertical;\n    this.el = h('div', `${cssPrefix}-resizer ${vertical ? 'vertical' : 'horizontal'}`).children(\n      this.hoverEl = h('div', `${cssPrefix}-resizer-hover`)\n        .on('mousedown.stop', evt => this.mousedownHandler(evt)),\n      this.lineEl = h('div', `${cssPrefix}-resizer-line`).hide(),\n    ).hide();\n    // cell rect\n    this.cRect = null;\n    this.finishedFn = null;\n    this.minDistance = minDistance;\n  }\n\n  // rect : {top, left, width, height}\n  // line : {width, height}\n  show(rect, line) {\n    const {\n      moving, vertical, hoverEl, lineEl, el,\n    } = this;\n    if (moving) return;\n    this.cRect = rect;\n    const {\n      left, top, width, height,\n    } = rect;\n    el.offset({\n      left: vertical ? left + width - 5 : left,\n      top: vertical ? top : top + height - 5,\n    }).show();\n    hoverEl.offset({\n      width: vertical ? 5 : width,\n      height: vertical ? height : 5,\n    });\n    lineEl.offset({\n      width: vertical ? 0 : line.width,\n      height: vertical ? line.height : 0,\n    });\n  }\n\n  hide() {\n    this.el.offset({\n      left: 0,\n      top: 0,\n    }).hide();\n  }\n\n  mousedownHandler(evt) {\n    let startEvt = evt;\n    const {\n      el, lineEl, cRect, vertical, minDistance,\n    } = this;\n    let distance = vertical ? cRect.width : cRect.height;\n    // console.log('distance:', distance);\n    lineEl.show();\n    mouseMoveUp(window, (e) => {\n      this.moving = true;\n      if (startEvt !== null && e.buttons === 1) {\n        // console.log('top:', top, ', left:', top, ', cRect:', cRect);\n        if (vertical) {\n          distance += e.movementX;\n          if (distance > minDistance) {\n            el.css('left', `${cRect.left + distance}px`);\n          }\n        } else {\n          distance += e.movementY;\n          if (distance > minDistance) {\n            el.css('top', `${cRect.top + distance}px`);\n          }\n        }\n        startEvt = e;\n      }\n    }, () => {\n      startEvt = null;\n      lineEl.hide();\n      this.moving = false;\n      this.hide();\n      if (this.finishedFn) {\n        if (distance < minDistance) distance = minDistance;\n        this.finishedFn(cRect, distance);\n      }\n    });\n  }\n}\n","import { h } from './element';\nimport { cssPrefix } from '../config';\n\nexport default class Scrollbar {\n  constructor(vertical) {\n    this.vertical = vertical;\n    this.moveFn = null;\n    this.el = h('div', `${cssPrefix}-scrollbar ${vertical ? 'vertical' : 'horizontal'}`)\n      .child(this.contentEl = h('div', ''))\n      .on('mousemove.stop', () => {})\n      .on('scroll.stop', (evt) => {\n        const { scrollTop, scrollLeft } = evt.target;\n        // console.log('scrollTop:', scrollTop);\n        if (this.moveFn) {\n          this.moveFn(this.vertical ? scrollTop : scrollLeft, evt);\n        }\n        // console.log('evt:::', evt);\n      });\n  }\n\n  move(v) {\n    this.el.scroll(v);\n    return this;\n  }\n\n  scroll() {\n    return this.el.scroll();\n  }\n\n  set(distance, contentDistance) {\n    const d = distance - 1;\n    // console.log('distance:', distance, ', contentDistance:', contentDistance);\n    if (contentDistance > d) {\n      const cssKey = this.vertical ? 'height' : 'width';\n      this.el.css(cssKey, `${d}px`).show();\n      this.contentEl\n        .css(this.vertical ? 'width' : 'height', '1px')\n        .css(cssKey, `${contentDistance}px`);\n    } else {\n      this.el.hide();\n    }\n    return this;\n  }\n}\n","import { h } from './element';\nimport { cssPrefix } from '../config';\n\nconst selectorHeightBorderWidth = 2 * 2 - 1;\nlet startZIndex = 10;\n\nclass SelectorElement {\n  constructor() {\n    this.cornerEl = h('div', `${cssPrefix}-selector-corner`);\n    this.areaEl = h('div', `${cssPrefix}-selector-area`)\n      .child(this.cornerEl).hide();\n    this.clipboardEl = h('div', `${cssPrefix}-selector-clipboard`).hide();\n    this.autofillEl = h('div', `${cssPrefix}-selector-autofill`).hide();\n    this.el = h('div', `${cssPrefix}-selector`)\n      .css('z-index', `${startZIndex}`)\n      .children(this.areaEl, this.clipboardEl, this.autofillEl)\n      .hide();\n    startZIndex += 1;\n  }\n\n  setOffset(v) {\n    this.el.offset(v).show();\n    return this;\n  }\n\n  hide() {\n    this.el.hide();\n    return this;\n  }\n\n  setAreaOffset(v) {\n    const {\n      left, top, width, height,\n    } = v;\n    this.areaEl.offset({\n      width: width - selectorHeightBorderWidth + 0.8,\n      height: height - selectorHeightBorderWidth + 0.8,\n      left: left - 0.8,\n      top: top - 0.8,\n    }).show();\n  }\n\n  setClipboardOffset(v) {\n    const {\n      left, top, width, height,\n    } = v;\n    this.clipboardEl.offset({\n      left,\n      top,\n      width: width - 5,\n      height: height - 5,\n    });\n  }\n\n  showAutofill(v) {\n    const {\n      left, top, width, height,\n    } = v;\n    this.autofillEl.offset({\n      width: width - selectorHeightBorderWidth,\n      height: height - selectorHeightBorderWidth,\n      left,\n      top,\n    }).show();\n  }\n\n  hideAutofill() {\n    this.autofillEl.hide();\n  }\n\n  showClipboard() {\n    this.clipboardEl.show();\n  }\n\n  hideClipboard() {\n    this.clipboardEl.hide();\n  }\n}\n\nfunction calBRAreaOffset(offset) {\n  const { data } = this;\n  const {\n    left, top, width, height, scroll, l, t,\n  } = offset;\n  const ftwidth = data.freezeTotalWidth();\n  const ftheight = data.freezeTotalHeight();\n  let left0 = left - ftwidth;\n  if (ftwidth > l) left0 -= scroll.x;\n  let top0 = top - ftheight;\n  if (ftheight > t) top0 -= scroll.y;\n  return {\n    left: left0,\n    top: top0,\n    width,\n    height,\n  };\n}\n\nfunction calTAreaOffset(offset) {\n  const { data } = this;\n  const {\n    left, width, height, l, t, scroll,\n  } = offset;\n  const ftwidth = data.freezeTotalWidth();\n  let left0 = left - ftwidth;\n  if (ftwidth > l) left0 -= scroll.x;\n  return {\n    left: left0, top: t, width, height,\n  };\n}\n\nfunction calLAreaOffset(offset) {\n  const { data } = this;\n  const {\n    top, width, height, l, t, scroll,\n  } = offset;\n  const ftheight = data.freezeTotalHeight();\n  let top0 = top - ftheight;\n  // console.log('ftheight:', ftheight, ', t:', t);\n  if (ftheight > t) top0 -= scroll.y;\n  return {\n    left: l, top: top0, width, height,\n  };\n}\n\nfunction setBRAreaOffset(offset) {\n  const { br } = this;\n  br.setAreaOffset(calBRAreaOffset.call(this, offset));\n}\n\nfunction setTLAreaOffset(offset) {\n  const { tl } = this;\n  tl.setAreaOffset(offset);\n}\n\nfunction setTAreaOffset(offset) {\n  const { t } = this;\n  t.setAreaOffset(calTAreaOffset.call(this, offset));\n}\n\nfunction setLAreaOffset(offset) {\n  const { l } = this;\n  l.setAreaOffset(calLAreaOffset.call(this, offset));\n}\n\nfunction setLClipboardOffset(offset) {\n  const { l } = this;\n  l.setClipboardOffset(calLAreaOffset.call(this, offset));\n}\n\nfunction setBRClipboardOffset(offset) {\n  const { br } = this;\n  br.setClipboardOffset(calBRAreaOffset.call(this, offset));\n}\n\nfunction setTLClipboardOffset(offset) {\n  const { tl } = this;\n  tl.setClipboardOffset(offset);\n}\n\nfunction setTClipboardOffset(offset) {\n  const { t } = this;\n  t.setClipboardOffset(calTAreaOffset.call(this, offset));\n}\n\nfunction setAllAreaOffset(offset) {\n  setBRAreaOffset.call(this, offset);\n  setTLAreaOffset.call(this, offset);\n  setTAreaOffset.call(this, offset);\n  setLAreaOffset.call(this, offset);\n}\n\nfunction setAllClipboardOffset(offset) {\n  setBRClipboardOffset.call(this, offset);\n  setTLClipboardOffset.call(this, offset);\n  setTClipboardOffset.call(this, offset);\n  setLClipboardOffset.call(this, offset);\n}\n\nexport default class Selector {\n  constructor(data) {\n    this.data = data;\n    this.br = new SelectorElement();\n    this.t = new SelectorElement();\n    this.l = new SelectorElement();\n    this.tl = new SelectorElement();\n    this.br.el.show();\n    this.offset = null;\n    this.areaOffset = null;\n    this.indexes = null;\n    this.sIndexes = null;\n    this.eIndexes = null;\n    this.saIndexes = null;\n    this.eaIndexes = null;\n    this.el = h('div', `${cssPrefix}-selectors`)\n      .children(\n        this.tl.el,\n        this.t.el,\n        this.l.el,\n        this.br.el,\n      ).hide();\n\n    startZIndex += 1;\n  }\n\n  hide() {\n    this.el.hide();\n  }\n\n  resetOffset() {\n    const {\n      data, tl, t, l, br,\n    } = this;\n    const freezeHeight = data.freezeTotalHeight();\n    const freezeWidth = data.freezeTotalWidth();\n    if (freezeHeight > 0 || freezeWidth > 0) {\n      tl.setOffset({ width: freezeWidth, height: freezeHeight });\n      t.setOffset({ left: freezeWidth, height: freezeHeight });\n      l.setOffset({ top: freezeHeight, width: freezeWidth });\n      br.setOffset({ left: freezeWidth, top: freezeHeight });\n    } else {\n      tl.hide();\n      t.hide();\n      l.hide();\n      br.setOffset({ left: 0, top: 0 });\n    }\n  }\n\n  resetAreaOffset() {\n    // console.log('offset:', offset);\n    const offset = this.data.getSelectedRect();\n    const coffset = this.data.getClipboardRect();\n    setAllAreaOffset.call(this, offset);\n    setAllClipboardOffset.call(this, coffset);\n    this.resetOffset();\n  }\n\n  resetBRTAreaOffset() {\n    const offset = this.data.getSelectedRect();\n    const coffset = this.data.getClipboardRect();\n    setBRAreaOffset.call(this, offset);\n    setTAreaOffset.call(this, offset);\n    setBRClipboardOffset.call(this, coffset);\n    setTClipboardOffset.call(this, coffset);\n    this.resetOffset();\n  }\n\n  resetBRLAreaOffset() {\n    const offset = this.data.getSelectedRect();\n    const coffset = this.data.getClipboardRect();\n    setBRAreaOffset.call(this, offset);\n    setLAreaOffset.call(this, offset);\n    setBRClipboardOffset.call(this, coffset);\n    setLClipboardOffset.call(this, coffset);\n    this.resetOffset();\n  }\n\n  set(ri, ci, indexesUpdated = true) {\n    const { data } = this;\n    const [sIndexes, eIndexes] = data.calRangeIndexes(ri, ci);\n    if (indexesUpdated) {\n      let [cri, cci] = [ri, ci];\n      if (ri < 0) cri = 0;\n      if (ci < 0) cci = 0;\n      data.setSelectedCurrentIndexes([cri, cci]);\n      this.indexes = [cri, cci];\n    }\n\n    this.moveIndexes = sIndexes;\n    this.sIndexes = sIndexes;\n    this.eIndexes = eIndexes;\n    this.resetAreaOffset();\n    this.el.show();\n  }\n\n  setEnd(ri, ci) {\n    const { data } = this;\n    const [sIndexes, eIndexes] = data.calRangeIndexes2(ri, ci);\n    this.sIndexes = sIndexes;\n    this.eIndexes = eIndexes;\n    this.reset();\n  }\n\n  reset() {\n    setAllAreaOffset.call(this, this.data.getSelectedRect());\n  }\n\n  showAutofill(ri, ci) {\n    if (ri === -1 && ci === -1) return;\n    // console.log('ri:', ri, ', ci:', ci);\n    const [sri, sci] = this.sIndexes;\n    const [eri, eci] = this.eIndexes;\n    const [nri, nci] = [ri, ci];\n    // const rn = eri - sri;\n    // const cn = eci - sci;\n    const srn = sri - ri;\n    const scn = sci - ci;\n    const ern = eri - ri;\n    const ecn = eci - ci;\n    if (scn > 0) {\n      // left\n      // console.log('left');\n      this.saIndexes = [sri, nci];\n      this.eaIndexes = [eri, sci - 1];\n      // data.calRangeIndexes2(\n    } else if (srn > 0) {\n      // top\n      // console.log('top');\n      // nri = sri;\n      this.saIndexes = [nri, sci];\n      this.eaIndexes = [sri - 1, eci];\n    } else if (ecn < 0) {\n      // right\n      // console.log('right');\n      // nci = eci;\n      this.saIndexes = [sri, eci + 1];\n      this.eaIndexes = [eri, nci];\n    } else if (ern < 0) {\n      // bottom\n      // console.log('bottom');\n      // nri = eri;\n      this.saIndexes = [eri + 1, sci];\n      this.eaIndexes = [nri, eci];\n    } else {\n      // console.log('else:');\n      this.saIndexes = null;\n      this.eaIndexes = null;\n      return;\n    }\n    if (this.saIndexes !== null) {\n      // console.log(this.saIndexes, ':', this.eaIndexes);\n      const offset = this.data.getRect(this.saIndexes, this.eaIndexes);\n      offset.width += 2;\n      offset.height += 2;\n      const {\n        br, l, t, tl,\n      } = this;\n      br.showAutofill(calBRAreaOffset.call(this, offset));\n      l.showAutofill(calLAreaOffset.call(this, offset));\n      t.showAutofill(calTAreaOffset.call(this, offset));\n      tl.showAutofill(offset);\n    }\n  }\n\n  hideAutofill() {\n    ['br', 'l', 't', 'tl'].forEach((property) => {\n      this[property].hideAutofill();\n    });\n  }\n\n  showClipboard() {\n    const coffset = this.data.getClipboardRect();\n    setAllClipboardOffset.call(this, coffset);\n    ['br', 'l', 't', 'tl'].forEach((property) => {\n      this[property].showClipboard();\n    });\n  }\n\n  hideClipboard() {\n    ['br', 'l', 't', 'tl'].forEach((property) => {\n      this[property].hideClipboard();\n    });\n  }\n}\n","/* global window */\nimport { h } from './element';\nimport { bind } from '../event';\nimport { cssPrefix } from '../config';\n\nfunction inputMovePrev(evt) {\n  evt.preventDefault();\n  evt.stopPropagation();\n  const { filterItems } = this;\n  if (filterItems.length <= 0) return;\n  filterItems[this.itemIndex].toggle();\n  this.itemIndex -= 1;\n  if (this.itemIndex < 0) {\n    this.itemIndex = filterItems.length - 1;\n  }\n  filterItems[this.itemIndex].toggle();\n}\n\nfunction inputMoveNext(evt) {\n  evt.stopPropagation();\n  const { filterItems } = this;\n  if (filterItems.length <= 0) return;\n  filterItems[this.itemIndex].toggle();\n  this.itemIndex += 1;\n  if (this.itemIndex > filterItems.length - 1) {\n    this.itemIndex = 0;\n  }\n  filterItems[this.itemIndex].toggle();\n}\n\nfunction inputEnter(evt) {\n  evt.preventDefault();\n  const { filterItems } = this;\n  if (filterItems.length <= 0) return;\n  evt.stopPropagation();\n  filterItems[this.itemIndex].el.click();\n  this.hide();\n}\n\nfunction inputKeydownHandler(evt) {\n  const { keyCode } = evt;\n  if (evt.ctrlKey) {\n    evt.stopPropagation();\n  }\n  switch (keyCode) {\n    case 37: // left\n      evt.stopPropagation();\n      break;\n    case 38: // up\n      inputMovePrev.call(this, evt);\n      break;\n    case 39: // right\n      evt.stopPropagation();\n      break;\n    case 40: // down\n      inputMoveNext.call(this, evt);\n      break;\n    case 13: // enter\n      inputEnter.call(this, evt);\n      break;\n    case 9:\n      inputEnter.call(this, evt);\n      break;\n    default:\n      evt.stopPropagation();\n      break;\n  }\n}\n\nexport default class Suggest {\n  constructor(items, itemClick) {\n    this.filterItems = [];\n    this.items = items;\n    this.el = h('div', `${cssPrefix}-suggest`).hide();\n    this.itemClick = itemClick;\n    this.itemIndex = 0;\n  }\n\n  setOffset(v) {\n    this.el.cssRemoveKeys('top', 'bottom')\n      .offset(v);\n  }\n\n  hide() {\n    this.filterItems = [];\n    this.itemIndex = 0;\n    this.el.hide();\n  }\n\n  search(word) {\n    let { items } = this;\n    if (!/^\\s*$/.test(word)) {\n      items = items.filter(it => it.key.startsWith(word.toUpperCase()));\n    }\n    items = items.map((it) => {\n      const item = h('div', `${cssPrefix}-item`)\n        .child(it.key)\n        .on('click.stop', () => {\n          this.itemClick(it);\n          this.hide();\n        });\n      item.child(h('div', 'label').html(it.title || it.label));\n      return item;\n    });\n    this.filterItems = items;\n    if (items.length <= 0) {\n      return;\n    }\n    items[0].toggle();\n    this.el.html('').children(...items).show();\n  }\n\n  bindInputEvents(input) {\n    input.on('keydown', evt => inputKeydownHandler.call(this, evt));\n    bind(window, 'click', (evt) => {\n      if (this.el.contains(evt.target)) return;\n      this.hide();\n    });\n  }\n}\n","//* global window */\nimport { h } from './element';\nimport Suggest from './suggest';\nimport { cssPrefix } from '../config';\n// import { mouseMoveUp } from '../event';\n\nfunction resetTextareaSize() {\n  if (!/^\\s*$/.test(this.inputText)) {\n    const {\n      textlineEl, textEl, areaOffset,\n    } = this;\n    const tlineWidth = textlineEl.offset().width + 9;\n    const maxWidth = this.viewFn().width - areaOffset.left - 9;\n    // console.log('tlineWidth:', tlineWidth, ':', maxWidth);\n    if (tlineWidth > areaOffset.width) {\n      let twidth = tlineWidth;\n      if (tlineWidth > maxWidth) {\n        twidth = maxWidth;\n        let h1 = parseInt(tlineWidth / maxWidth, 10);\n        h1 += (tlineWidth % maxWidth) > 0 ? 1 : 0;\n        h1 *= this.rowHeight;\n        if (h1 > areaOffset.height) {\n          textEl.css('height', `${h1}px`);\n        }\n      }\n      textEl.css('width', `${twidth}px`);\n    }\n  }\n}\n\nfunction inputEventHandler(evt) {\n  const v = evt.target.value;\n  // console.log(evt, 'v:', v);\n  this.inputText = v;\n  const start = v.lastIndexOf('=');\n  const { suggest, textlineEl } = this;\n  if (start !== -1) {\n    suggest.search(v.substring(start + 1));\n  } else {\n    suggest.hide();\n  }\n  textlineEl.html(v);\n  resetTextareaSize.call(this);\n}\n\nfunction setTextareaRange(position) {\n  const { el } = this.textEl;\n  setTimeout(() => {\n    el.focus();\n    el.setSelectionRange(position, position);\n  }, 0);\n}\n\nfunction setText(text, position) {\n  const { textEl, textlineEl } = this;\n  // firefox bug\n  textEl.el.blur();\n\n  textEl.val(text);\n  textlineEl.html(text);\n  setTextareaRange.call(this, position);\n}\n\nfunction suggestItemClick(it) {\n  const { inputText } = this;\n  const start = inputText.lastIndexOf('=');\n  const sit = inputText.substring(0, start + 1);\n  let eit = inputText.substring(start + 1);\n  if (eit.indexOf(')') !== -1) {\n    eit = eit.substring(eit.indexOf(')'));\n  } else {\n    eit = '';\n  }\n  this.inputText = `${sit + it.key}(`;\n  // console.log('inputText:', this.inputText);\n  const position = this.inputText.length;\n  this.inputText += `)${eit}`;\n  setText.call(this, this.inputText, position);\n}\n\nexport default class Editor {\n  constructor(formulas, viewFn, rowHeight) {\n    this.viewFn = viewFn;\n    this.rowHeight = rowHeight;\n    this.suggest = new Suggest(formulas, (it) => {\n      suggestItemClick.call(this, it);\n    });\n    this.areaEl = h('div', `${cssPrefix}-editor-area`)\n      .children(\n        this.textEl = h('textarea', '')\n          .on('input', evt => inputEventHandler.call(this, evt)),\n        this.textlineEl = h('div', 'textline'),\n        this.suggest.el,\n      )\n      .on('mousemove.stop', () => {})\n      .on('mousedown.stop', () => {});\n    this.el = h('div', `${cssPrefix}-editor`)\n      .child(this.areaEl).hide();\n    this.suggest.bindInputEvents(this.textEl);\n\n    this.areaOffset = null;\n    this.freeze = { w: 0, h: 0 };\n    this.cell = null;\n    this.inputText = '';\n    this.change = () => {};\n  }\n\n  setFreezeLengths(width, height) {\n    this.freeze.w = width;\n    this.freeze.h = height;\n  }\n\n  clear() {\n    const { cell } = this;\n    const cellText = (cell && cell.text) || '';\n    if (cellText !== this.inputText) {\n      this.change(this.inputText);\n    }\n    this.cell = null;\n    this.areaOffset = null;\n    this.inputText = '';\n    this.el.hide();\n    this.textEl.val('');\n    this.textlineEl.html('');\n  }\n\n  setOffset(offset, suggestPosition = 'top') {\n    const {\n      textEl, areaEl, suggest, freeze, el,\n    } = this;\n    if (offset) {\n      this.areaOffset = offset;\n      const {\n        left, top, width, height, l, t,\n      } = offset;\n      // console.log('left:', left, ',top:', top, ', freeze:', freeze);\n      const elOffset = { left: 0, top: 0 };\n      // top left\n      if (freeze.w > l && freeze.h > t) {\n        //\n      } else if (freeze.w < l && freeze.h < t) {\n        elOffset.left = freeze.w;\n        elOffset.top = freeze.h;\n      } else if (freeze.w > l) {\n        elOffset.top = freeze.h;\n      } else if (freeze.h > t) {\n        elOffset.left = freeze.w;\n      }\n      el.offset(elOffset);\n      areaEl.offset({ left: left - elOffset.left - 0.8, top: top - elOffset.top - 0.8 });\n      textEl.offset({ width: width - 9 + 0.8, height: height - 3 + 0.8 });\n      const sOffset = { left: 0 };\n      sOffset[suggestPosition] = height;\n      suggest.setOffset(sOffset);\n    }\n  }\n\n  setCell(cell) {\n    this.el.show();\n    this.cell = cell;\n    const text = (cell && cell.text) || '';\n    this.inputText = text;\n    // console.log('text>>:', text);\n    setText.call(this, text, text.length);\n    resetTextareaSize.call(this);\n  }\n}\n","/* global window */\nimport { h } from './element';\nimport { bind } from '../event';\nimport { cssPrefix } from '../config';\n\nconst menuItems = [\n  { key: 'copy', title: 'Copy', label: 'Ctrl+C' },\n  { key: 'cut', title: 'Cut', label: 'Ctrl+X' },\n  { key: 'paste', title: 'Paste', label: 'Ctrl+V' },\n  { key: 'paste-value', title: 'Paste values only', label: 'Ctrl+Shift+V' },\n  { key: 'paste-format', title: 'Paste format only', label: 'Ctrl+Alt+V' },\n  { key: 'divider' },\n  { key: 'insert-row', title: 'Insert row' },\n  { key: 'insert-column', title: 'Insert column' },\n  { key: 'divider' },\n  { key: 'delete-row', title: 'Delete row' },\n  { key: 'delete-column', title: 'Delete column' },\n  { key: 'delete-cell-text', title: 'Delete cell' },\n];\n\nfunction buildMenuItem(item) {\n  if (item.key === 'divider') {\n    return h('div', `${cssPrefix}-item divider`);\n  }\n  return h('div', `${cssPrefix}-item`)\n    .on('click', () => {\n      this.itemClick(item.key);\n      this.hide();\n    })\n    .children(\n      item.title,\n      h('div', 'label').child(item.label || ''),\n    );\n}\n\nfunction buildMenu() {\n  return menuItems.map(it => buildMenuItem.call(this, it));\n}\n\nexport default class ContextMenu {\n  constructor(viewFn) {\n    this.el = h('div', `${cssPrefix}-contextmenu`)\n      .children(...buildMenu.call(this))\n      .hide();\n    this.viewFn = viewFn;\n    this.itemClick = () => {};\n    bind(window, 'click', (evt) => {\n      // console.log('outside:::', this.el.contains(evt.target));\n      if (this.el.contains(evt.target)) return;\n      this.hide();\n    });\n  }\n\n  hide() {\n    this.el.hide();\n  }\n\n  setPosition(x, y) {\n    const { el } = this;\n    const { height, width } = el.show().offset();\n    const view = this.viewFn();\n    let top = y;\n    let left = x;\n    if (view.height - y <= height) {\n      // -1 : firefox bug, focus contextmenu\n      top -= height - 1;\n    }\n    if (view.width - x <= width) {\n      // -1 : firefox bug, focus contextmenu\n      left -= width - 1;\n    }\n    el.offset({ left, top });\n  }\n}\n","/* global window */\nfunction dpr() {\n  return window.devicePixelRatio || 1;\n}\n\nfunction thinLineWidth() {\n  return dpr() - 0.5;\n}\n\nfunction npx(px) {\n  return parseInt(px * dpr(), 10);\n}\n\nclass DrawBox {\n  constructor(x, y, w, h, padding = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n    this.padding = padding;\n    this.bgcolor = '#ffffff';\n    // border: [width, style, color]\n    this.borderTop = null;\n    this.borderRight = null;\n    this.borderBottom = null;\n    this.borderLeft = null;\n  }\n\n  setBorders(bt, br, bb, bl) {\n    if (bt) this.borderTop = bt;\n    if (br) this.borderRight = br;\n    if (bb) this.borderBottom = bb;\n    if (bl) this.borderLeft = bl;\n  }\n\n  innerWidth() {\n    return this.width - (this.padding * 2);\n  }\n\n  innerHeight() {\n    return this.height - (this.padding * 2);\n  }\n\n  textx(align) {\n    const { width, padding } = this;\n    let { x } = this;\n    if (align === 'left') {\n      x += padding;\n    } else if (align === 'center') {\n      x += width / 2;\n    } else if (align === 'right') {\n      x += width - padding;\n    }\n    return x;\n  }\n\n  texty(align, fontSize, hoffset) {\n    const { height, padding } = this;\n    let { y } = this;\n    if (align === 'top') {\n      y += padding;\n    } else if (align === 'middle') {\n      const y1 = y + height / 2 - hoffset;\n      const y2 = y + padding + fontSize / 2 + 1;\n      if (y1 < y2) y = y2;\n      else y = y1;\n    } else if (align === 'bottom') {\n      y += height - hoffset * 2 - padding;\n    }\n    return y;\n  }\n\n  topxys() {\n    const { x, y, width } = this;\n    return [[x, y], [x + width, y]];\n  }\n\n  rightxys() {\n    const {\n      x, y, width, height,\n    } = this;\n    return [[x + width, y], [x + width, y + height]];\n  }\n\n  bottomxys() {\n    const {\n      x, y, width, height,\n    } = this;\n    return [[x, y + height], [x + width, y + height]];\n  }\n\n  leftxys() {\n    const {\n      x, y, height,\n    } = this;\n    return [[x, y], [x, y + height]];\n  }\n}\n\nfunction drawFontLine(type, tx, ty, align, valign, blheight, blwidth) {\n  const floffset = { x: 0, y: 0 };\n  if (type === 'underline') {\n    if (valign === 'bottom') {\n      floffset.y = 0;\n    } else if (valign === 'top') {\n      floffset.y = -(blheight + 2);\n    } else {\n      floffset.y = -blheight / 2;\n    }\n  } else if (type === 'strikethrough') {\n    if (valign === 'bottom') {\n      floffset.y = blheight / 2;\n    } else if (valign === 'top') {\n      floffset.y = -((blheight / 2) + 2);\n    }\n  }\n\n  if (align === 'center') {\n    floffset.x = blwidth / 2;\n  } else if (align === 'right') {\n    floffset.x = blwidth;\n  }\n  this.line(\n    [tx - floffset.x, ty - floffset.y],\n    [tx - floffset.x + blwidth, ty - floffset.y],\n  );\n}\n\nclass Draw {\n  constructor(el, width, height) {\n    this.el = el;\n    this.ctx = el.getContext('2d');\n    this.resize(width, height);\n    this.ctx.scale(dpr(), dpr());\n  }\n\n  resize(width, height) {\n    // console.log('dpr:', dpr);\n    this.el.style.width = `${width}px`;\n    this.el.style.height = `${height}px`;\n    this.el.width = npx(width);\n    this.el.height = npx(height);\n  }\n\n  clear() {\n    const { width, height } = this.el;\n    this.ctx.clearRect(0, 0, width, height);\n    return this;\n  }\n\n  attr(options) {\n    Object.assign(this.ctx, options);\n    return this;\n  }\n\n  save() {\n    this.ctx.save();\n    this.ctx.beginPath();\n    return this;\n  }\n\n  restore() {\n    this.ctx.restore();\n    return this;\n  }\n\n  beginPath() {\n    this.ctx.beginPath();\n    return this;\n  }\n\n  translate(x, y) {\n    this.ctx.translate(npx(x), npx(y));\n    return this;\n  }\n\n  fillRect(x, y, w, h) {\n    this.ctx.fillRect(npx(x) - 0.5, npx(y) - 0.5, npx(w), npx(h));\n    return this;\n  }\n\n  fillText(text, x, y) {\n    this.ctx.fillText(text, npx(x), npx(y));\n    return this;\n  }\n\n  /*\n    txt: render text\n    box: DrawBox\n    attr: {\n      align: left | center | right\n      valign: top | middle | bottom\n      color: '#333333',\n      textDecoration: 'normal',\n      strikethrought: false,\n      font: {\n        name: 'Arial',\n        size: 14,\n        bold: false,\n        italic: false,\n      }\n    }\n    textWrap: text wrapping\n  */\n  text(txt, box, attr = {}, textWrap = true) {\n    const { ctx } = this;\n    const {\n      align, valign, font, color, strikethrough, underline,\n    } = attr;\n    const tx = box.textx(align);\n    ctx.save();\n    this.attr({\n      textAlign: align,\n      textBaseline: valign,\n      font: `${font.italic ? 'italic' : ''} ${font.bold ? 'bold' : ''} ${npx(font.size)}px ${font.name}`,\n      fillStyle: color,\n      strokeStyle: color,\n    });\n    const txtWidth = ctx.measureText(txt).width;\n    let hoffset = 0;\n    if (textWrap) {\n      const n = Math.ceil(txtWidth / box.innerWidth());\n      hoffset = ((n - 1) * font.size) / 2;\n    }\n    let ty = box.texty(valign, font.size, hoffset);\n    // console.log('tx: ', tx, ', ty:', ty);\n    if (textWrap && txtWidth > box.innerWidth()) {\n      const textLine = { len: 0, start: 0 };\n      for (let i = 0; i < txt.length; i += 1) {\n        if (textLine.len >= box.innerWidth()) {\n          this.fillText(txt.substring(textLine.start, i), tx, ty);\n          if (strikethrough) {\n            drawFontLine.call(this, 'strikethrough', tx, ty, align, valign, font.size, textLine.len);\n          }\n          if (underline) {\n            drawFontLine.call(this, 'underline', tx, ty, align, valign, font.size, textLine.len);\n          }\n          ty += font.size + 2;\n          textLine.len = 0;\n          textLine.start = i;\n        }\n        textLine.len += ctx.measureText(txt[i]).width;\n      }\n      if (textWrap && textLine.len > 0) {\n        this.fillText(txt.substring(textLine.start), tx, ty);\n        if (strikethrough) {\n          drawFontLine.call(this, 'strikethrough', tx, ty, align, valign, font.size, textLine.len);\n        }\n        if (underline) {\n          drawFontLine.call(this, 'underline', tx, ty, align, valign, font.size, textLine.len);\n        }\n      }\n    } else {\n      this.fillText(txt, tx, ty);\n      if (strikethrough) {\n        drawFontLine.call(this, 'strikethrough', tx, ty, align, valign, font.size, txtWidth);\n      }\n      if (underline) {\n        drawFontLine.call(this, 'underline', tx, ty, align, valign, font.size, txtWidth);\n      }\n    }\n    ctx.restore();\n    return this;\n  }\n\n  border(style, color) {\n    const { ctx } = this;\n    ctx.lineWidth = thinLineWidth;\n    ctx.strokeStyle = color;\n    // console.log('style:', style);\n    if (style === 'medium') {\n      ctx.lineWidth = npx(1) + 0.5;\n    } else if (style === 'thick') {\n      ctx.lineWidth = npx(2);\n    } else if (style === 'dashed') {\n      ctx.setLineDash([npx(3), npx(2)]);\n    } else if (style === 'dotted') {\n      ctx.setLineDash([npx(1), npx(1)]);\n    } else if (style === 'double') {\n      ctx.setLineDash([npx(2), 0]);\n    }\n    return this;\n  }\n\n  line(...xys) {\n    const { ctx } = this;\n    if (xys.length > 1) {\n      const [x, y] = xys[0];\n      ctx.moveTo(npx(x) - 0.5, npx(y) - 0.5);\n      for (let i = 1; i < xys.length; i += 1) {\n        const [x1, y1] = xys[i];\n        ctx.lineTo(npx(x1) - 0.5, npx(y1) - 0.5);\n      }\n      ctx.stroke();\n    }\n    return this;\n  }\n\n  strokeBorders(box) {\n    const { ctx } = this;\n    ctx.save();\n    ctx.beginPath();\n    // border\n    const {\n      borderTop, borderRight, borderBottom, borderLeft,\n    } = box;\n    if (borderTop) {\n      this.border(...borderTop);\n      this.line(...box.topxys());\n    }\n    if (borderRight) {\n      this.border(...borderRight);\n      this.line(...box.rightxys());\n    }\n    if (borderBottom) {\n      this.border(...borderBottom);\n      this.line(...box.bottomxys());\n    }\n    if (borderLeft) {\n      this.border(...borderLeft);\n      this.line(...box.leftxys());\n    }\n    ctx.restore();\n  }\n\n  rect(box) {\n    const { ctx } = this;\n    const {\n      x, y, width, height, bgcolor,\n    } = box;\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = bgcolor || '#fff';\n    ctx.strokeStyle = '#e6e6e6';\n    ctx.rect(npx(x) - 0.5, npx(y) - 0.5, npx(width), npx(height));\n    ctx.fill();\n    ctx.stroke();\n    this.strokeBorders(box);\n    ctx.restore();\n  }\n}\n\nexport default {};\nexport {\n  Draw,\n  DrawBox,\n  thinLineWidth,\n  npx,\n};\n","import alphabet from '../alphabet';\nimport { getFontSizePxByPt } from '../font';\nimport _cell from '../cell';\nimport {\n  Draw, DrawBox, thinLineWidth, npx,\n} from '../canvas/draw';\n// gobal var\nconst cellPaddingWidth = 5;\nconst tableFixedHeaderCleanStyle = { fillStyle: '#f4f5f8' };\nfunction tableFixedHeaderStyle() {\n  return {\n    textAlign: 'center',\n    textBaseline: 'middle',\n    font: `500 ${npx(12)}px Source Sans Pro`,\n    fillStyle: '#585757',\n    lineWidth: thinLineWidth(),\n    strokeStyle: '#e6e6e6',\n  };\n}\n\nfunction getDrawBox(rindex, cindex) {\n  const { data } = this;\n  const {\n    left, top, width, height,\n  } = data.cellRect(rindex, cindex);\n  return new DrawBox(left, top, width, height, cellPaddingWidth);\n}\n\nfunction renderCell(rindex, cindex) {\n  const { draw, data } = this;\n  const { cellmm } = data.d;\n  const cell = data.getCell(rindex, cindex);\n\n  const style = data.getCellStyle(rindex, cindex);\n  // console.log('style:', style);\n  const dbox = getDrawBox.call(this, rindex, cindex);\n  dbox.bgcolor = style.bgcolor;\n  draw.rect(dbox);\n  if (cell !== null) {\n    // render text\n    let cellText = _cell.render(rindex, cindex, cell.text || '', data.formulam, (y, x) => (cellmm[x] && cellmm[x][y] && cellmm[x][y].text) || '');\n    if (cell.format) {\n      // console.log(data.formatm, '>>', cell.format);\n      cellText = data.formatm[cell.format].render(cellText);\n    }\n    const font = Object.assign({}, style.font);\n    font.size = getFontSizePxByPt(font.size);\n    // console.log('style:', style);\n    draw.text(cellText, dbox, {\n      align: style.align,\n      valign: style.valign,\n      font,\n      color: style.color,\n      strikethrough: style.strikethrough,\n      underline: style.underline,\n    }, style.textwrap);\n  }\n}\n\nfunction renderCellBorder(ri, ci) {\n  const { draw, data } = this;\n  const cell = data.getCell(ri, ci);\n  if (cell && cell.si !== undefined) {\n    const style = data.getStyle(cell.si);\n    if (style) {\n      const {\n        bt, br, bb, bl,\n      } = style;\n      if (bt !== undefined || br !== undefined\n        || bb !== undefined || bl !== undefined) {\n        const dbox = getDrawBox.call(this, ri, ci);\n        dbox.setBorders(bt, br, bb, bl);\n        draw.strokeBorders(dbox);\n      }\n    }\n  }\n}\n\n/*\nfunction renderCellBorder(ri, ci, bs) {\n  const {\n    bt, br, bb, bl,\n  } = bs;\n  const { draw } = this;\n  if (bt !== undefined || br !== undefined\n    || bb !== undefined || bl !== undefined) {\n    const dbox = getDrawBox.call(this, ri, ci);\n    dbox.setBorders(bt, br, bb, bl);\n    draw.strokeBorders(dbox);\n  }\n}\n*/\n\nfunction renderContent(rowStart, rowLen, colStart, colLen, scrollOffset) {\n  const { draw, data } = this;\n  const { col, row } = data.options;\n  draw.save();\n  draw.translate(col.indexWidth, row.height)\n    .translate(-scrollOffset.x, -scrollOffset.y);\n\n  const viewRangeIndexes = data.getViewRangeIndexes(rowStart, rowLen, colStart, colLen);\n  // console.log('data.scroll:', data.scroll.indexes, ':', viewRangeIndexes);\n  // render cell at first\n  data.eachCellsInView(viewRangeIndexes, (ri, ci) => renderCell.call(this, ri, ci));\n  // render mergeCell at second\n  data.eachMergesInView(viewRangeIndexes, (ri, ci) => renderCell.call(this, ri, ci));\n  // render border at last\n  data.eachCellsInView(viewRangeIndexes, (ri, ci, mri, mci) => {\n    // renderCellBorder.call(this, ri, ci, bt, br, bb, bl);\n    renderCellBorder.call(this, mri, mci);\n  });\n\n  /*\n  data.eachCellsInView(\n    rowStart,\n    rowLen,\n    colStart,\n    colLen,\n    true,\n    (cell, ri, ci) => {\n      renderCell.call(this, ri, ci);\n    },\n  );\n  // border\n  data.eachCellsInView(\n    rowStart,\n    rowLen,\n    colStart,\n    colLen,\n    false,\n    (cell, ri, ci) => {\n      renderCellBorder.call(this, cell, ri, ci);\n    },\n  );\n  */\n  draw.restore();\n}\n\nfunction renderSelectedHeaderCell(x, y, w, h) {\n  const { draw } = this;\n  draw.save();\n  draw.attr({ fillStyle: 'rgba(75, 137, 255, 0.08)' })\n    .fillRect(x, y, w, h);\n  draw.restore();\n}\n\nfunction renderFixedHeaders(rowStart, rowLen, colStart, colLen) {\n  const { draw, data } = this;\n  const { col, row } = data.options;\n  draw.save();\n  const sumHeight = data.rowSumHeight(0, rowLen) + row.height;\n  const sumWidth = data.colSumWidth(0, colLen) + col.indexWidth;\n  // draw rect background\n  draw.attr(tableFixedHeaderCleanStyle)\n    .fillRect(0, 0, col.indexWidth, sumHeight)\n    .fillRect(0, 0, sumWidth, row.height);\n\n  const [[sri, sci], [eri, eci]] = data.selector.getRange();\n  // console.log(data.selectIndexes);\n  // draw text\n  // text font, align...\n  draw.attr(tableFixedHeaderStyle());\n  // y-header-text\n  data.rowEach(rowStart, rowLen, (i, y1, rowHeight) => {\n    const y = y1 + row.height;\n    // console.log('y1:', y1, ', i:', i);\n    draw.line([0, y], [col.indexWidth, y]);\n    if (i !== rowLen) {\n      if (sri <= i && i < eri + 1) {\n        renderSelectedHeaderCell.call(this, 0, y, col.indexWidth, rowHeight);\n      }\n      draw.fillText(i + 1, col.indexWidth / 2, y + (rowHeight / 2));\n    }\n  });\n  draw.line([col.indexWidth, 0], [col.indexWidth, sumHeight]);\n  // x-header-text\n  data.colEach(colStart, colLen, (i, x1, colWidth) => {\n    const x = x1 + col.indexWidth;\n    // console.log('x1:', x1, ', i:', i);\n    draw.line([x, 0], [x, row.height]);\n    if (i !== colLen) {\n      if (sci <= i && i < eci + 1) {\n        renderSelectedHeaderCell.call(this, x, 0, colWidth, row.height);\n      }\n      draw.fillText(alphabet.stringAt(i), x + (colWidth / 2), row.height / 2);\n    }\n  });\n  draw.line([0, row.height], [sumWidth, row.height]);\n  // left-top-cell\n  draw.attr({ fillStyle: '#f4f5f8' })\n    .fillRect(0, 0, col.indexWidth, row.height)\n    .line([col.indexWidth, 0], [col.indexWidth, row.height])\n    .line([0, row.height], [col.indexWidth, row.height]);\n  // context.closePath();\n  draw.restore();\n}\n\n/*\nfunction renderFreezeGridAndContent0(rowLen, colLen, width, height, scrollOffset) {\n  const { draw, data } = this;\n  const { col, row } = data.options;\n  draw.save()\n    .translate(col.indexWidth, row.height)\n    .translate(-scrollOffset.x, -scrollOffset.y);\n\n  // draw.fillRect(0, 0, width, height);\n  // draw.line([0, 0], [width, 0]);\n  // draw.line([0, 0], [0, height]);\n  data.rowEach(rowLen - 1, (i, y1, rowHeight) => {\n    // const y = y1 + rowHeight;\n    // console.log('y:', y);\n    // if (y >= 0) {\n    // draw.line([0, y], [width, y]);\n    data.colEach(colLen - 1, (j, x) => {\n      // if (x >= 0) {\n        // draw.line([x, y - rowHeight], [x, y]);\n      renderCell.call(this, i, j);\n      // }\n    });\n  });\n  draw.restore();\n}\n*/\n\nfunction renderFreezeHighlightLine(p1, p2, scrollOffset) {\n  const { draw, data } = this;\n  const { row, col } = data.options;\n  draw.save()\n    .translate(col.indexWidth, row.height)\n    .translate(-scrollOffset.x, -scrollOffset.y)\n    .attr({ strokeStyle: 'rgba(75, 137, 255, .6)' });\n  draw.line(p1, p2);\n  draw.restore();\n}\n\nfunction renderFreezeGridAndContent() {\n  const { data } = this;\n  const [fri, fci] = data.getFreeze();\n  const { scroll } = data;\n  const sheight = data.rowSumHeight(0, fri);\n  const twidth = data.colTotalWidth();\n  if (fri > 0) {\n    renderContent.call(\n      this,\n      0,\n      fri,\n      0,\n      data.colLen(),\n      { x: scroll.x, y: 0 },\n    );\n  }\n  const theight = data.rowTotalHeight();\n  const swidth = data.colSumWidth(0, fci);\n  if (fci) {\n    renderContent.call(\n      this,\n      0,\n      data.rowLen(),\n      0,\n      fci,\n      { x: 0, y: scroll.y },\n    );\n  }\n  renderFreezeHighlightLine.call(\n    this, [0, sheight], [twidth, sheight], { x: scroll.x, y: 0 },\n  );\n  renderFreezeHighlightLine.call(\n    this, [swidth, 0], [swidth, theight], { x: 0, y: scroll.y },\n  );\n}\n\nfunction renderAll(rowStart, rowLen, colStart, colLen, scrollOffset) {\n  // const { row, col, scrollOffset } = this;\n  // renderContentGrid.call(this, rowLen, colLen, scrollOffset);\n  renderContent.call(this, rowStart, rowLen, colStart, colLen, scrollOffset);\n  renderFixedHeaders.call(this, rowStart, rowLen, colStart, colLen);\n}\n\n/** end */\nclass Table {\n  constructor(el, data) {\n    this.el = el;\n    const view = data.getView();\n    this.draw = new Draw(el, view.width(), view.height());\n    this.data = data;\n  }\n\n  render() {\n    // resize canvas\n    const view = this.data.getView();\n    this.draw.resize(view.width(), view.height());\n    //\n    this.clear();\n    const { data } = this;\n    const { indexes } = data.scroll;\n    renderAll.call(this, indexes[0], data.rowLen(), indexes[1], data.colLen(), data.scroll);\n    const [fri, fci] = data.getFreeze();\n    if (fri > 0 || fci > 0) {\n      renderFreezeGridAndContent.call(this);\n      renderAll.call(this, 0, fri, 0, fci, { x: 0, y: 0 });\n    }\n  }\n\n  clear() {\n    this.draw.clear();\n  }\n}\n\nexport default Table;\n","/* global window */\nimport { Element, h } from './element';\nimport { bind } from '../event';\nimport { cssPrefix } from '../config';\n\nexport default class Dropdown extends Element {\n  constructor(title, width, showArrow, placement, ...children) {\n    super('div', `${cssPrefix}-dropdown ${placement}`);\n    this.title = title;\n    this.change = () => {};\n    if (typeof title === 'string') {\n      this.title = h('div', `${cssPrefix}-dropdown-title`).child(title);\n    } else if (showArrow) {\n      this.title.addClass('arrow-left');\n    }\n    this.contentEl = h('div', `${cssPrefix}-dropdown-content`)\n      .children(...children)\n      .css('width', width)\n      .hide();\n\n    this.headerEl = h('div', `${cssPrefix}-dropdown-header`);\n    this.headerEl.on('click', () => {\n      if (this.contentEl.css('display') !== 'block') {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }).children(\n      this.title,\n      showArrow ? h('div', `${cssPrefix}-icon arrow-right`).child(\n        h('div', `${cssPrefix}-icon-img arrow-down`),\n      ) : '',\n    );\n    this.children(this.headerEl, this.contentEl);\n    bind(window, 'click', (evt) => {\n      if (this.el.contains(evt.target)) return;\n      this.hide();\n    });\n  }\n\n  setTitle(title) {\n    this.title.html(title);\n    this.hide();\n  }\n\n  show() {\n    this.contentEl.show();\n    this.parent().active();\n  }\n\n  hide() {\n    this.parent().active(false);\n    this.contentEl.hide();\n  }\n}\n","import Dropdown from './dropdown';\nimport { h } from './element';\nimport { baseFonts } from '../font';\nimport { cssPrefix } from '../config';\n\nexport default class DropdownFont extends Dropdown {\n  constructor() {\n    const nfonts = baseFonts.map(it => h('div', `${cssPrefix}-item`)\n      .on('click', () => {\n        this.setTitle(it.title);\n        this.change(it);\n      })\n      .child(it.title));\n    super(baseFonts[0].title, '160px', true, 'bottom-left', ...nfonts);\n  }\n}\n","import Dropdown from './dropdown';\nimport { h } from './element';\nimport { fontSizes } from '../font';\nimport { cssPrefix } from '../config';\n\nexport default class DropdownFontSize extends Dropdown {\n  constructor() {\n    const nfontSizes = fontSizes.map(it => h('div', `${cssPrefix}-item`)\n      .on('click', () => {\n        this.setTitle(`${it.pt}`);\n        this.change(it);\n      })\n      .child(`${it.pt}`));\n    super('10', '60px', true, 'bottom-left', ...nfontSizes);\n  }\n}\n","import Dropdown from './dropdown';\nimport { h } from './element';\nimport { baseFormats } from '../format';\nimport { cssPrefix } from '../config';\n\nexport default class DropdownFormat extends Dropdown {\n  constructor() {\n    let nformats = baseFormats.slice(0);\n    nformats.splice(2, 0, { key: 'divider' });\n    nformats.splice(7, 0, { key: 'divider' });\n    nformats = nformats.map((it) => {\n      const item = h('div', `${cssPrefix}-item`);\n      if (it.key === 'divider') {\n        item.addClass('divider');\n      } else {\n        item.child(it.title)\n          .on('click', () => {\n            this.setTitle(it.title);\n            this.change(it);\n          });\n        if (it.label) item.child(h('div', 'label').html(it.label));\n      }\n      return item;\n    });\n    super('Normal', '220px', true, 'bottom-left', ...nformats);\n  }\n\n  setTitle(key) {\n    for (let i = 0; i < baseFormats.length; i += 1) {\n      if (baseFormats[i].key === key) {\n        this.title.html(baseFormats[i].title);\n      }\n    }\n  }\n}\n","import { Element, h } from './element';\nimport { cssPrefix } from '../config';\n\nexport default class Icon extends Element {\n  constructor(name) {\n    super('div', `${cssPrefix}-icon`);\n    this.iconNameEl = h('div', `${cssPrefix}-icon-img ${name}`);\n    this.child(this.iconNameEl);\n  }\n\n  setName(name) {\n    this.iconNameEl.className(`${cssPrefix}-icon-img ${name}`);\n  }\n}\n","import Dropdown from './dropdown';\nimport Icon from './icon';\nimport { h } from './element';\nimport { baseFormulas } from '../formula';\nimport { cssPrefix } from '../config';\n\nexport default class DropdownFormula extends Dropdown {\n  constructor() {\n    const nformulas = baseFormulas.map(it => h('div', `${cssPrefix}-item`)\n      .on('click', () => {\n        this.hide();\n        this.change(it);\n      })\n      .child(it.key));\n    super(new Icon('formula'), '180px', true, 'bottom-left', ...nformulas);\n  }\n}\n","import { h } from './element';\nimport { cssPrefix } from '../config';\n\nconst themeColorPlaceHolders = ['#ffffff', '#000100', '#e7e5e6', '#445569', '#5b9cd6', '#ed7d31', '#a5a5a5', '#ffc001', '#4371c6', '#71ae47'];\n\nconst themeColors = [\n  ['#f2f2f2', '#7f7f7f', '#d0cecf', '#d5dce4', '#deeaf6', '#fce5d5', '#ededed', '#fff2cd', '#d9e2f3', '#e3efd9'],\n  ['#d8d8d8', '#595959', '#afabac', '#adb8ca', '#bdd7ee', '#f7ccac', '#dbdbdb', '#ffe59a', '#b3c6e7', '#c5e0b3'],\n  ['#bfbfbf', '#3f3f3f', '#756f6f', '#8596b0', '#9cc2e6', '#f4b184', '#c9c9c9', '#fed964', '#8eaada', '#a7d08c'],\n  ['#a5a5a5', '#262626', '#3a3839', '#333f4f', '#2e75b5', '#c45a10', '#7b7b7b', '#bf8e01', '#2f5596', '#538136'],\n  ['#7f7f7f', '#0c0c0c', '#171516', '#222a35', '#1f4e7a', '#843c0a', '#525252', '#7e6000', '#203864', '#365624'],\n];\n\nconst standardColors = ['#c00000', '#fe0000', '#fdc101', '#ffff01', '#93d051', '#00b04e', '#01b0f1', '#0170c1', '#012060', '#7030a0'];\n\nfunction buildTd(bgcolor) {\n  return h('td', '').child(\n    h('div', `${cssPrefix}-color-palette-cell`)\n      .on('click.stop', () => this.change(bgcolor))\n      .css('background-color', bgcolor),\n  );\n}\n\nexport default class ColorPalette {\n  constructor() {\n    this.el = h('div', `${cssPrefix}-color-palette`);\n    this.change = () => {};\n    const table = h('table', '').children(\n      h('tbody', '').children(\n        h('tr', `${cssPrefix}-theme-color-placeholders`).children(\n          ...themeColorPlaceHolders.map(color => buildTd.call(this, color)),\n        ),\n        ...themeColors.map(it => h('tr', `${cssPrefix}-theme-colors`).children(\n          ...it.map(color => buildTd.call(this, color)),\n        )),\n        h('tr', `${cssPrefix}-standard-colors`).children(\n          ...standardColors.map(color => buildTd.call(this, color)),\n        ),\n      ),\n    );\n    this.el.child(table);\n  }\n}\n","import Dropdown from './dropdown';\nimport Icon from './icon';\nimport ColorPalette from './color_palette';\n\nexport default class DropdownColor extends Dropdown {\n  constructor(iconName, color) {\n    const icon = new Icon(iconName)\n      .css('height', '16px')\n      .css('border-bottom', `3px solid ${color}`);\n    const colorPalette = new ColorPalette();\n    colorPalette.change = (v) => {\n      this.setTitle(v);\n      this.change(v);\n    };\n    super(icon, 'auto', false, 'bottom-left', colorPalette.el);\n  }\n\n  setTitle(color) {\n    this.title.css('border-color', color);\n    this.hide();\n  }\n}\n","import Dropdown from './dropdown';\nimport { h } from './element';\nimport Icon from './icon';\nimport { cssPrefix } from '../config';\n\nfunction buildItemWithIcon(iconName) {\n  return h('div', `${cssPrefix}-item`).child(new Icon(iconName));\n}\n\nexport default class DropdownAlign extends Dropdown {\n  constructor(aligns, align) {\n    const icon = new Icon(`align-${align}`);\n    const naligns = aligns.map(it => buildItemWithIcon(`align-${it}`)\n      .on('click', () => {\n        this.setTitle(it);\n        this.change(it);\n      }));\n    super(icon, 'auto', true, 'bottom-left', ...naligns);\n  }\n\n  setTitle(align) {\n    this.title.setName(`align-${align}`);\n    this.hide();\n  }\n}\n","import Dropdown from './dropdown';\nimport { h } from './element';\nimport Icon from './icon';\nimport { cssPrefix } from '../config';\n\nconst lineTypes = [\n  ['thin', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"1\" style=\"user-select: none;\"><line x1=\"0\" y1=\"0.5\" x2=\"50\" y2=\"0.5\" stroke-width=\"1\" stroke=\"black\" style=\"user-select: none;\"></line></svg>'],\n  ['medium', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"2\" style=\"user-select: none;\"><line x1=\"0\" y1=\"1.0\" x2=\"50\" y2=\"1.0\" stroke-width=\"2\" stroke=\"black\" style=\"user-select: none;\"></line></svg>'],\n  ['thick', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"3\" style=\"user-select: none;\"><line x1=\"0\" y1=\"1.5\" x2=\"50\" y2=\"1.5\" stroke-width=\"3\" stroke=\"black\" style=\"user-select: none;\"></line></svg>'],\n  ['dashed', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"1\" style=\"user-select: none;\"><line x1=\"0\" y1=\"0.5\" x2=\"50\" y2=\"0.5\" stroke-width=\"1\" stroke=\"black\" stroke-dasharray=\"2\" style=\"user-select: none;\"></line></svg>'],\n  ['dotted', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"1\" style=\"user-select: none;\"><line x1=\"0\" y1=\"0.5\" x2=\"50\" y2=\"0.5\" stroke-width=\"1\" stroke=\"black\" stroke-dasharray=\"1\" style=\"user-select: none;\"></line></svg>'],\n  // ['double', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"3\" style=\"user-select: none;\"><line x1=\"0\" y1=\"0.5\" x2=\"50\" y2=\"0.5\" stroke-width=\"1\" stroke=\"black\" style=\"user-select: none;\"></line><line x1=\"0\" y1=\"2.5\" x2=\"50\" y2=\"2.5\" stroke-width=\"1\" stroke=\"black\" style=\"user-select: none;\"></line></svg>'],\n];\n\nexport default class DropdownLineType extends Dropdown {\n  constructor(type) {\n    const icon = new Icon('line-type');\n    let beforei = 0;\n    const lineTypeEls = lineTypes.map((it, iti) => h('div', `${cssPrefix}-item state ${type === it[0] ? 'checked' : ''}`)\n      .on('click', () => {\n        lineTypeEls[beforei].toggle('checked');\n        lineTypeEls[iti].toggle('checked');\n        beforei = iti;\n        this.hide();\n        this.change(it);\n      })\n      .child(\n        h('div', `${cssPrefix}-line-type`).html(it[1]),\n      ));\n\n    super(icon, 'auto', false, 'bottom-left', ...lineTypeEls);\n  }\n}\n","import { h } from './element';\nimport Icon from './icon';\nimport DropdownColor from './dropdown_color';\nimport DropdownLineType from './dropdown_linetype';\nimport { cssPrefix } from '../config';\n\nfunction buildTable(...trs) {\n  return h('table', '').child(\n    h('tbody', '').children(...trs),\n  );\n}\n\nfunction buildTd(iconName) {\n  return h('td', '').child(\n    h('div', `${cssPrefix}-border-palette-cell`).child(\n      new Icon(`border-${iconName}`),\n    ).on('click', () => {\n      this.mode = iconName;\n      const { mode, style, color } = this;\n      this.change({ mode, style, color });\n    }),\n  );\n}\n\nexport default class BorderPalette {\n  constructor() {\n    this.color = '#000';\n    this.style = 'thin';\n    this.mode = 'all';\n    this.change = () => {};\n    this.ddColor = new DropdownColor('line-color', this.color);\n    this.ddColor.change = (color) => {\n      this.color = color;\n    };\n    this.ddType = new DropdownLineType(this.style);\n    this.ddType.change = ([s]) => {\n      this.style = s;\n    };\n    this.el = h('div', `${cssPrefix}-border-palette`);\n    const table = buildTable(\n      h('tr', '').children(\n        h('td', `${cssPrefix}-border-palette-left`).child(\n          buildTable(\n            h('tr', '').children(\n              ...['all', 'inside', 'horizontal', 'vertical', 'outside'].map(it => buildTd.call(this, it)),\n            ),\n            h('tr', '').children(\n              ...['left', 'top', 'right', 'bottom', 'none'].map(it => buildTd.call(this, it)),\n            ),\n          ),\n        ),\n        h('td', `${cssPrefix}-border-palette-right`).children(\n          h('div', `${cssPrefix}-toolbar-btn`).child(this.ddColor.el),\n          h('div', `${cssPrefix}-toolbar-btn`).child(this.ddType.el),\n        ),\n      ),\n    );\n    this.el.child(table);\n  }\n}\n","import Dropdown from './dropdown';\nimport Icon from './icon';\nimport BorderPalette from './border_palette';\n\nexport default class DropdownBorder extends Dropdown {\n  constructor() {\n    const icon = new Icon('border-all');\n    const borderPalette = new BorderPalette();\n    borderPalette.change = (v) => {\n      this.change(v);\n      this.hide();\n    };\n    super(icon, 'auto', false, 'bottom-left', borderPalette.el);\n  }\n}\n","/* global window */\nimport { h } from './element';\nimport { bind } from '../event';\nimport tooltip from './tooltip';\nimport DropdownFont from './dropdown_font';\nimport DropdownFontSize from './dropdown_fontsize';\nimport DropdownFormat from './dropdown_format';\nimport DropdownFormula from './dropdown_formula';\nimport DropdownColor from './dropdown_color';\nimport DropdownAlign from './dropdown_align';\nimport DropdownBorder from './dropdown_border';\nimport Dropdown from './dropdown';\nimport Icon from './icon';\nimport { cssPrefix } from '../config';\n\nfunction buildIcon(name) {\n  return new Icon(name);\n}\n\nfunction buildButton(tooltipdata) {\n  return h('div', `${cssPrefix}-toolbar-btn`)\n    .on('mouseenter', (evt) => {\n      tooltip(tooltipdata, evt.target);\n    })\n    .attr('data-tooltip', tooltipdata);\n}\n\nfunction buildDivider() {\n  return h('div', `${cssPrefix}-toolbar-divider`);\n}\n\nfunction buildButtonWithIcon(tooltipdata, iconName, change = () => {}) {\n  return buildButton(tooltipdata)\n    .child(buildIcon(iconName))\n    .on('click', () => change());\n}\n\nfunction bindDropdownChange() {\n  this.ddFormat.change = it => this.change('format', it.key);\n  this.ddFont.change = it => this.change('font-name', it.key);\n  this.ddFormula.change = it => this.change('formula', it.key);\n  this.ddFontSize.change = it => this.change('font-size', it.pt);\n  this.ddTextColor.change = it => this.change('color', it);\n  this.ddFillColor.change = it => this.change('bgcolor', it);\n  this.ddAlign.change = it => this.change('align', it);\n  this.ddVAlign.change = it => this.change('valign', it);\n  this.ddBorder.change = it => this.change('border', it);\n}\n\n\nfunction toggleChange(type) {\n  let elName = type;\n  const types = type.split('-');\n  if (types.length > 1) {\n    types.forEach((t, i) => {\n      if (i === 0) elName = t;\n      else elName += t[0].toUpperCase() + t.substring(1);\n    });\n  }\n  const el = this[`${elName}El`];\n  el.toggle();\n  this.change(type, el.hasClass('active'));\n}\n\nclass DropdownMore extends Dropdown {\n  constructor() {\n    const icon = new Icon('ellipsis');\n    const moreBtns = h('div', `${cssPrefix}-toolbar-more`);\n    super(icon, 'auto', false, 'bottom-right', moreBtns);\n    this.moreBtns = moreBtns;\n    this.contentEl.css('max-width', '420px');\n  }\n}\n\nfunction moreResize() {\n  const {\n    el, btns, moreEl, ddMore, btnChildren,\n  } = this;\n  const { moreBtns, contentEl } = ddMore;\n  const elBox = el.box();\n\n  let sumWidth = 160;\n  let sumWidth2 = 12;\n  const list1 = [];\n  const list2 = [];\n  // console.log('elBox:', elBox);\n  btnChildren.forEach((it) => {\n    const rect = it.box();\n    sumWidth += rect.width;\n    // console.log('sumWidth:', sumWidth, elBox.width);\n    if (it.attr('data-tooltip') === 'More' || sumWidth < elBox.width) {\n      list1.push(it);\n    } else {\n      // console.log('margin:', it.computedStyle());\n      const { marginLeft, marginRight } = it.computedStyle();\n      sumWidth2 += rect.width + parseInt(marginLeft, 10) + parseInt(marginRight, 10);\n      list2.push(it);\n    }\n  });\n  btns.html('').children(...list1);\n  moreBtns.html('').children(...list2);\n  contentEl.css('width', `${sumWidth2}px`);\n  if (list2.length > 0) {\n    moreEl.show();\n  } else {\n    moreEl.hide();\n  }\n}\n\nexport default class Toolbar {\n  constructor(data) {\n    this.data = data;\n    this.change = () => {};\n    const { style } = data.options;\n    // console.log('data:', data);\n    this.ddFormat = new DropdownFormat();\n    this.ddFont = new DropdownFont();\n    this.ddFormula = new DropdownFormula();\n    this.ddFontSize = new DropdownFontSize();\n    this.ddTextColor = new DropdownColor('text-color', style.color);\n    this.ddFillColor = new DropdownColor('fill-color', style.bgcolor);\n    this.ddAlign = new DropdownAlign(['left', 'center', 'right'], style.align);\n    this.ddVAlign = new DropdownAlign(['top', 'middle', 'bottom'], style.valign);\n    this.ddBorder = new DropdownBorder();\n    this.ddMore = new DropdownMore();\n    this.btnChildren = [\n      this.undoEl = buildButtonWithIcon('Undo (Ctrl+Z)', 'undo', () => this.change('undo')),\n      this.redoEl = buildButtonWithIcon('Redo (Ctrl+Y)', 'redo', () => this.change('redo')),\n      // this.printEl = buildButtonWithIcon('Print (Ctrl+P)', 'print', () => this.change('print')),\n      this.paintformatEl = buildButtonWithIcon('Paint format', 'paintformat', () => toggleChange.call(this, 'paintformat')),\n      this.clearformatEl = buildButtonWithIcon('Clear format', 'clearformat', () => this.change('clearformat')),\n      buildDivider(),\n      buildButton('Format').child(this.ddFormat.el),\n      buildDivider(),\n      buildButton('Font').child(this.ddFont.el),\n      buildButton('Font size').child(this.ddFontSize.el),\n      buildDivider(),\n      this.fontBoldEl = buildButtonWithIcon('Bold (Ctrl+B)', 'bold', () => toggleChange.call(this, 'font-bold')),\n      this.fontItalicEl = buildButtonWithIcon('Italic (Ctrl+I)', 'italic', () => toggleChange.call(this, 'font-italic')),\n      this.underlineEl = buildButtonWithIcon('Underline (Ctrl+U)', 'underline', () => toggleChange.call(this, 'underline')),\n      this.strikethroughEl = buildButtonWithIcon('Strikethrough', 'strikethrough', () => toggleChange.call(this, 'strikethrough')),\n      buildButton('Text color').child(this.ddTextColor.el),\n      buildDivider(),\n      buildButton('Fill color').child(this.ddFillColor.el),\n      buildButton('Borders').child(this.ddBorder.el),\n      this.mergeEl = buildButtonWithIcon('Merge cells', 'merge', () => toggleChange.call(this, 'merge')),\n      buildDivider(),\n      buildButton('Horizontal align').child(this.ddAlign.el),\n      buildButton('Vertical align').child(this.ddVAlign.el),\n      this.textwrapEl = buildButtonWithIcon('Text wrapping', 'textwrap', () => toggleChange.call(this, 'textwrap')),\n      buildDivider(),\n      // this.linkEl = buildButtonWithIcon('Insert link', 'link'),\n      // this.chartEl = buildButtonWithIcon('Insert chart', 'chart'),\n      // this.autofilterEl = buildButtonWithIcon('Filter', 'autofilter'),\n      this.freezeEl = buildButtonWithIcon('Freeze cell', 'freeze', () => toggleChange.call(this, 'freeze')),\n      buildButton('Functions').child(this.ddFormula.el),\n      // buildDivider(),\n      this.moreEl = buildButton('More').child(this.ddMore.el).hide(),\n    ];\n    this.el = h('div', `${cssPrefix}-toolbar`);\n    this.btns = h('div', `${cssPrefix}-toolbar-btns`).children(...this.btnChildren);\n    this.el.child(this.btns);\n    bindDropdownChange.call(this);\n    this.reset();\n    setTimeout(() => {\n      moreResize.call(this);\n    }, 0);\n    bind(window, 'resize', () => {\n      moreResize.call(this);\n    });\n  }\n\n  paintformatActive() {\n    return this.paintformatEl.hasClass('active');\n  }\n\n  paintformatToggle() {\n    this.paintformatEl.toggle();\n  }\n\n  trigger(type) {\n    toggleChange.call(this, type);\n  }\n\n  reset() {\n    const { data } = this;\n    const style = data.getSelectedCellStyle();\n    const cell = data.getSelectedCell();\n    // console.log('canUndo:', data.canUndo());\n    this.undoEl.disabled(!data.canUndo());\n    this.redoEl.disabled(!data.canRedo());\n    this.mergeEl.active(data.canUnmerge())\n      .disabled(data.selector.seqe());\n    // this.mergeEl.disabled();\n    // console.log('selectedCell:', style, cell);\n    const { font } = style;\n    this.ddFont.setTitle(font.name);\n    this.ddFontSize.setTitle(font.size);\n    this.fontBoldEl.active(font.bold);\n    this.fontItalicEl.active(font.italic);\n    this.underlineEl.active(style.underline);\n    this.strikethroughEl.active(style.strikethrough);\n    this.ddTextColor.setTitle(style.color);\n    this.ddFillColor.setTitle(style.bgcolor);\n    this.ddAlign.setTitle(style.align);\n    this.ddVAlign.setTitle(style.valign);\n    this.textwrapEl.active(style.textwrap);\n    // console.log('freeze is Active:', data.freezeIsActive());\n    this.freezeEl.active(data.freezeIsActive());\n    if (cell) {\n      if (cell.format) {\n        this.ddFormat.setTitle(cell.format);\n      }\n    }\n  }\n}\n","/* global document */\nimport { h } from './element';\nimport { bind } from '../event';\nimport { cssPrefix } from '../config';\n\nexport default function tooltip(html, target) {\n  if (target.classList.contains('active')) {\n    return;\n  }\n  const {\n    left, top, width, height,\n  } = target.getBoundingClientRect();\n  const el = h('div', `${cssPrefix}-tooltip`).html(html).show();\n  document.body.appendChild(el.el);\n  const elBox = el.box();\n  // console.log('elBox:', elBox);\n  el.css('left', `${left + (width / 2) - (elBox.width / 2)}px`)\n    .css('top', `${top + height + 2}px`);\n\n  bind(target, 'mouseleave', () => {\n    if (document.body.contains(el.el)) {\n      document.body.removeChild(el.el);\n    }\n  });\n\n  bind(target, 'click', () => {\n    if (document.body.contains(el.el)) {\n      document.body.removeChild(el.el);\n    }\n  });\n}\n","/* global window */\nimport { h } from './element';\nimport { bind, mouseMoveUp, bindTouch } from '../event';\nimport Resizer from './resizer';\nimport Scrollbar from './scrollbar';\nimport Selector from './selector';\nimport Editor from './editor';\nimport ContextMenu from './contextmenu';\nimport Table from './table';\nimport Toolbar from './toolbar';\nimport { cssPrefix } from '../config';\n\nfunction scrollbarMove() {\n  const {\n    data, verticalScrollbar, horizontalScrollbar,\n  } = this;\n  const {\n    l, t, left, top, width, height,\n  } = data.getSelectedRect();\n  const tableOffset = this.getTableOffset();\n  // console.log(',l:', l, ', left:', left, ', tOffset.left:', tableOffset.width);\n  if (Math.abs(left) + width > tableOffset.width) {\n    horizontalScrollbar.move({ left: l + width - tableOffset.width });\n  } else {\n    const fsw = data.freezeTotalWidth();\n    if (left < fsw) {\n      horizontalScrollbar.move({ left: l - 1 - fsw });\n    }\n  }\n  // console.log('top:', top, ', height:', height, ', tof.height:', tableOffset.height);\n  if (Math.abs(top) + height > tableOffset.height) {\n    verticalScrollbar.move({ top: t + height - tableOffset.height - 1 });\n  } else {\n    const fsh = data.freezeTotalHeight();\n    if (top < fsh) {\n      verticalScrollbar.move({ top: t - 1 - fsh });\n    }\n  }\n}\n\nfunction selectorSet(multiple, ri, ci, indexesUpdated = true) {\n  if (ri === -1 && ci === -1) return;\n  // console.log(multiple, ', ri:', ri, ', ci:', ci);\n  const {\n    table, selector, toolbar,\n  } = this;\n  if (multiple) {\n    selector.setEnd(ri, ci);\n  } else {\n    selector.set(ri, ci, indexesUpdated);\n  }\n  toolbar.reset();\n  table.render();\n}\n\n// multiple: boolean\n// direction: left | right | up | down | row-first | row-last | col-first | col-last\nfunction selectorMove(multiple, direction) {\n  const {\n    selector, data,\n  } = this;\n  let [ri, ci] = selector.indexes;\n  const [eri, eci] = selector.eIndexes;\n  if (multiple) {\n    [ri, ci] = selector.moveIndexes;\n  }\n  // console.log('selector.move:', ri, ci);\n  if (direction === 'left') {\n    if (ci > 0) ci -= 1;\n  } else if (direction === 'right') {\n    if (eci !== ci) ci = eci;\n    if (ci < data.colLen() - 1) ci += 1;\n  } else if (direction === 'up') {\n    if (ri > 0) ri -= 1;\n  } else if (direction === 'down') {\n    if (eri !== ri) ri = eri;\n    if (ri < data.rowLen() - 1) ri += 1;\n  } else if (direction === 'row-first') {\n    ci = 0;\n  } else if (direction === 'row-last') {\n    ci = data.colLen() - 1;\n  } else if (direction === 'col-first') {\n    ri = 0;\n  } else if (direction === 'col-last') {\n    ri = data.rowLen() - 1;\n  }\n  if (multiple) {\n    selector.moveIndexes = [ri, ci];\n  }\n  selectorSet.call(this, multiple, ri, ci);\n  scrollbarMove.call(this);\n}\n\n// private methods\nfunction overlayerMousemove(evt) {\n  // console.log('x:', evt.offsetX, ', y:', evt.offsetY);\n  if (evt.buttons !== 0) return;\n  if (evt.target.className === `${cssPrefix}-resizer-hover`) return;\n  const { offsetX, offsetY } = evt;\n  const {\n    rowResizer, colResizer, tableEl, data,\n  } = this;\n  if (offsetX > data.getFixedHeaderWidth()\n    && offsetY > data.getFixedHeaderHeight()) {\n    rowResizer.hide();\n    colResizer.hide();\n    return;\n  }\n  const tRect = tableEl.box();\n  const cRect = data.getCellRectByXY(evt.offsetX, evt.offsetY);\n  if (cRect.ri >= 0 && cRect.ci === -1) {\n    cRect.width = data.getFixedHeaderWidth();\n    rowResizer.show(cRect, {\n      width: tRect.width,\n    });\n  } else {\n    rowResizer.hide();\n  }\n  if (cRect.ri === -1 && cRect.ci >= 0) {\n    cRect.height = data.getFixedHeaderHeight();\n    colResizer.show(cRect, {\n      height: tRect.height,\n    });\n  } else {\n    colResizer.hide();\n  }\n}\n\nfunction overlayerMousescroll(evt) {\n  const { verticalScrollbar, data } = this;\n  const { top } = verticalScrollbar.scroll();\n  // console.log('evt:::', evt.wheelDelta, evt.detail * 40);\n  let delta = evt.deltaY;\n  if (evt.detail) delta = evt.detail * 40;\n  if (delta > 0) {\n    // up\n    const ri = data.scroll.indexes[0] + 1;\n    if (ri < data.rowLen()) {\n      verticalScrollbar.move({ top: top + data.getRowHeight(ri) - 1 });\n    }\n  } else {\n    // down\n    const ri = data.scroll.indexes[0] - 1;\n    if (ri >= 0) {\n      verticalScrollbar.move({ top: ri === 0 ? 0 : top - data.getRowHeight(ri) });\n    }\n  }\n}\n\nfunction overlayerTouch(direction, distance) {\n  const { verticalScrollbar, horizontalScrollbar } = this;\n  const { top } = verticalScrollbar.scroll();\n  const { left } = horizontalScrollbar.scroll();\n  // console.log('direction:', direction, ', distance:', distance);\n  if (direction === 'left' || direction === 'right') {\n    horizontalScrollbar.move({ left: left - distance });\n  } else if (direction === 'up' || direction === 'down') {\n    verticalScrollbar.move({ top: top - distance });\n  }\n}\n\nfunction verticalScrollbarSet() {\n  const { data, verticalScrollbar } = this;\n  const { height } = this.getTableOffset();\n  verticalScrollbar.set(height, data.rowTotalHeight());\n}\n\nfunction horizontalScrollbarSet() {\n  const { data, horizontalScrollbar } = this;\n  const { width } = this.getTableOffset();\n  if (data) {\n    horizontalScrollbar.set(width, data.colTotalWidth());\n  }\n}\n\nfunction sheetFreeze() {\n  const {\n    selector, data, editor,\n  } = this;\n  const [ri, ci] = data.getFreeze();\n  if (ri > 0 || ci > 0) {\n    const fwidth = data.freezeTotalWidth();\n    const fheight = data.freezeTotalHeight();\n    editor.setFreezeLengths(fwidth, fheight);\n  }\n  selector.resetAreaOffset();\n}\n\nfunction sheetReset() {\n  const {\n    tableEl,\n    overlayerEl,\n    overlayerCEl,\n    table,\n    toolbar,\n    selector,\n  } = this;\n  const tOffset = this.getTableOffset();\n  const vRect = this.getRect();\n  tableEl.attr(vRect);\n  overlayerEl.offset(vRect);\n  overlayerCEl.offset(tOffset);\n  verticalScrollbarSet.call(this);\n  horizontalScrollbarSet.call(this);\n  sheetFreeze.call(this);\n  table.render();\n  toolbar.reset();\n  selector.reset();\n}\n\nfunction clearClipboard() {\n  const { data, selector } = this;\n  data.clearClipboard();\n  selector.hideClipboard();\n}\n\nfunction copy() {\n  const { data, selector } = this;\n  data.copy();\n  selector.showClipboard();\n}\n\nfunction cut() {\n  const { data, selector } = this;\n  data.cut();\n  selector.showClipboard();\n}\n\nfunction paste(what) {\n  this.data.paste(what);\n  sheetReset.call(this);\n}\n\nfunction toolbarChangePaintformatPaste() {\n  const { toolbar } = this;\n  if (toolbar.paintformatActive()) {\n    paste.call(this, 'format');\n    clearClipboard.call(this);\n    toolbar.paintformatToggle();\n  }\n}\n\nfunction overlayerMousedown(evt) {\n  // console.log(':::::overlayer.mousedown:', evt.detail, evt.button, evt.buttons, evt.shiftKey);\n  // console.log('evt.target.className:', evt.target.className);\n  const {\n    selector, data, table,\n  } = this;\n  const isAutofillEl = evt.target.className === `${cssPrefix}-selector-corner`;\n  let { ri, ci } = data.getCellRectByXY(evt.offsetX, evt.offsetY);\n  // console.log('ri:', ri, ', ci:', ci);\n  if (!evt.shiftKey) {\n    // console.log('selectorSetStart:::');\n    if (isAutofillEl) {\n      selector.showAutofill(ri, ci);\n    } else {\n      selectorSet.call(this, false, ri, ci);\n    }\n\n    // mouse move up\n    mouseMoveUp(window, (e) => {\n      // console.log('mouseMoveUp::::');\n      ({ ri, ci } = data.getCellRectByXY(e.offsetX, e.offsetY));\n      if (isAutofillEl) {\n        selector.showAutofill(ri, ci);\n      } else if (e.buttons === 1 && !e.shiftKey) {\n        selectorSet.call(this, true, ri, ci);\n      }\n    }, () => {\n      if (isAutofillEl) {\n        data.autofill(selector.saIndexes, selector.eaIndexes, 'all');\n        table.render();\n      }\n      selector.hideAutofill();\n      toolbarChangePaintformatPaste.call(this);\n    });\n  }\n\n  if (!isAutofillEl && evt.buttons === 1) {\n    if (evt.shiftKey) {\n      // console.log('shiftKey::::');\n      selectorSet.call(this, true, ri, ci);\n    }\n  }\n}\n\nfunction editorSetOffset() {\n  const { editor, data } = this;\n  const sOffset = data.getSelectedRect();\n  const tOffset = this.getTableOffset();\n  let sPosition = 'top';\n  // console.log('sOffset:', sOffset, ':', tOffset);\n  if (sOffset.top > tOffset.height / 2) {\n    sPosition = 'bottom';\n  }\n  editor.setOffset(sOffset, sPosition);\n}\n\nfunction editorSet() {\n  const { editor, data } = this;\n  editorSetOffset.call(this);\n  editor.setCell(data.getSelectedCell());\n  clearClipboard.call(this);\n}\n\nfunction verticalScrollbarMove(distance) {\n  const { data, table, selector } = this;\n  data.scrolly(distance, () => {\n    selector.resetBRLAreaOffset();\n    editorSetOffset.call(this);\n    table.render();\n  });\n}\n\nfunction horizontalScrollbarMove(distance) {\n  const { data, table, selector } = this;\n  data.scrollx(distance, () => {\n    selector.resetBRTAreaOffset();\n    editorSetOffset.call(this);\n    table.render();\n  });\n}\n\nfunction rowResizerFinished(cRect, distance) {\n  const { ri } = cRect;\n  const { table, selector, data } = this;\n  data.setRowHeight(ri, distance);\n  table.render();\n  selector.resetAreaOffset();\n  verticalScrollbarSet.call(this);\n  editorSetOffset.call(this);\n}\n\nfunction colResizerFinished(cRect, distance) {\n  const { ci } = cRect;\n  const { table, selector, data } = this;\n  data.setColWidth(ci, distance);\n  // console.log('data:', data);\n  table.render();\n  selector.resetAreaOffset();\n  horizontalScrollbarSet.call(this);\n  editorSetOffset.call(this);\n}\n\nfunction dataSetCellText(text) {\n  const { data, table } = this;\n  // const [ri, ci] = selector.indexes;\n  data.setSelectedCellText(text);\n  table.render();\n}\n\nfunction insertDeleteRowColumn(type) {\n  const { data } = this;\n  if (type === 'insert-row') {\n    data.insertRow();\n  } else if (type === 'delete-row') {\n    data.deleteRow();\n  } else if (type === 'insert-column') {\n    data.insertColumn();\n  } else if (type === 'delete-column') {\n    data.deleteColumn();\n  } else if (type === 'delete-cell') {\n    data.deleteCell();\n  } else if (type === 'delete-cell-format') {\n    data.deleteCell('format');\n  } else if (type === 'delete-cell-text') {\n    data.deleteCell('text');\n  }\n  clearClipboard.call(this);\n  sheetReset.call(this);\n}\n\nfunction toolbarChange(type, value) {\n  const { data } = this;\n  if (type === 'undo') {\n    this.undo();\n  } else if (type === 'redo') {\n    this.redo();\n  } else if (type === 'print') {\n    // print\n  } else if (type === 'paintformat') {\n    if (value === true) copy.call(this);\n    else clearClipboard.call(this);\n  } else if (type === 'clearformat') {\n    insertDeleteRowColumn.call(this, 'delete-cell-format');\n  } else if (type === 'link') {\n    // link\n  } else if (type === 'chart') {\n    // chart\n  } else if (type === 'filter') {\n    // filter\n  } else if (type === 'freeze') {\n    if (value) {\n      this.freeze(...data.selector.indexes);\n    } else {\n      this.freeze(0, 0);\n    }\n  } else {\n    data.setSelectedCellAttr(type, value);\n    if (type === 'formula') {\n      editorSet.call(this);\n    }\n    sheetReset.call(this);\n  }\n}\n\nfunction sheetInitEvents() {\n  const {\n    overlayerEl,\n    rowResizer,\n    colResizer,\n    verticalScrollbar,\n    horizontalScrollbar,\n    editor,\n    contextMenu,\n    data,\n    toolbar,\n  } = this;\n  // overlayer\n  overlayerEl\n    .on('mousemove', (evt) => {\n      overlayerMousemove.call(this, evt);\n    }).on('mousedown', (evt) => {\n      if (evt.buttons === 2) {\n        if (data.xyInSelectedRect(evt.offsetX, evt.offsetY)) {\n          contextMenu.setPosition(evt.offsetX, evt.offsetY);\n        } else {\n          contextMenu.hide();\n        }\n      } else if (evt.detail === 2) {\n        editorSet.call(this);\n      } else {\n        editor.clear();\n        overlayerMousedown.call(this, evt);\n      }\n    }).on('mousewheel.stop', (evt) => {\n      overlayerMousescroll.call(this, evt);\n    });\n\n  // slide on mobile\n  bindTouch(overlayerEl.el, {\n    move: (direction, d) => {\n      overlayerTouch.call(this, direction, d);\n    },\n  });\n\n  // toolbar change\n  toolbar.change = (type, value) => toolbarChange.call(this, type, value);\n\n  // resizer finished callback\n  rowResizer.finishedFn = (cRect, distance) => {\n    rowResizerFinished.call(this, cRect, distance);\n  };\n  colResizer.finishedFn = (cRect, distance) => {\n    colResizerFinished.call(this, cRect, distance);\n  };\n  // scrollbar move callback\n  verticalScrollbar.moveFn = (distance, evt) => {\n    verticalScrollbarMove.call(this, distance, evt);\n  };\n  horizontalScrollbar.moveFn = (distance, evt) => {\n    horizontalScrollbarMove.call(this, distance, evt);\n  };\n  // editor\n  editor.change = (itext) => {\n    dataSetCellText.call(this, itext);\n    toolbar.reset();\n  };\n  // contextmenu\n  contextMenu.itemClick = (type) => {\n    // console.log('type:', type);\n    if (type === 'copy') {\n      copy.call(this);\n    } else if (type === 'cut') {\n      cut.call(this);\n    } else if (type === 'paste') {\n      paste.call(this, 'all');\n    } else if (type === 'paste-value') {\n      paste.call(this, 'text');\n    } else if (type === 'paste-format') {\n      paste.call(this, 'format');\n    } else {\n      insertDeleteRowColumn.call(this, type);\n    }\n  };\n\n  bind(window, 'resize', () => {\n    this.reload();\n  });\n\n  bind(window, 'click', (evt) => {\n    this.focusing = overlayerEl.contains(evt.target);\n  });\n\n  // for selector\n  bind(window, 'keydown', (evt) => {\n    if (!this.focusing) return;\n    const keyCode = evt.keyCode || evt.which;\n    const {\n      key, ctrlKey, shiftKey, altKey,\n    } = evt;\n    // console.log('keydown.evt: ', keyCode);\n    if (ctrlKey) {\n      // const { sIndexes, eIndexes } = selector;\n      let what = 'all';\n      if (shiftKey) what = 'text';\n      if (altKey) what = 'format';\n      switch (keyCode) {\n        case 90:\n          // undo: ctrl + z\n          this.undo();\n          evt.preventDefault();\n          break;\n        case 89:\n          // redo: ctrl + y\n          this.redo();\n          evt.preventDefault();\n          break;\n        case 67:\n          // ctrl + c\n          copy.call(this);\n          evt.preventDefault();\n          break;\n        case 88:\n          // ctrl + x\n          cut.call(this);\n          evt.preventDefault();\n          break;\n        case 85:\n          // ctrl + u\n          toolbar.trigger('underline');\n          evt.preventDefault();\n          break;\n        case 86:\n          // ctrl + v\n          paste.call(this, what);\n          evt.preventDefault();\n          break;\n        case 37:\n          // ctrl + left\n          selectorMove.call(this, shiftKey, 'row-first');\n          evt.preventDefault();\n          break;\n        case 38:\n          // ctrl + up\n          selectorMove.call(this, shiftKey, 'col-first');\n          evt.preventDefault();\n          break;\n        case 39:\n          // ctrl + right\n          selectorMove.call(this, shiftKey, 'row-last');\n          evt.preventDefault();\n          break;\n        case 40:\n          // ctrl + down\n          selectorMove.call(this, shiftKey, 'col-last');\n          evt.preventDefault();\n          break;\n        case 32:\n          // ctrl + space, all cells in col\n          selectorSet.call(this, false, -1, data.selector.indexes[1], false);\n          evt.preventDefault();\n          break;\n        case 66:\n          // ctrl + B\n          toolbar.trigger('font-bold');\n          break;\n        case 73:\n          // ctrl + I\n          toolbar.trigger('font-italic');\n          break;\n        default:\n          break;\n      }\n    } else {\n      // console.log('evt.keyCode:', evt.keyCode);\n      switch (keyCode) {\n        case 32:\n          if (shiftKey) {\n            // shift + space, all cells in row\n            selectorSet.call(this, false, data.selector.indexes[0], -1, false);\n          }\n          break;\n        case 27: // esc\n          contextMenu.hide();\n          clearClipboard.call(this);\n          break;\n        case 37: // left\n          selectorMove.call(this, shiftKey, 'left');\n          evt.preventDefault();\n          break;\n        case 38: // up\n          selectorMove.call(this, shiftKey, 'up');\n          evt.preventDefault();\n          break;\n        case 39: // right\n          selectorMove.call(this, shiftKey, 'right');\n          evt.preventDefault();\n          break;\n        case 40: // down\n          selectorMove.call(this, shiftKey, 'down');\n          evt.preventDefault();\n          break;\n        case 9: // tab\n          editor.clear();\n          // shift + tab => move left\n          // tab => move right\n          selectorMove.call(this, false, shiftKey ? 'left' : 'right');\n          evt.preventDefault();\n          break;\n        case 13: // enter\n          editor.clear();\n          // shift + enter => move up\n          // enter => move down\n          selectorMove.call(this, false, shiftKey ? 'up' : 'down');\n          evt.preventDefault();\n          break;\n        case 8: // backspace\n          insertDeleteRowColumn.call(this, 'delete-cell-text');\n          evt.preventDefault();\n          break;\n        default:\n          break;\n      }\n\n      if (key === 'Delete') {\n        insertDeleteRowColumn.call(this, 'delete-cell-text');\n        evt.preventDefault();\n      } else if ((keyCode >= 65 && keyCode <= 90)\n        || (keyCode >= 48 && keyCode <= 57)\n        || (keyCode >= 96 && keyCode <= 105)\n        || evt.key === '='\n      ) {\n        dataSetCellText.call(this, evt.key);\n        editorSet.call(this);\n      } else if (keyCode === 113) {\n        // F2\n        editorSet.call(this);\n      }\n    }\n  });\n}\n\nexport default class Sheet {\n  constructor(targetEl, data) {\n    this.el = h('div', `${cssPrefix}-sheet`);\n    this.toolbar = new Toolbar(data);\n    targetEl.children(this.toolbar.el, this.el);\n    // console.log('elRect:', elRect);\n    const {\n      row, col, view,\n    } = data.options;\n    this.view = view;\n    this.col = col;\n    this.row = row;\n    this.data = data;\n    // table\n    this.tableEl = h('canvas', `${cssPrefix}-table`);\n    // resizer\n    this.rowResizer = new Resizer(false, row.height);\n    this.colResizer = new Resizer(true, col.minWidth);\n    // scrollbar\n    this.verticalScrollbar = new Scrollbar(true);\n    this.horizontalScrollbar = new Scrollbar(false);\n    // editor\n    this.editor = new Editor(\n      Object.values(data.formulam),\n      () => this.getTableOffset(),\n      row.height,\n    );\n    // contextMenu\n    this.contextMenu = new ContextMenu(() => this.getTableOffset());\n    // selector\n    this.selector = new Selector(data);\n    this.overlayerCEl = h('div', `${cssPrefix}-overlayer-content`)\n      .children(\n        this.editor.el,\n        this.selector.el,\n      );\n    this.overlayerEl = h('div', `${cssPrefix}-overlayer`)\n      .child(this.overlayerCEl);\n    // root element\n    this.el.children(\n      this.tableEl,\n      this.overlayerEl.el,\n      this.rowResizer.el,\n      this.colResizer.el,\n      this.verticalScrollbar.el,\n      this.horizontalScrollbar.el,\n      this.contextMenu.el,\n    );\n    // table\n    this.table = new Table(this.tableEl.el, data);\n    sheetInitEvents.call(this);\n    sheetReset.call(this);\n    // init selector [0, 0]\n    selectorSet.call(this, false, 0, 0);\n  }\n\n  loadData(data) {\n    this.data.load(data);\n    sheetReset.call(this);\n    return this;\n  }\n\n  // freeze rows or cols\n  freeze(ri, ci) {\n    const { data } = this;\n    data.setFreeze(ri, ci);\n    sheetReset.call(this);\n    return this;\n  }\n\n  undo() {\n    this.data.undo();\n    sheetReset.call(this);\n  }\n\n  redo() {\n    this.data.redo();\n    sheetReset.call(this);\n  }\n\n  reload() {\n    sheetReset.call(this);\n    return this;\n  }\n\n  getRect() {\n    const height = this.view.height();\n    const width = this.view.width();\n    return { width, height };\n  }\n\n  getTableOffset() {\n    const { row, col } = this;\n    const { width, height } = this.getRect();\n    return {\n      width: width - col.indexWidth,\n      height: height - row.height,\n      left: col.indexWidth,\n      top: row.height,\n    };\n  }\n}\n","/* global window, document */\nimport helper from './helper';\nimport { h } from './component/element';\nimport DataProxy from './data_proxy';\nimport Sheet from './component/sheet';\nimport { cssPrefix } from './config';\n// import Bottombar from './component/bottombar';\nimport './index.less';\n\nconst defaultOptions = {\n  view: {\n    height: () => document.documentElement.clientHeight - 41,\n    width: () => document.documentElement.clientWidth,\n  },\n  formats: [],\n  fonts: [],\n  formula: [],\n  row: {\n    len: 100,\n    height: 25,\n  },\n  col: {\n    len: 26,\n    width: 100,\n    indexWidth: 60,\n    minWidth: 60,\n  },\n  style: {\n    bgcolor: '#ffffff',\n    align: 'left',\n    valign: 'middle',\n    textwrap: false,\n    textDecoration: 'normal',\n    strikethrough: false,\n    underline: false,\n    color: '#0a0a0a',\n    font: {\n      name: 'Helvetica',\n      size: 10,\n      bold: false,\n      italic: false,\n    },\n  },\n};\n\n/*\nRow: {\n  height: number\n}\nCol: {\n  width: number\n}\nCell: {\n  text: string\n  merge: [rowLen, colLen]\n  format: string,\n  si: style-index\n}\n*/\n\n/*\n  el: element in document\n  options: like #defaultOptions\n  data: {\n    freeze: [0, 0],\n    rowm: {}, // Map<int, Row>\n    colm: {}, // Map<int, Col>\n    cellmm: {}, // Map<int, Map<int, Cell>>\n  }\n*/\n\nclass Spreadsheet {\n  constructor(selectors, options = {}) {\n    let targetEl = selectors;\n    if (typeof selectors === 'string') {\n      targetEl = document.querySelector(selectors);\n    }\n    this.options = helper.merge(defaultOptions, options);\n    this.data = new DataProxy(this.options);\n    const rootEl = h('div', `${cssPrefix}`)\n      .on('contextmenu', evt => evt.preventDefault());\n    // create canvas element\n    targetEl.appendChild(rootEl.el);\n    this.sheet = new Sheet(rootEl, this.data);\n  }\n\n  loadData(data) {\n    this.sheet.loadData(data);\n    return this;\n  }\n\n  getData() {\n    return this.data.d;\n  }\n\n  change(cb) {\n    this.data.change = cb;\n    return this;\n  }\n}\n\nconst spreadsheet = (el, options = {}) => new Spreadsheet(el, options);\n\nif (window) {\n  window.x = window.x || {};\n  window.x.spreadsheet = spreadsheet;\n}\n\nexport default Spreadsheet;\nexport {\n  spreadsheet,\n};\n"],"sourceRoot":""}