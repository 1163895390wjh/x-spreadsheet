{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/helper.js","webpack:///./src/component/element.js","webpack:///./src/formula.js","webpack:///./src/format.js","webpack:///./src/font.js","webpack:///./src/alphabet.js","webpack:///./src/cell.js","webpack:///./src/data_proxy.js","webpack:///./src/event.js","webpack:///./src/config.js","webpack:///./src/component/resizer.js","webpack:///./src/component/scrollbar.js","webpack:///./src/component/selector.js","webpack:///./src/component/suggest.js","webpack:///./src/component/editor.js","webpack:///./src/component/contextmenu.js","webpack:///./src/canvas/draw.js","webpack:///./src/component/table.js","webpack:///./src/component/dropdown.js","webpack:///./src/component/dropdown_font.js","webpack:///./src/component/dropdown_fontsize.js","webpack:///./src/component/dropdown_format.js","webpack:///./src/component/icon.js","webpack:///./src/component/dropdown_formula.js","webpack:///./src/component/color_palette.js","webpack:///./src/component/dropdown_color.js","webpack:///./src/component/dropdown_align.js","webpack:///./src/component/dropdown_linetype.js","webpack:///./src/component/border_palette.js","webpack:///./src/component/dropdown_border.js","webpack:///./src/component/toolbar.js","webpack:///./src/component/tooltip.js","webpack:///./src/component/sheet.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","mergeDeep","sources","forEach","source","keys","v","Array","isArray","helper","cloneDeep","obj","JSON","parse","stringify","merge","equals","obj1","obj2","length","k","v1","v2","undefined","sum","objOrAry","cb","total","size","rangeSum","min","max","getv","rangeReduceIf","inits","initv","ifv","deleteProperty","oldv","Element","[object Object]","tag","className","this","el","document","createElement","data","eventName","handler","fen","oen","split","addEventListener","evt","button","stopPropagation","css","offsetTop","offsetLeft","offsetHeight","offsetWidth","top","left","height","width","scrollLeft","scrollTop","getBoundingClientRect","parentNode","eles","arguments","childNodes","ele","child","arg","createTextNode","appendChild","contains","classList","add","remove","cls","toggleClass","toggle","flag","addClass","removeClass","setAttribute","getAttribute","removeAttribute","content","innerHTML","style","removeProperty","window","getComputedStyle","h","baseFormulas","title","render","ary","reduce","a","b","Number","Math","map","join","formula_formulas","formulaAry","formulaMap","concat","f","formatStringRender","formatNumberRender","test","toFixed","toString","first","parts","replace","baseFormats","type","label","formats","baseFonts","fontSizes","pt","px","fonts","alphabets","alphabet","stringAt","index","str","cindex","parseInt","indexAt","ret","charCodeAt","exponet","expr2xy","src","x","y","charAt","expr2expr","xn","yn","evalSubExpr","subExpr","cellRender","substring","getCellText","stack","operatorStack","subStrs","fnArgType","fnArgsLen","push","toUpperCase","c1","pop","ex","ey","sx","sy","rangelen","last","infixExprToSuffixExpr","srcStack","bottom","isNaN","formula","len","params","j","evalSuffixExpr","src_cell","defaultData","freeze","merges","rowm","colm","cellmm","styles","borders","data_proxy_History","undoItems","redoItems","currentd","canUndo","canRedo","Clipboard","sIndexes","eIndexes","state","set","data_proxy_Selector","indexes","sri","sci","eri","eci","Scroll","addHistory","history","deleteCells","what","cell","getCell","text","si","eachMerges","inMerges","ri","ci","deleteMerges","nmerges","msri","msci","meri","meci","addMerges","addMergesByCellIndexes","rn","cn","modifyMerges","idx","copyPaste","srcIndexes","dstIndexes","autofill","dsri","dsci","deri","deci","isAdd","dn","ii","jj","nri","nci","ncell","word","result","exec","setCell","cutPaste","clipboard","ncellmm","clear","data_proxy_DataProxy","options","formulam","formulas","formatm","fontm","scroll","selector","change","view","undo","redo","getRange","setRange","getSelectedRect","row","col","x1","indexWidth","y1","getCellStyle","getCellOrNew","getRect","unmerge","each","cstyle","format","bi","addBorder","color","bbi","bti","bri","bli","isMultiple","addStyle","nfont","font","assign","isClear","cellPosition","rowSumHeight","colSumWidth","left0","top0","fsh","freezeTotalHeight","fsw","freezeTotalWidth","scrollOffsety","rowLen","getRowHeight","scrollOffsetx","colLen","getColWidth","colTotalWidth","rowTotalHeight","cellRect","setSelectedIndexes","mIndexes","copy","cut","isCopy","isCut","canUnmerge","ndata","rndata","fci","getFreeze","fri","rowHeight","colWidth","rowStart","colStart","jumpMerge","cmerges","cmergeIndexes","mi","mj","it","splice","nstyle","target","fn","unbind","removeEventListener","mouseMoveUp","movefunc","upfunc","xEvtUp","cssPrefix","devicePixelRatio","resizer_Resizer","vertical","minDistance","moving","children","hoverEl","on","mousedownHandler","lineEl","hide","cRect","finishedFn","rect","line","offset","show","startEvt","distance","e","buttons","movementX","movementY","scrollbar_Scrollbar","moveFn","contentEl","contentDistance","cssKey","selectorHeightBorderWidth","startZIndex","selector_SelectorElement","cornerEl","areaEl","clipboardEl","autofillEl","calBRAreaOffset","ftwidth","ftheight","calTAreaOffset","calLAreaOffset","setBRAreaOffset","br","setAreaOffset","setTAreaOffset","setLAreaOffset","setLClipboardOffset","setClipboardOffset","setBRClipboardOffset","setTClipboardOffset","setAllAreaOffset","tl","setAllClipboardOffset","selector_Selector","areaOffset","saIndexes","eaIndexes","freezeHeight","freezeWidth","setOffset","coffset","getClipboardRect","resetOffset","calRangeIndexes","setSelectedCurrentIndexes","moveIndexes","resetAreaOffset","calRangeIndexes2","reset","srn","ern","ecn","showAutofill","hideAutofill","showClipboard","hideClipboard","inputEnter","preventDefault","filterItems","itemIndex","click","suggest_Suggest","items","itemClick","cssRemoveKeys","filter","startsWith","item","html","input","keyCode","ctrlKey","resetTextareaSize","inputText","textlineEl","textEl","tlineWidth","maxWidth","viewFn","twidth","h1","setText","position","blur","val","setTimeout","focus","setSelectionRange","editor_Editor","suggest","start","lastIndexOf","sit","eit","indexOf","search","bindInputEvents","w","suggestPosition","elOffset","sOffset","menuItems","buildMenu","contextmenu_ContextMenu","draw_dpr","thinLineWidth","npx","DrawBox","padding","bgcolor","borderTop","borderRight","borderBottom","borderLeft","bt","bb","bl","align","fontSize","hoffset","y2","drawStrikethrough","tx","ty","valign","blheight","blwidth","floffset","Draw","ctx","getContext","resize","scale","clearRect","save","beginPath","restore","translate","fillRect","fillText","txt","box","attr","textWrap","strikethrough","textx","textAlign","textBaseline","italic","bold","fillStyle","strokeStyle","txtWidth","measureText","ceil","innerWidth","texty","textLine","lineWidth","setLineDash","xys","moveTo","lineTo","stroke","border","topxys","rightxys","bottomxys","leftxys","fill","strokeBorders","cellPaddingWidth","tableFixedHeaderCleanStyle","getDrawBox","rindex","renderCell","draw","dbox","cellText","getFontSizePxByPt","textwrap","renderContent","scrollOffset","eachCellsInView","getStyle","setBorders","getBorder","renderSelectedHeaderCell","renderFixedHeaders","sumHeight","sumWidth","rowEach","colEach","renderFreezeHighlightLine","p1","p2","renderAll","component_table","getView","sheight","theight","swidth","dropdown_Dropdown","showArrow","placement","super","headerEl","parent","active","dropdown_font_DropdownFont","nfonts","setTitle","dropdown_fontsize_DropdownFontSize","dropdown_format_DropdownFormat","nformats","slice","icon_Icon","iconNameEl","dropdown_formula_DropdownFormula","nformulas","themeColorPlaceHolders","themeColors","standardColors","buildTd","color_palette_ColorPalette","table","dropdown_color_DropdownColor","iconName","icon","colorPalette","dropdown_align_DropdownAlign","aligns","buildItemWithIcon","setName","lineTypes","dropdown_linetype_DropdownLineType","beforei","lineTypeEls","iti","buildTable","trs","border_palette_buildTd","border_palette_BorderPalette","ddColor","ddType","dropdown_border_DropdownBorder","borderPalette","buildButton","tooltipdata","body","elBox","removeChild","tooltip","buildDivider","buildButtonWithIcon","buildIcon","toggleChange","elName","hasClass","toolbar_DropdownMore","moreBtns","moreResize","btns","moreEl","ddMore","btnChildren","sumWidth2","list1","list2","marginLeft","marginRight","computedStyle","toolbar_Toolbar","ddFormat","ddFont","ddFormula","ddFontSize","ddTextColor","ddFillColor","ddAlign","ddVAlign","ddBorder","undoEl","redoEl","paintformatEl","clearformatEl","boldEl","italicEl","strikethroughEl","mergeEl","textwrapEl","freezeEl","getSelectedCellStyle","getSelectedCell","disabled","seqe","freezeIsActive","selectorSet","multiple","toolbar","setEnd","selectorMove","direction","verticalScrollbar","horizontalScrollbar","tableOffset","getTableOffset","abs","move","verticalScrollbarSet","horizontalScrollbarSet","sheetReset","tableEl","overlayerEl","overlayerCEl","tOffset","vRect","editor","fwidth","fheight","setFreezeLengths","clearClipboard","paste","overlayerMousedown","isAutofillEl","getCellRectByXY","offsetX","offsetY","shiftKey","paintformatActive","paintformatToggle","editorSetOffset","sPosition","editorSet","dataSetCellText","setCellText","insertDeleteRowColumn","insertRow","deleteRow","insertColumn","deleteColumn","deleteCell","sheetInitEvents","rowResizer","colResizer","contextMenu","getFixedHeaderWidth","getFixedHeaderHeight","tRect","xyInSelectedRect","setPosition","detail","setSelectedCellAttr","setRowHeight","setColWidth","scrolly","resetBRLAreaOffset","scrollx","resetBRTAreaOffset","itext","reload","focusing","deltaY","which","altKey","sheet_Sheet","targetEl","minWidth","values","load","setFreeze","__webpack_exports__","spreadsheet","defaultOptions","documentElement","clientHeight","clientWidth","textDecoration","src_Spreadsheet","selectors","querySelector","rootEl","sheet","loadData"],"mappings":"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","file":"xspreadsheet.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/* eslint-disable no-param-reassign */\nfunction cloneDeep(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nconst mergeDeep = (object = {}, ...sources) => {\n  sources.forEach((source) => {\n    Object.keys(source).forEach((key) => {\n      const v = source[key];\n      // console.log('k:', key, ', v:', source[key], typeof v, v instanceof Object);\n      if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean') {\n        object[key] = v;\n      } else if (typeof v !== 'function' && !Array.isArray(v) && v instanceof Object) {\n        object[key] = object[key] || {};\n        mergeDeep(object[key], v);\n      } else {\n        object[key] = v;\n      }\n    });\n  });\n  // console.log('::', object);\n  return object;\n};\n\nfunction equals(obj1, obj2) {\n  const keys = Object.keys(obj1);\n  if (keys.length !== Object.keys(obj2).length) return false;\n  for (let i = 0; i < keys.length; i += 1) {\n    const k = keys[i];\n    const v1 = obj1[k];\n    const v2 = obj2[k];\n    if (v2 === undefined) return false;\n    if (typeof v1 === 'string' || typeof v1 === 'number' || typeof v1 === 'boolean') {\n      if (v1 !== v2) return false;\n    } else if (typeof v1 !== 'function' && !Array.isArray(v1) && v1 instanceof Object) {\n      if (!equals(v1, v2)) return false;\n    }\n  }\n  return true;\n}\n\n/*\n  objOrAry: obejct or Array\n  cb: (value, index | key) => { return value }\n*/\nconst sum = (objOrAry, cb = value => value) => {\n  let total = 0;\n  let size = 0;\n  Object.keys(objOrAry).forEach((key) => {\n    total += cb(objOrAry[key], key);\n    size += 1;\n  });\n  return [total, size];\n};\n\nfunction deleteProperty(obj, property) {\n  const oldv = obj[`${property}`];\n  delete obj[`${property}`];\n  return oldv;\n}\n\nfunction rangeReduceIf(min, max, inits, initv, ifv, getv) {\n  let s = inits;\n  let v = initv;\n  let i = min;\n  for (; i < max; i += 1) {\n    if (s > ifv) break;\n    v = getv(i);\n    s += v;\n  }\n  return [i, s - v, v];\n}\n\nfunction rangeSum(min, max, getv) {\n  let s = 0;\n  for (let i = min; i < max; i += 1) {\n    s += getv(i);\n  }\n  return s;\n}\n\nexport default {\n  cloneDeep,\n  merge: (...sources) => mergeDeep({}, ...sources),\n  equals,\n  sum,\n  rangeSum,\n  rangeReduceIf,\n  deleteProperty,\n};\n","/* global document */\n/* global window */\nclass Element {\n  constructor(tag, className = '') {\n    if (typeof tag === 'string') {\n      this.el = document.createElement(tag);\n      this.el.className = className;\n    } else {\n      this.el = tag;\n    }\n    this.data = {};\n  }\n\n  data(key, value) {\n    if (value !== undefined) {\n      this.data[key] = value;\n      return this;\n    }\n    return this.data[key];\n  }\n\n  on(eventName, handler) {\n    const [fen, ...oen] = eventName.split('.');\n    // console.log('fen:', fen, oen);\n    this.el.addEventListener(fen, (evt) => {\n      handler(evt);\n      for (let i = 0; i < oen.length; i += 1) {\n        const k = oen[i];\n        if (k === 'left' && evt.button !== 0) {\n          return;\n        } if (k === 'right' && evt.button !== 2) {\n          return;\n        } if (k === 'stop') {\n          evt.stopPropagation();\n        }\n      }\n    });\n    return this;\n  }\n\n  offset(value) {\n    if (value !== undefined) {\n      Object.keys(value).forEach((k) => {\n        this.css(k, `${value[k]}px`);\n      });\n      return this;\n    }\n    const {\n      offsetTop, offsetLeft, offsetHeight, offsetWidth,\n    } = this.el;\n    return {\n      top: offsetTop,\n      left: offsetLeft,\n      height: offsetHeight,\n      width: offsetWidth,\n    };\n  }\n\n  scroll(v) {\n    const { el } = this;\n    if (v !== undefined) {\n      if (v.left !== undefined) {\n        el.scrollLeft = v.left;\n      }\n      if (v.top !== undefined) {\n        el.scrollTop = v.top;\n      }\n    }\n    return { left: el.scrollLeft, top: el.scrollTop };\n  }\n\n  box() {\n    return this.el.getBoundingClientRect();\n  }\n\n  parent() {\n    return new Element(this.el.parentNode);\n  }\n\n  children(...eles) {\n    if (arguments.length === 0) {\n      return this.el.childNodes;\n    }\n    eles.forEach(ele => this.child(ele));\n    return this;\n  }\n\n  /*\n  first() {\n    return this.el.firstChild;\n  }\n\n  last() {\n    return this.el.lastChild;\n  }\n\n  remove(ele) {\n    return this.el.removeChild(ele);\n  }\n\n  prepend(ele) {\n    const { el } = this;\n    if (el.children.length > 0) {\n      el.insertBefore(ele, el.firstChild);\n    } else {\n      el.appendChild(ele);\n    }\n    return this;\n  }\n\n  prev() {\n    return this.el.previousSibling;\n  }\n\n  next() {\n    return this.el.nextSibling;\n  }\n  */\n\n  child(arg) {\n    let ele = arg;\n    if (typeof arg === 'string') {\n      ele = document.createTextNode(arg);\n    } else if (arg instanceof Element) {\n      ele = arg.el;\n    }\n    this.el.appendChild(ele);\n    return this;\n  }\n\n  contains(ele) {\n    return this.el.contains(ele);\n  }\n\n  className(v) {\n    if (v !== undefined) {\n      this.el.className = v;\n      return this;\n    }\n    return this.el.className;\n  }\n\n  addClass(name) {\n    this.el.classList.add(name);\n    return this;\n  }\n\n  hasClass(name) {\n    return this.el.classList.contains(name);\n  }\n\n  removeClass(name) {\n    this.el.classList.remove(name);\n    return this;\n  }\n\n  toggle(cls = 'active') {\n    return this.toggleClass(cls);\n  }\n\n  toggleClass(name) {\n    return this.el.classList.toggle(name);\n  }\n\n  active(flag = true) {\n    if (flag) this.addClass('active');\n    else this.removeClass('active');\n    return this;\n  }\n\n  disabled(flag = true) {\n    if (flag) this.addClass('disabled');\n    else this.removeClass('disabled');\n    return this;\n  }\n\n  // key, value\n  // key\n  // {k, v}...\n  attr(key, value) {\n    if (value !== undefined) {\n      this.el.setAttribute(key, value);\n    } else {\n      if (typeof key === 'string') {\n        return this.el.getAttribute(key);\n      }\n      Object.keys(key).forEach((k) => {\n        this.el.setAttribute(k, key[k]);\n      });\n    }\n    return this;\n  }\n\n  removeAttr(key) {\n    this.el.removeAttribute(key);\n    return this;\n  }\n\n  html(content) {\n    if (content !== undefined) {\n      this.el.innerHTML = content;\n      return this;\n    }\n    return this.el.innerHTML;\n  }\n\n  val(v) {\n    if (v !== undefined) {\n      this.el.value = v;\n      return this;\n    }\n    return this.el.value;\n  }\n\n  cssRemoveKeys(...keys) {\n    keys.forEach(k => this.el.style.removeProperty(k));\n    return this;\n  }\n\n  // css( propertyName )\n  // css( propertyName, value )\n  // css( properties )\n  css(name, value) {\n    if (value === undefined && typeof name !== 'string') {\n      Object.keys(name).forEach((k) => {\n        this.el.style[k] = name[k];\n      });\n      return this;\n    }\n    if (value !== undefined) {\n      this.el.style[name] = value;\n      return this;\n    }\n    return this.el.style[name];\n  }\n\n  computedStyle() {\n    return window.getComputedStyle(this.el, null);\n  }\n\n  show() {\n    this.css('display', 'block');\n    return this;\n  }\n\n  hide() {\n    this.css('display', 'none');\n    return this;\n  }\n}\n\nconst h = (tag, className = '') => new Element(tag, className);\n\nexport {\n  Element,\n  h,\n};\n","/**\n  formula:\n    key\n    title\n    render\n*/\nconst baseFormulas = [\n  {\n    key: 'SUM',\n    title: '求和',\n    render: ary => ary.reduce((a, b) => Number(a) + Number(b), 0),\n  },\n  {\n    key: 'AVERAGE',\n    title: '求平均值',\n    render: ary => ary.reduce((a, b) => Number(a) + Number(b), 0) / ary.length,\n  },\n  {\n    key: 'MAX',\n    title: '最大值',\n    render: ary => Math.max(...ary.map(v => Number(v))),\n  },\n  {\n    key: 'MIN',\n    title: '最小值',\n    render: ary => Math.min(...ary.map(v => Number(v))),\n  },\n  {\n    key: 'CONCAT',\n    title: '字符串拼接',\n    render: ary => ary.join(''),\n  },\n];\n\nconst formulas = (formulaAry = []) => {\n  const formulaMap = {};\n  baseFormulas.concat(formulaAry).forEach((f) => {\n    formulaMap[f.key] = f;\n  });\n  return formulaMap;\n};\n\nexport default {\n};\n\nexport {\n  formulas,\n  baseFormulas,\n};\n","const formatStringRender = v => v;\n\nconst formatNumberRender = (v) => {\n  if (/^(-?\\d*.?\\d*)$/.test(v)) {\n    const v1 = Number(v).toFixed(2).toString();\n    const [first, ...parts] = v1.split('\\\\.');\n    return [first.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,'), ...parts];\n  }\n  return v;\n};\n\nconst baseFormats = [\n  {\n    key: 'normal',\n    title: 'Normal',\n    type: 'string',\n    render: formatStringRender,\n  },\n  {\n    key: 'text',\n    title: 'Plain Text',\n    type: 'string',\n    render: formatStringRender,\n  },\n  {\n    key: 'number',\n    title: 'Number',\n    type: 'number',\n    label: '1,000.12',\n    render: formatNumberRender,\n  },\n  {\n    key: 'percent',\n    title: 'Percent',\n    type: 'number',\n    label: '10.12%',\n    render: v => `${v}%`,\n  },\n  {\n    key: 'rmb',\n    title: 'RMB',\n    type: 'number',\n    label: '￥10.00',\n    render: v => `￥${formatNumberRender(v)}`,\n  },\n  {\n    key: 'usd',\n    title: 'USD',\n    type: 'number',\n    label: '$10.00',\n    render: v => `$${formatNumberRender(v)}`,\n  },\n  {\n    key: 'date',\n    title: 'Date',\n    type: 'date',\n    label: '26/09/2008',\n    render: formatStringRender,\n  },\n  {\n    key: 'time',\n    title: 'Time',\n    type: 'date',\n    label: '15:59:00',\n    render: formatStringRender,\n  },\n  {\n    key: 'datetime',\n    title: 'Date time',\n    type: 'date',\n    label: '26/09/2008 15:59:00',\n    render: formatStringRender,\n  },\n  {\n    key: 'duration',\n    title: 'Duration',\n    type: 'date',\n    label: '24:01:00',\n    render: formatStringRender,\n  },\n];\n\nconst formats = (ary = []) => {\n  const map = {};\n  baseFormats.concat(ary).forEach((f) => {\n    map[f.key] = f;\n  });\n  return map;\n};\n\nexport default {\n};\nexport {\n  formats,\n  baseFormats,\n};\n","const baseFonts = [\n  { key: 'Helvetica', title: 'Helvetica' },\n  { key: 'Source Sans Pro', title: 'Source Sans Pro' },\n  { key: 'Comic Sans MS', title: 'Comic Sans MS' },\n  { key: 'Arial', title: 'Arial' },\n  { key: 'Courier New', title: 'Courier New' },\n  { key: 'Verdana', title: 'Verdana' },\n];\n\nconst fontSizes = [\n  { pt: 7.5, px: 10 },\n  { pt: 8, px: 11 },\n  { pt: 9, px: 12 },\n  { pt: 10, px: 13 },\n  { pt: 10.5, px: 14 },\n  { pt: 11, px: 15 },\n  { pt: 12, px: 16 },\n  { pt: 14, px: 18.7 },\n  { pt: 15, px: 20 },\n  { pt: 16, px: 21.3 },\n  { pt: 18, px: 24 },\n  { pt: 22, px: 29.3 },\n  { pt: 24, px: 32 },\n  { pt: 26, px: 34.7 },\n  { pt: 36, px: 48 },\n  { pt: 42, px: 56 },\n  // { pt: 54, px: 71.7 },\n  // { pt: 63, px: 83.7 },\n  // { pt: 72, px: 95.6 },\n];\n\nfunction getFontSizePxByPt(pt) {\n  for (let i = 0; i < fontSizes.length; i += 1) {\n    const fontSize = fontSizes[i];\n    if (fontSize.pt === pt) {\n      return fontSize.px;\n    }\n  }\n  return pt;\n}\n\nconst fonts = (ary = []) => {\n  const map = {};\n  baseFonts.concat(ary).forEach((f) => {\n    map[f.key] = f;\n  });\n  return map;\n};\n\nexport default {};\nexport {\n  fontSizes,\n  fonts,\n  baseFonts,\n  getFontSizePxByPt,\n};\n","const alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\nexport default {\n  stringAt: (index) => {\n    let str = '';\n    let cindex = index;\n    while (cindex >= alphabets.length) {\n      cindex /= alphabets.length;\n      cindex -= 1;\n      str += alphabets[parseInt(cindex, 10) % alphabets.length];\n    }\n    const last = index % alphabets.length;\n    str += alphabets[last];\n    return str;\n  },\n  indexAt: (str) => {\n    let ret = 0;\n    for (let i = 0; i < str.length - 1; i += 1) {\n      const cindex = str.charCodeAt(i) - 65;\n      const exponet = str.length - 1 - i;\n      ret += (alphabets.length ** exponet) + (alphabets.length * cindex);\n    }\n    ret += str.charCodeAt(str.length - 1) - 65;\n    return ret;\n  },\n};\n","import alphabet from './alphabet';\n\n// B10 => x,y\nconst expr2xy = (src) => {\n  let x = '';\n  let y = '';\n  for (let i = 0; i < src.length; i += 1) {\n    if (src.charAt(i) >= '0' && src.charAt(i) <= '9') {\n      y += src.charAt(i);\n    } else {\n      x += src.charAt(i);\n    }\n  }\n  return [alphabet.indexAt(x), parseInt(y, 10)];\n};\n\nconst expr2expr = (src, xn, yn) => {\n  const [x, y] = expr2xy(src);\n  return alphabet.stringAt(x + xn) + (y + yn);\n};\n\n// Converting infix expression to a suffix expression\n// src: AVERAGE(SUM(A1,A2), B1) + 50 + B20\n// return: [A1, A2], SUM[, B1],AVERAGE,50,+,B20,+\nconst infixExprToSuffixExpr = (src) => {\n  const operatorStack = [];\n  const stack = [];\n  let subStrs = []; // SUM, A1, B2, 50 ...\n  let fnArgType = 0; // 1 => , 2 => :\n  let fnArgsLen = 1; // A1,A2,A3...\n  for (let i = 0; i < src.length; i += 1) {\n    const c = src.charAt(i);\n    // console.log('c:', c);\n    if (c !== ' ') {\n      if (c >= 'a' && c <= 'z') {\n        subStrs.push(c.toUpperCase());\n      } else if ((c >= '0' && c <= '9') || (c >= 'A' && c <= 'Z')) {\n        subStrs.push(c);\n      } else if (c === '\"') {\n        i += 1;\n        while (src.charAt(i) !== '\"') {\n          subStrs.push(src.charAt(i));\n          i += 1;\n        }\n        stack.push(`\"${subStrs.join('')}`);\n        subStrs = [];\n      } else {\n        if (subStrs.length > 0) {\n          stack.push(subStrs.join(''));\n        }\n        if (c === ')') {\n          let c1 = operatorStack.pop();\n          if (fnArgType === 2) {\n            // fn argument range => A1:B5\n            const [ex, ey] = expr2xy(stack.pop());\n            const [sx, sy] = expr2xy(stack.pop());\n            // console.log('::', sx, sy, ex, ey);\n            let rangelen = 0;\n            for (let x = sx; x <= ex; x += 1) {\n              for (let y = sy; y <= ey; y += 1) {\n                stack.push(alphabet.stringAt(x) + y);\n                rangelen += 1;\n              }\n            }\n            stack.push([c1, rangelen]);\n          } else if (fnArgType === 1) {\n            // fn argument => A1,A2,B5\n            stack.push([c1, fnArgsLen]);\n            fnArgsLen = 1;\n          } else {\n            // console.log('c1:', c1, fnArgType, operatorStack);\n            while (c1 !== '(' && operatorStack.length > 0) {\n              stack.push(c1);\n              c1 = operatorStack.pop();\n            }\n          }\n          fnArgType = 0;\n        } else if (c === ':') {\n          fnArgType = 2;\n        } else if (c === ',') {\n          fnArgType = 1;\n          fnArgsLen += 1;\n        } else if (c === '(' && subStrs.length > 0) {\n          // function\n          stack.pop();\n          operatorStack.push(subStrs.join(''));\n        } else {\n          // priority: */ > +-\n          if (operatorStack.length > 0 && (c === '+' || c === '-')) {\n            const last = operatorStack[operatorStack.length - 1];\n            if (last === '*' || last === '/') {\n              while (operatorStack.length > 0) {\n                stack.push(operatorStack.pop());\n              }\n            }\n          }\n          operatorStack.push(c);\n        }\n        subStrs = [];\n      }\n    }\n  }\n  if (subStrs.length > 0) {\n    stack.push(subStrs.join(''));\n  }\n  while (operatorStack.length > 0) {\n    stack.push(operatorStack.pop());\n  }\n  return stack;\n};\n\nconst evalSubExpr = (subExpr, cellRender) => {\n  if (subExpr[0] >= '0' && subExpr[0] <= '9') {\n    return Number(subExpr);\n  }\n  if (subExpr[0] === '\"') {\n    return subExpr.substring(1);\n  }\n  const [x, y] = expr2xy(subExpr);\n  return cellRender(x, y);\n};\n\n// evaluate the suffix expression\n// srcStack: <= infixExprToSufixExpr\n// formulaMap: {'SUM': {}, ...}\n// cellRender: (x, y) => {}\nconst evalSuffixExpr = (srcStack, formulaMap, cellRender) => {\n  const stack = [];\n  // console.log(':::::formulaMap:', formulaMap);\n  for (let i = 0; i < srcStack.length; i += 1) {\n    // console.log(':::>>>', srcStack[i]);\n    if (srcStack[i] === '+') {\n      const top = stack.pop();\n      const bottom = stack.pop();\n      // Add if numeric. Concatenate otherwise.\n      if (!Number.isNaN(top) && !Number.isNaN(bottom)) {\n        stack.push(Number(top) + Number(bottom));\n      } else {\n        stack.push(bottom + top);\n      }\n    } else if (srcStack[i] === '-') {\n      const top = stack.pop();\n      stack.push(stack.pop() - top);\n    } else if (srcStack[i] === '*') {\n      stack.push(stack.pop() * stack.pop());\n    } else if (srcStack[i] === '/') {\n      const top = stack.pop();\n      stack.push(stack.pop() / top);\n    } else if (Array.isArray(srcStack[i])) {\n      const [formula, len] = srcStack[i];\n      const params = [];\n      for (let j = 0; j < len; j += 1) {\n        params.push(stack.pop());\n      }\n      stack.push(formulaMap[formula].render(params));\n    } else {\n      stack.push(evalSubExpr(srcStack[i], cellRender));\n    }\n    // console.log('stack:', stack);\n  }\n  // console.log('::::::', stack);\n  return stack[0];\n};\n\nconst cellRender = (src, formulaMap, getCellText) => {\n  // console.log(':::::::::::::src:', src);\n  if (src[0] === '=') {\n    const stack = infixExprToSuffixExpr(src.substring(1));\n    // console.log('suffixExpr:', stack);\n    if (stack.length <= 0) return src;\n    const cb = (x, y) => cellRender(getCellText(x, y - 1), formulaMap, getCellText);\n    return evalSuffixExpr(stack, formulaMap, cb);\n  }\n  return src;\n};\n\nexport default {\n  render: cellRender,\n};\nexport {\n  infixExprToSuffixExpr,\n  expr2xy,\n  expr2expr,\n};\n","/* eslint no-new-wrappers: \"error\" */\nimport helper from './helper';\nimport { formulas as _formulas } from './formula';\nimport { formats as _formats } from './format';\nimport { fonts as _fonts } from './font';\nimport { expr2expr } from './cell';\n\n/*\nCell: {\n  text: string\n  merge: [rowLen, colLen]\n  format: string,\n  si: style-index\n}\n*/\nconst defaultData = {\n  freeze: [0, 0],\n  merges: [], // [[[sri, sci], [eri, eci]],...]\n  rowm: {}, // Map<int, Row>, len\n  colm: {}, // Map<int, Row>, len\n  cellmm: {}, // Map<int, Map<int, Cell>>\n  styles: [],\n  borders: [],\n};\n\nclass History {\n  constructor() {\n    this.undoItems = [];\n    this.redoItems = [];\n  }\n\n  add(data) {\n    this.undoItems.push(helper.cloneDeep(data));\n    this.redoItems = [];\n  }\n\n  canUndo() {\n    return this.undoItems.length > 0;\n  }\n\n  canRedo() {\n    return this.redoItems.length > 0;\n  }\n\n  undo(currentd, cb) {\n    const { undoItems, redoItems } = this;\n    if (this.canUndo()) {\n      redoItems.push(helper.cloneDeep(currentd));\n      cb(undoItems.pop());\n    }\n  }\n\n  redo(currentd, cb) {\n    const { undoItems, redoItems } = this;\n    if (this.canRedo()) {\n      undoItems.push(helper.cloneDeep(currentd));\n      cb(redoItems.pop());\n    }\n  }\n}\n\nclass Clipboard {\n  constructor() {\n    this.sIndexes = null;\n    this.eIndexes = null;\n    this.state = 'clear';\n  }\n\n  copy(sIndexes, eIndexes) {\n    this.set(sIndexes, eIndexes, 'copy');\n    return this;\n  }\n\n  cut(sIndexes, eIndexes) {\n    this.set(sIndexes, eIndexes, 'cut');\n    return this;\n  }\n\n  isCopy() {\n    return this.state === 'copy';\n  }\n\n  isCut() {\n    return this.state === 'cut';\n  }\n\n  set(sIndexes, eIndexes, state) {\n    this.sIndexes = sIndexes;\n    this.eIndexes = eIndexes;\n    this.state = state;\n    return this;\n  }\n\n  get() {\n    return [this.sIndexes, this.eIndexes];\n  }\n\n  isClear() {\n    return this.state === 'clear';\n  }\n\n  clear() {\n    this.sIndexes = null;\n    this.sIndexes = null;\n    this.state = 'clear';\n  }\n}\n\nclass Selector {\n  constructor() {\n    this.indexes = [0, 0];\n    this.sIndexes = [-1, -1];\n    this.eIndexes = [-1, -1];\n  }\n\n  getRange() {\n    return [this.sIndexes, this.eIndexes];\n  }\n\n  setRange(sIndexes, eIndexes) {\n    this.sIndexes = sIndexes;\n    this.eIndexes = eIndexes;\n  }\n\n  seqe() {\n    const [sri, sci] = this.sIndexes;\n    const [eri, eci] = this.eIndexes;\n    return sri === eri && sci === eci;\n  }\n\n  each(cb) {\n    const [sri, sci] = this.sIndexes;\n    const [eri, eci] = this.eIndexes;\n    for (let i = sri; i <= eri; i += 1) {\n      for (let j = sci; j <= eci; j += 1) {\n        cb(i, j);\n      }\n    }\n  }\n}\n\nclass Scroll {\n  constructor() {\n    this.x = 0;\n    this.y = 0;\n    this.indexes = [0, 0];\n  }\n}\n\nfunction addHistory() {\n  this.history.add(this.d);\n}\n\n// what: all | text | format\nfunction deleteCells([sri, sci], [eri, eci], what = 'all') {\n  const { d } = this;\n  const { cellmm } = d;\n  // console.log('cellmm:', cellmm, ', sri:', sri, ', sci:', sci, ', eri:', eri, ', eci:', eci);\n  for (let i = sri; i <= eri; i += 1) {\n    for (let j = sci; j <= eci; j += 1) {\n      const cell = this.getCell(i, j);\n      if (cell) {\n        if (what === 'all') {\n          delete cellmm[i][`${j}`];\n        } else if (what === 'text') {\n          if (cell.text) delete cell.text;\n        } else if (what === 'format') {\n          if (cell.si !== undefined) delete cell.si;\n          if (cell.merge) delete cell.merge;\n        }\n      }\n    }\n  }\n  /*\n  Object.keys(cellmm).forEach((ri) => {\n    // console.log('ri:', ri, ', sri:', sri, ', eri:', eri);\n    if (ri >= sri && ri <= eri) {\n      Object.keys(cellmm[ri]).forEach((ci) => {\n        const cell = cellmm[ri][ci];\n        // console.log('cell:', ci, cell);\n        if (ci >= sci && ci <= eci) {\n          if (what === 'all') {\n            // console.log(':row:', cellm[ri]);\n            delete cellmm[ri][`${ci}`];\n            // console.log(':after.row:', cellm[ri]);\n          } else if (what === 'text') {\n            if (cell.text) delete cell.text;\n          } else if (what === 'format') {\n            if (cell.si !== undefined) delete cell.si;\n            if (cell.merge) delete cell.si;\n          }\n        }\n      });\n    }\n  });\n  */\n}\n\nfunction getCellRowByY(y, scrollOffsety) {\n  const { options } = this;\n  const { row } = options;\n  const fsh = this.freezeTotalHeight();\n  // console.log('y:', y, ', fsh:', fsh);\n  let inits = row.height;\n  if (fsh + row.height < y) inits -= scrollOffsety;\n  const [ri, top, height] = helper.rangeReduceIf(\n    0,\n    this.rowLen(),\n    inits,\n    row.height,\n    y,\n    i => this.getRowHeight(i),\n  );\n  if (top <= 0) {\n    return { ri: -1, top: 0, height };\n  }\n  return { ri: ri - 1, top, height };\n  // return { ri, top: top - row.height, height };\n}\n\nfunction getCellColByX(x, scrollOffsetx) {\n  const { options } = this;\n  const { col } = options;\n  const fsw = this.freezeTotalWidth();\n  let inits = col.indexWidth;\n  if (fsw + col.indexWidth < x) inits -= scrollOffsetx;\n  const [ci, left, width] = helper.rangeReduceIf(\n    0,\n    this.colLen(),\n    inits,\n    col.indexWidth,\n    x,\n    i => this.getColWidth(i),\n  );\n  if (left <= 0) {\n    return { ci: -1, left: 0, width: col.indexWidth };\n  }\n  return { ci: ci - 1, left, width };\n  // return { ci, left: left - col.indexWidth, width };\n}\n\nfunction eachMerges(cb) {\n  const { merges } = this.d;\n  // console.log('merges:', merges);\n  if (merges.length > 0) {\n    for (let i = 0; i < merges.length; i += 1) {\n      cb(merges[i]);\n    }\n  }\n}\n\nfunction inMerges(ri, ci, cb) {\n  const { merges } = this.d;\n  // console.log('merges:', merges);\n  if (merges.length > 0) {\n    for (let i = 0; i < merges.length; i += 1) {\n      // console.log('merges:', merges);\n      const [[sri, sci], [eri, eci]] = merges[i];\n      if (ri >= sri && ri <= eri && ci >= sci && ci <= eci) {\n        cb(merges[i]);\n        break;\n      }\n    }\n  }\n}\n\nfunction deleteMerges([sri, sci], [eri, eci]) {\n  const nmerges = [];\n  eachMerges.call(this, (merge) => {\n    const [[msri, msci], [meri, meci]] = merge;\n    if (msri > eri || sri > meri || msci > eci || sci > meci) {\n      nmerges.push(merge);\n    }\n  });\n  this.d.merges = nmerges;\n}\n\nfunction addMerges(sIndexes, eIndexes) {\n  deleteMerges.call(this, sIndexes, eIndexes);\n  this.d.merges.push([sIndexes, eIndexes]);\n}\n\nfunction addMergesByCellIndexes(ri, ci) {\n  const cell = this.getCell(ri, ci);\n  if (cell && cell.merge) {\n    // console.log('cell:', ri, ci, cell);\n    const [rn, cn] = cell.merge;\n    if (rn <= 0 && cn <= 0) return;\n    addMerges.call(this, [ri, ci], [ri + rn, ci + cn]);\n  }\n}\n\nfunction moveMerges([sri, sci], [eri, eci], rn, cn) {\n  eachMerges.call(this, (merge) => {\n    const [[msri, msci], [meri, meci]] = merge;\n    if (msri > eri || sri > meri || msci > eci || sci > meci) {\n      // no intersection\n    } else {\n      // console.log('::::::::', merge, rn, cn);\n      for (let i = 0; i <= 1; i += 1) {\n        const indexes = merge[i];\n        indexes[0] += rn;\n        indexes[1] += cn;\n      }\n    }\n  });\n}\n\n// type: row | col\n// i: index\nfunction modifyMerges(type, i, n) {\n  const idx = type === 'row' ? 0 : 1;\n  eachMerges.call(this, (merge) => {\n    const [sIndexes, eIndexes] = merge;\n    if (sIndexes[idx] >= i) {\n      sIndexes[idx] += n;\n      eIndexes[idx] += n;\n    } else if (sIndexes[idx] < i && i <= eIndexes[idx]) {\n      eIndexes[idx] += n;\n      const cell = this.getCell(...sIndexes);\n      cell.merge[idx] += n;\n    }\n  });\n}\n\nfunction copyPaste(srcIndexes, dstIndexes, what, autofill = false) {\n  const { cellmm } = this.d;\n  const [[sri, sci], [eri, eci]] = srcIndexes;\n  const [[dsri, dsci], [deri, deci]] = dstIndexes;\n  const rn = eri - sri + 1;\n  const cn = eci - sci + 1;\n  const drn = deri - dsri + 1;\n  const dcn = deci - dsci + 1;\n  // console.log(srcIndexes, dstIndexes);\n  let isAdd = true;\n  let dn = 0;\n  if (deri < sri || deci < sci) {\n    isAdd = false;\n    if (deri < sri) dn = drn;\n    else dn = dcn;\n  }\n  // delete dest merge\n  if (what === 'all' || what === 'format') {\n    deleteCells.call(this, [dsri, dsci], [deri, deci], what);\n    deleteMerges.call(this, [dsri, dsci], [deri, deci]);\n  }\n  // console.log('drn:', drn, ', dcn:', dcn);\n  for (let i = sri; i <= eri; i += 1) {\n    if (cellmm[i]) {\n      for (let j = sci; j <= eci; j += 1) {\n        if (cellmm[i][j]) {\n          for (let ii = dsri; ii <= deri; ii += rn) {\n            for (let jj = dsci; jj <= deci; jj += cn) {\n              const nri = ii + (i - sri);\n              const nci = jj + (j - sci);\n              const ncell = helper.cloneDeep(cellmm[i][j]);\n              // ncell.text\n              if (autofill && ncell && ncell.text && ncell.text.length > 0) {\n                const { text } = ncell;\n                let n = (jj - dsci) + (ii - dsri) + 1;\n                // console.log('n:', n);\n                if (!isAdd) {\n                  n -= dn + 1;\n                }\n                if (text[0] === '=') {\n                  ncell.text = text.replace(/\\w{1,3}\\d/g, (word) => {\n                    let [xn, yn] = [0, 0];\n                    if (sri === dsri) {\n                      xn = n;\n                    } else {\n                      yn = n;\n                    }\n                    // console.log('xn:', xn, ', yn:', yn, expr2expr(word, xn, yn));\n                    return expr2expr(word, xn, yn);\n                  });\n                } else {\n                  const result = /[\\\\.\\d]+$/.exec(text);\n                  // console.log('result:', result);\n                  if (result !== null) {\n                    const index = Number(result[0]) + n;\n                    ncell.text = text.substring(0, result.index) + index;\n                  }\n                }\n              }\n              // console.log('ncell:', nri, nci, ncell);\n              this.setCell(nri, nci, ncell, what);\n              addMergesByCellIndexes.call(this, nri, nci);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction cutPaste(srcIndexes, dstIndexes) {\n  const { clipboard, d } = this;\n  const { cellmm } = d;\n  const [[sri, sci], [eri, eci]] = srcIndexes;\n  const [[dsri, dsci]] = dstIndexes;\n  const ncellmm = {};\n  Object.keys(cellmm).forEach((ri) => {\n    Object.keys(cellmm[ri]).forEach((ci) => {\n      let nri = parseInt(ri, 10);\n      let nci = parseInt(ci, 10);\n      if (ri >= sri && ri <= eri && ci >= sci && ci <= eci) {\n        nri = dsri + (nri - sri);\n        nci = dsci + (nci - sci);\n      }\n      ncellmm[nri] = ncellmm[nri] || {};\n      ncellmm[nri][nci] = cellmm[ri][ci];\n    });\n  });\n  // console.log('rn:', nsri - sri, ', cn:', nsci - sci);\n  moveMerges.call(this, [sri, sci], [eri, eci], dsri - sri, dsci - sci);\n  d.cellmm = ncellmm;\n  clipboard.clear();\n}\n\nfunction setStyleBorder(style, [ri, ci], mode, v) {\n  const s = style;\n  const [[sri, sci], [eri, eci]] = this.selector.getRange();\n  // console.log('mode:', mode);\n  if (mode === 'all') {\n    s.bbi = v;\n    s.bti = v;\n    s.bri = v;\n    s.bli = v;\n  } else if (mode === 'inside') {\n    if (this.isMultiple()) {\n      if (eri !== ri) s.bbi = v;\n      if (sri !== ri) s.bti = v;\n      if (eci !== ci) s.bri = v;\n      if (sci !== ci) s.bli = v;\n    }\n  } else if (mode === 'horizontal') {\n    if (this.isMultiple()) {\n      if (eri !== ri) s.bbi = v;\n      if (sri !== ri) s.bti = v;\n    }\n  } else if (mode === 'vertical') {\n    if (this.isMultiple()) {\n      if (eci !== ci) s.bri = v;\n      if (sci !== ci) s.bli = v;\n    }\n  } else if (mode === 'outside') {\n    if (sri === ri) s.bti = v;\n    if (eri === ri) s.bbi = v;\n    if (sci === ci) s.bli = v;\n    if (eci === ci) s.bri = v;\n  } else if (mode === 'left') {\n    if (sci === ci) s.bli = v;\n  } else if (mode === 'top') {\n    if (sri === ri) s.bti = v;\n  } else if (mode === 'right') {\n    if (eci === ci) s.bri = v;\n  } else if (mode === 'bottom') {\n    if (eri === ri) s.bbi = v;\n  } else if (mode === 'none') {\n    if (s.bli !== undefined) delete s.bli;\n    if (s.bti !== undefined) delete s.bti;\n    if (s.bri !== undefined) delete s.bri;\n    if (s.bbi !== undefined) delete s.bbi;\n  }\n}\n\nexport default class DataProxy {\n  constructor(options) {\n    this.options = options;\n    this.formulam = _formulas(options.formulas);\n    this.formatm = _formats(options.formats);\n    this.fontm = _fonts(options.fonts);\n    this.d = defaultData;\n    this.clipboard = new Clipboard();\n    this.history = new History();\n    this.scroll = new Scroll();\n    this.selector = new Selector();\n    this.change = () => {};\n  }\n\n  getView() {\n    return this.options.view;\n  }\n\n  load(data) {\n    this.d = helper.merge(defaultData, data);\n  }\n\n  canUndo() {\n    return this.history.canUndo();\n  }\n\n  canRedo() {\n    return this.history.canRedo();\n  }\n\n  undo() {\n    const { history } = this;\n    history.undo(this.d, (d) => {\n      this.d = d;\n    });\n  }\n\n  redo() {\n    const { history } = this;\n    history.redo(this.d, (d) => {\n      this.d = d;\n    });\n  }\n\n  /* for select start */\n  isMultiple() {\n    const [[sri, sci], [eri, eci]] = this.selector.getRange();\n    if (sri === eri && sci === eci) return false;\n    const cell = this.getCell(sri, sci);\n    if (cell && cell.merge) {\n      const [rn, cn] = cell.merge;\n      if (sri + rn === eri && sci + cn === eci) return false;\n    }\n    return true;\n  }\n\n  setSelectedIndexes(sIndexes, eIndexes) {\n    this.selector.setRange(sIndexes, eIndexes);\n  }\n\n  setSelectedCurrentIndexes(indexes) {\n    this.selector.indexes = indexes;\n  }\n\n  xyInSelectedRect(x, y) {\n    const {\n      left, top, width, height,\n    } = this.getSelectedRect();\n    const { row, col } = this.options;\n    const x1 = x - col.indexWidth;\n    const y1 = y - row.height;\n    // console.log('x:', x, ',y:', y, 'left:', left, 'top:', top);\n    return x1 > left && x1 < (left + width)\n      && y1 > top && y1 < (top + height);\n  }\n\n  getSelectedCellStyle() {\n    return this.getCellStyle(...this.selector.indexes);\n  }\n\n  getSelectedCellOrNew() {\n    return this.getCellOrNew(...this.selector.indexes);\n  }\n\n  getSelectedCell() {\n    return this.getCell(...this.selector.indexes);\n  }\n\n  getSelectedRect() {\n    return this.getRect(...this.selector.getRange());\n  }\n\n  setSelectedCellAttr(property, value) {\n    addHistory.call(this);\n    const { selector } = this;\n    const { styles } = this.d;\n    if (property === 'merge') {\n      if (value) this.merge();\n      else this.unmerge();\n    } else if (property === 'formula') {\n      const cell = this.getCellOrNew(...selector.indexes);\n      cell.text = `=${value}()`;\n    } else {\n      selector.each((ri, ci) => {\n        const cell = this.getCellOrNew(ri, ci);\n        let cstyle = {};\n        if (cell.si !== undefined) {\n          cstyle = helper.cloneDeep(styles[cell.si]);\n        }\n        if (property === 'format') {\n          cell.format = value;\n        } else if (property === 'border') {\n          // const { mode, style, color } = value;\n          const bi = this.addBorder(value.style, value.color);\n          setStyleBorder.call(this, cstyle, [ri, ci], value.mode, bi);\n          // console.log('border.cstyle:', value.mode, cstyle);\n          cell.si = this.addStyle(cstyle);\n        } else if (property === 'font-bold' || property === 'font-italic'\n          || property === 'font-name' || property === 'font-size') {\n          const nfont = {};\n          nfont[property.split('-')[1]] = value;\n          cstyle.font = Object.assign(cstyle.font || {}, nfont);\n          cell.si = this.addStyle(cstyle);\n        } else if (property === 'strikethrough' || property === 'textwrap'\n          || property === 'align' || property === 'valign'\n          || property === 'color' || property === 'bgcolor') {\n          cstyle[property] = value;\n          cell.si = this.addStyle(cstyle);\n        }\n      });\n    }\n    this.change(this.d);\n  }\n\n  getClipboardRect() {\n    const { clipboard } = this;\n    if (!clipboard.isClear()) {\n      const [sIndexes, eIndexes] = clipboard.get();\n      return this.getRect(sIndexes, eIndexes);\n    }\n    return { left: -100, top: -100 };\n  }\n\n  getRect([sri, sci], [eri, eci]) {\n    const { scroll } = this;\n    // console.log('sri:', sri, ',sci:', sci, ', eri:', eri, ', eci:', eci);\n    // no selector\n    if (sri < 0 && sci < 0) {\n      return {\n        left: 0, l: 0, top: 0, t: 0, scroll,\n      };\n    }\n    const { left, top } = this.cellPosition(sri, sci);\n    const height = this.rowSumHeight(sri, eri + 1);\n    const width = this.colSumWidth(sci, eci + 1);\n    // console.log('sri:', sri, ', sci:', sci, ', eri:', eri, ', eci:', eci);\n    let left0 = left - scroll.x;\n    let top0 = top - scroll.y;\n    const fsh = this.freezeTotalHeight();\n    const fsw = this.freezeTotalWidth();\n    if (fsw > 0 && fsw > left) {\n      left0 = left;\n    }\n    if (fsh > 0 && fsh > top) {\n      top0 = top;\n    }\n    return {\n      l: left,\n      t: top,\n      left: left0,\n      top: top0,\n      height,\n      width,\n      scroll,\n    };\n  }\n\n  getCellRectByXY(x, y) {\n    const { scroll } = this;\n    let { ri, top, height } = getCellRowByY.call(this, y, scroll.y);\n    let { ci, left, width } = getCellColByX.call(this, x, scroll.x);\n    if (ci === -1) {\n      width = this.colTotalWidth();\n    }\n    if (ri === -1) {\n      height = this.rowTotalHeight();\n    }\n    if (ri >= 0 || ci >= 0) {\n      inMerges.call(this, ri, ci, ([[sri, sci]]) => {\n        ri = sri;\n        ci = sci;\n        ({\n          left, top, width, height,\n        } = this.cellRect(sri, sci));\n      });\n    }\n    return {\n      ri, ci, left, top, width, height,\n    };\n  }\n  /* for selector end */\n\n  calRangeIndexes2(sIndexes, eIndexes) {\n    let [sri, sci] = sIndexes;\n    let [eri, eci] = eIndexes;\n    if (sri >= eri) {\n      [sri, eri] = [eri, sri];\n    }\n    if (sci >= eci) {\n      [sci, eci] = [eci, sci];\n    }\n    eachMerges.call(this, ([[msri, msci], [meri, meci]]) => {\n      // console.log(msri, eri, sri, meri, msci, eci, sci, meci);\n      if (msri > eri || sri > meri || msci > eci || sci > meci) {\n        // console.log('没有交集');\n      } else {\n        if (msri < sri) sri = msri;\n        if (msci < sci) sci = msci;\n        if (meri > eri) eri = meri;\n        if (meci > eci) eci = meci;\n      }\n    });\n    this.setSelectedIndexes([sri, sci], [eri, eci]);\n    return this.selector.getRange();\n  }\n\n  calRangeIndexes(ri, ci) {\n    const sIndexes = [ri, ci];\n    const eIndexes = [ri, ci];\n    if (ri === -1) {\n      sIndexes[0] = 0;\n      eIndexes[0] = this.rowLen() - 1;\n    }\n    if (ci === -1) {\n      sIndexes[1] = 0;\n      eIndexes[1] = this.colLen() - 1;\n    }\n    let mIndexes = [sIndexes, eIndexes];\n    inMerges.call(this, ri, ci, (merge) => {\n      // console.log('merge:', merge);\n      mIndexes = merge;\n    });\n    this.setSelectedIndexes(...mIndexes);\n    return mIndexes;\n  }\n\n  copy() {\n    const { sIndexes, eIndexes } = this.selector;\n    this.clipboard.copy(sIndexes, eIndexes);\n  }\n\n  cut() {\n    const { sIndexes, eIndexes } = this.selector;\n    this.clipboard.cut(sIndexes, eIndexes);\n  }\n\n  // what: all | text | format\n  paste(what = 'all') {\n    // console.log('sIndexes:', sIndexes);\n    const { clipboard } = this;\n    if (clipboard.isClear()) return;\n\n    const { sIndexes, eIndexes } = this.selector;\n    addHistory.call(this);\n    if (clipboard.isCopy()) {\n      copyPaste.call(this, clipboard.get(), [sIndexes, eIndexes], what);\n    } else if (clipboard.isCut()) {\n      cutPaste.call(this, clipboard.get(), [sIndexes, eIndexes]);\n    }\n    this.change(this.d);\n  }\n\n  autofill(sIndexes, eIndexes, what) {\n    addHistory.call(this);\n    copyPaste.call(this, this.selector.getRange(), [sIndexes, eIndexes], what, true);\n    this.change(this.d);\n  }\n\n  clearClipboard() {\n    this.clipboard.clear();\n  }\n\n  /* merge methods start */\n  eachMerges(cb) {\n    eachMerges.call(this, cb);\n  }\n\n  canUnmerge() {\n    const [[sri, sci], [eri, eci]] = this.selector.getRange();\n    const cell = this.getCell(sri, sci);\n    if (cell && cell.merge) {\n      const [rn, cn] = cell.merge;\n      if (sri + rn === eri && sci + cn === eci) return true;\n    }\n    return false;\n  }\n\n  merge() {\n    if (!this.isMultiple()) return;\n    const { sIndexes, eIndexes } = this.selector;\n    const [sri, sci] = sIndexes;\n    const [eri, eci] = eIndexes;\n    const rn = eri - sri;\n    const cn = eci - sci;\n    // console.log('merge:', rn, cn);\n    if (rn > 0 || cn > 0) {\n      addHistory.call(this);\n      const cell = this.getCellOrNew(sri, sci);\n      cell.merge = [rn, cn];\n      addMerges.call(this, sIndexes, eIndexes);\n      // delete merge cells\n      deleteCells.call(this, sIndexes, eIndexes);\n      // console.log('cell:', cell, this.d);\n      this.setCell(sri, sci, cell, 'all');\n      this.change(this.d);\n    }\n  }\n\n  unmerge() {\n    if (!this.canUnmerge()) return;\n    addHistory.call(this);\n    const { sIndexes, eIndexes } = this.selector;\n    const cell = this.getCell(...sIndexes);\n    delete cell.merge;\n    deleteMerges.call(this, sIndexes, eIndexes);\n    this.change(this.d);\n  }\n  /* merge methods end */\n\n  deleteCell(what = 'all') {\n    const { sIndexes, eIndexes } = this.selector;\n    addHistory.call(this);\n    deleteCells.call(this, sIndexes, eIndexes, what);\n    if (what === 'all' || what === 'format') {\n      deleteMerges.call(this, sIndexes, eIndexes);\n    }\n    this.change(this.d);\n  }\n\n  insertRow(n = 1) {\n    addHistory.call(this);\n    const { cellmm, rowm } = this.d;\n    const [sri] = this.selector.sIndexes;\n    const ndata = {};\n    Object.keys(cellmm).forEach((ri) => {\n      let nri = parseInt(ri, 10);\n      if (nri >= sri) {\n        nri += n;\n      }\n      ndata[nri] = cellmm[ri];\n    });\n    this.d.cellmm = ndata;\n    rowm.len = this.rowLen() + n;\n    modifyMerges.call(this, 'row', sri, n);\n    this.change(this.d);\n  }\n\n  deleteRow() {\n    addHistory.call(this);\n    const { cellmm, rowm } = this.d;\n    const [[sri], [eri]] = this.selector.getRange();\n    // console.log('min:', min, ',max:', max);\n    const n = eri - sri + 1;\n    const ndata = {};\n    Object.keys(cellmm).forEach((ri) => {\n      const nri = parseInt(ri, 10);\n      if (nri < sri) {\n        ndata[nri] = cellmm[nri];\n      } else if (ri > eri) {\n        ndata[nri - n] = cellmm[nri];\n      }\n    });\n    // console.log('cellmm:', cellmm, ', ndata:', ndata);\n    this.d.cellmm = ndata;\n    rowm.len = this.rowLen() - n;\n    modifyMerges.call(this, 'row', sri, -n);\n    this.change(this.d);\n  }\n\n  insertColumn(n = 1) {\n    addHistory.call(this);\n    const { cellmm, colm } = this.d;\n    const [, sci] = this.selector.sIndexes;\n    Object.keys(cellmm).forEach((ri) => {\n      const rndata = {};\n      Object.keys(cellmm[ri]).forEach((ci) => {\n        let nci = parseInt(ci, 10);\n        if (nci >= sci) {\n          nci += n;\n        }\n        rndata[nci] = cellmm[ri][ci];\n      });\n      cellmm[ri] = rndata;\n    });\n    colm.len = this.colLen() + n;\n    modifyMerges.call(this, 'col', sci, n);\n    this.change(this.d);\n  }\n\n  deleteColumn() {\n    addHistory.call(this);\n    const { cellmm, colm } = this.d;\n    const [[, sci], [, eci]] = this.selector.getRange();\n    const n = eci - sci + 1;\n    Object.keys(cellmm).forEach((ri) => {\n      const rndata = {};\n      Object.keys(cellmm[ri]).forEach((ci) => {\n        const nci = parseInt(ci, 10);\n        if (nci < sci) {\n          rndata[nci] = cellmm[ri][ci];\n        } else if (nci > eci) {\n          rndata[nci - n] = cellmm[ri][ci];\n        }\n      });\n      cellmm[ri] = rndata;\n    });\n    colm.len = this.colLen() - n;\n    // console.log('n:', n);\n    modifyMerges.call(this, 'col', sci, -n);\n    this.change(this.d);\n  }\n\n  scrollx(x, cb) {\n    const { scroll } = this;\n    const [, fci] = this.getFreeze();\n    const [\n      ci, left, width,\n    ] = helper.rangeReduceIf(fci, this.colLen(), 0, 0, x, i => this.getColWidth(i));\n    // console.log('fci:', fci, ', ci:', ci);\n    let x1 = left;\n    if (x > 0) x1 += width;\n    if (scroll.x !== x1) {\n      scroll.indexes[1] = x > 0 ? ci - fci : 0;\n      scroll.x = x1;\n      cb();\n    }\n  }\n\n  scrolly(y, cb) {\n    const { scroll } = this;\n    const [fri] = this.getFreeze();\n    const [\n      ri, top, height,\n    ] = helper.rangeReduceIf(fri, this.rowLen(), 0, 0, y, i => this.getRowHeight(i));\n    let y1 = top;\n    if (y > 0) y1 += height;\n    if (scroll.y !== y1) {\n      scroll.indexes[0] = y > 0 ? ri - fri : 0;\n      scroll.y = y1;\n      cb();\n    }\n  }\n\n  colTotalWidth() {\n    return this.colSumWidth(0, this.colLen());\n  }\n\n  rowTotalHeight() {\n    return this.rowSumHeight(0, this.rowLen());\n  }\n\n  cellRect(ri, ci) {\n    const { left, top } = this.cellPosition(ri, ci);\n    const cell = this.getCell(ri, ci);\n    let width = this.getColWidth(ci);\n    let height = this.getRowHeight(ri);\n    if (cell !== null) {\n      if (cell.merge) {\n        const [rn, cn] = cell.merge;\n        // console.log('cell.merge:', cell.merge);\n        if (rn > 0) {\n          for (let i = 1; i <= rn; i += 1) {\n            height += this.getRowHeight(ri + i);\n          }\n        }\n        if (cn > 0) {\n          for (let i = 1; i <= cn; i += 1) {\n            width += this.getColWidth(ci + i);\n          }\n        }\n      }\n    }\n    // console.log('data:', this.d);\n    return {\n      left, top, width, height, cell,\n    };\n  }\n\n  cellPosition(ri, ci) {\n    const left = this.colSumWidth(0, ci);\n    const top = this.rowSumHeight(0, ri);\n    return {\n      left, top,\n    };\n  }\n\n  getCell(ri, ci) {\n    const { cellmm } = this.d;\n    if (cellmm[ri] !== undefined && cellmm[ri][ci] !== undefined) {\n      return cellmm[ri][ci];\n    }\n    return null;\n  }\n\n  getCellStyle(ri, ci) {\n    const cell = this.getCell(ri, ci);\n    const { styles } = this.d;\n    // console.log('options:', this.opitons.style);\n    return helper.merge(this.options.style, (cell && cell.si !== undefined) ? styles[cell.si] : {});\n  }\n\n  setCellText(ri, ci, text) {\n    addHistory.call(this);\n    const cell = this.getCellOrNew(ri, ci);\n    cell.text = text;\n    this.change(this.d);\n  }\n\n  // what: all | text | format\n  setCell(ri, ci, cell, what = 'all') {\n    const { cellmm } = this.d;\n    cellmm[ri] = cellmm[ri] || {};\n    if (what === 'all') {\n      cellmm[ri][ci] = cell;\n    } else if (what === 'text') {\n      cellmm[ri][ci] = cellmm[ri][ci] || {};\n      cellmm[ri][ci].text = cell.text;\n    } else if (what === 'format') {\n      cellmm[ri][ci] = cellmm[ri][ci] || {};\n      cellmm[ri][ci].si = cell.si;\n      if (cell.merge) cellmm[ri][ci].merge = cell.merge;\n    }\n  }\n\n  getCellOrNew(ri, ci) {\n    const { cellmm } = this.d;\n    cellmm[ri] = cellmm[ri] || {};\n    cellmm[ri][ci] = cellmm[ri][ci] || {};\n    // console.log('ri:', ri, ', ci:', ci, cellmm);\n    return cellmm[ri][ci];\n  }\n\n  getFreeze() {\n    return this.d.freeze;\n  }\n\n  freezeIsActive() {\n    const [ri, ci] = this.d.freeze;\n    return ri > 0 || ci > 0;\n  }\n\n  setFreeze(ri, ci) {\n    addHistory.call(this);\n    this.d.freeze[0] = ri;\n    this.d.freeze[1] = ci;\n  }\n\n  freezeTotalWidth() {\n    return this.colSumWidth(0, this.d.freeze[1]);\n  }\n\n  freezeTotalHeight() {\n    return this.rowSumHeight(0, this.d.freeze[0]);\n  }\n\n  colSumWidth(min, max) {\n    return helper.rangeSum(min, max, i => this.getColWidth(i));\n  }\n\n  rowSumHeight(min, max) {\n    return helper.rangeSum(min, max, i => this.getRowHeight(i));\n  }\n\n  rowEach(min, max, cb) {\n    let y = 0;\n    const { view } = this.options;\n    // console.log('min:', min, ', max:', max, ', scroll:', scroll);\n    for (let i = min; i <= max; i += 1) {\n      const rowHeight = this.getRowHeight(i);\n      cb(i, y, rowHeight);\n      y += rowHeight;\n      if (y > view.height()) break;\n    }\n  }\n\n  colEach(min, max, cb) {\n    let x = 0;\n    const { view } = this.options;\n    for (let i = min; i <= max; i += 1) {\n      const colWidth = this.getColWidth(i);\n      cb(i, x, colWidth);\n      x += colWidth;\n      if (x > view.width()) break;\n    }\n  }\n\n  rowLen() {\n    return this.d.rowm.len || this.options.row.len;\n  }\n\n  colLen() {\n    return this.d.colm.len || this.options.col.len;\n  }\n\n  getColWidth(index) {\n    const { colm } = this.d;\n    const { col } = this.options;\n    return colm[`${index}`] ? colm[`${index}`].width : col.width;\n  }\n\n  setColWidth(index, v) {\n    addHistory.call(this);\n    const { colm } = this.d;\n    colm[`${index}`] = colm[`${index}`] || {};\n    colm[`${index}`].width = v;\n    this.change(this.d);\n  }\n\n  getRowHeight(index) {\n    const { rowm } = this.d;\n    const { row } = this.options;\n    // console.log('rowm.index:', rowm[index], rowm[`${index}`]);\n    return rowm[`${index}`] ? rowm[`${index}`].height : row.height;\n  }\n\n  setRowHeight(index, v) {\n    addHistory.call(this);\n    const { rowm } = this.d;\n    rowm[`${index}`] = rowm[`${index}`] || {};\n    rowm[`${index}`].height = v;\n    this.change(this.d);\n  }\n\n  getFixedHeaderWidth() {\n    return this.options.col.indexWidth;\n  }\n\n  getFixedHeaderHeight() {\n    return this.options.row.height;\n  }\n\n  eachCells(cb) {\n    const { cellmm } = this.d;\n    // console.log('celmm:', cellmm);\n    Object.keys(cellmm).forEach((ri) => {\n      Object.keys(cellmm[ri]).forEach((ci) => {\n        cb(this.getCell(ri, ci), parseInt(ri, 10), parseInt(ci, 10));\n      });\n    });\n  }\n\n  eachCellsInView(rowStart, rowLen, colStart, colLen, jumpMerge = true, cb) {\n    const cmerges = [];\n    const { view } = this.options;\n    let [x, y] = [0, 0];\n    for (let i = rowStart; i < rowLen; i += 1) {\n      y += this.getRowHeight(i);\n      x = 0;\n      for (let j = colStart; j < colLen; j += 1) {\n        x += this.getColWidth(j);\n        if (jumpMerge) {\n          const cmergeIndexes = [];\n          cmerges.forEach(([mi, mj, rn, cn], index) => {\n            if (mi <= i && i <= mi + rn) {\n              if (j === mj) {\n                j += cn + 1;\n              }\n            }\n            if (i === mi + rn + 1) {\n              cmergeIndexes.push(index);\n            }\n          });\n          cmergeIndexes.forEach((it) => {\n            cmerges.splice(it, 1);\n          });\n        }\n        const cell = this.getCell(i, j);\n        cb(cell, i, j);\n        // renderCell.call(this, i, j);\n        // console.log('cmerges:', cmerges);\n        if (jumpMerge && cell && cell.merge) {\n          const [rn, cn] = cell.merge;\n          // console.log('rn:', rn, ', cn:', cn);\n          cmerges.push([i, j, rn, cn]);\n          j += cn;\n        }\n        if (x > view.width()) break;\n      }\n      if (y > view.height()) break;\n    }\n  }\n\n  addBorder(style, color) {\n    const { borders } = this.d;\n    for (let i = 0; i < borders.length; i += 1) {\n      const [s, c] = borders[i];\n      if (s === style && c === color) {\n        return i;\n      }\n    }\n    borders.push([style, color]);\n    return borders.length - 1;\n  }\n\n  addStyle(nstyle) {\n    const { styles } = this.d;\n    // console.log('old.styles:', styles, nstyle);\n    for (let i = 0; i < styles.length; i += 1) {\n      const style = styles[i];\n      if (helper.equals(style, nstyle)) return i;\n    }\n    styles.push(nstyle);\n    return styles.length - 1;\n  }\n\n  getStyle(index) {\n    return this.d.styles[index];\n  }\n\n  getBorder(index) {\n    return this.d.borders[index];\n  }\n}\n","export function bind(target, name, fn) {\n  target.addEventListener(name, fn);\n}\nexport function unbind(target, name, fn) {\n  target.removeEventListener(name, fn);\n}\nexport function mouseMoveUp(target, movefunc, upfunc) {\n  bind(target, 'mousemove', movefunc);\n  const t = target;\n  t.xEvtUp = (evt) => {\n    // console.log('mouseup>>>');\n    unbind(target, 'mousemove', movefunc);\n    unbind(target, 'mouseup', target.xEvtUp);\n    upfunc(evt);\n  };\n  bind(target, 'mouseup', target.xEvtUp);\n}\n","/* global window */\nexport const cssPrefix = 'x-spreadsheet';\nexport const dpr = window.devicePixelRatio || 1;\nexport default {\n  cssPrefix,\n  dpr,\n};\n","/* global window */\nimport { h } from './element';\nimport { mouseMoveUp } from '../event';\nimport { cssPrefix } from '../config';\n\nexport default class Resizer {\n  constructor(vertical = false, minDistance) {\n    this.moving = false;\n    this.vertical = vertical;\n    this.el = h('div', `${cssPrefix}-resizer ${vertical ? 'vertical' : 'horizontal'}`).children(\n      this.hoverEl = h('div', `${cssPrefix}-resizer-hover`)\n        .on('mousedown.stop', evt => this.mousedownHandler(evt)),\n      this.lineEl = h('div', `${cssPrefix}-resizer-line`).hide(),\n    ).hide();\n    // cell rect\n    this.cRect = null;\n    this.finishedFn = null;\n    this.minDistance = minDistance;\n  }\n\n  // rect : {top, left, width, height}\n  // line : {width, height}\n  show(rect, line) {\n    const {\n      moving, vertical, hoverEl, lineEl, el,\n    } = this;\n    if (moving) return;\n    this.cRect = rect;\n    const {\n      left, top, width, height,\n    } = rect;\n    el.offset({\n      left: vertical ? left + width - 5 : left,\n      top: vertical ? top : top + height - 5,\n    }).show();\n    hoverEl.offset({\n      width: vertical ? 5 : width,\n      height: vertical ? height : 5,\n    });\n    lineEl.offset({\n      width: vertical ? 0 : line.width,\n      height: vertical ? line.height : 0,\n    });\n  }\n\n  hide() {\n    this.el.offset({\n      left: 0,\n      top: 0,\n    }).hide();\n  }\n\n  mousedownHandler(evt) {\n    let startEvt = evt;\n    const {\n      el, lineEl, cRect, vertical, minDistance,\n    } = this;\n    let distance = vertical ? cRect.width : cRect.height;\n    // console.log('distance:', distance);\n    lineEl.show();\n    mouseMoveUp(window, (e) => {\n      this.moving = true;\n      if (startEvt !== null && e.buttons === 1) {\n        // console.log('top:', top, ', left:', top, ', cRect:', cRect);\n        if (vertical) {\n          distance += e.movementX;\n          if (distance > minDistance) {\n            el.css('left', `${cRect.left + distance}px`);\n          }\n        } else {\n          distance += e.movementY;\n          if (distance > minDistance) {\n            el.css('top', `${cRect.top + distance}px`);\n          }\n        }\n        startEvt = e;\n      }\n    }, () => {\n      startEvt = null;\n      lineEl.hide();\n      this.moving = false;\n      this.hide();\n      if (this.finishedFn) {\n        if (distance < minDistance) distance = minDistance;\n        this.finishedFn(cRect, distance);\n      }\n    });\n  }\n}\n","import { h } from './element';\nimport { cssPrefix } from '../config';\n\nexport default class Scrollbar {\n  constructor(vertical) {\n    this.vertical = vertical;\n    this.moveFn = null;\n    this.el = h('div', `${cssPrefix}-scrollbar ${vertical ? 'vertical' : 'horizontal'}`)\n      .child(this.contentEl = h('div', ''))\n      .on('mousemove.stop', () => {})\n      .on('scroll.stop', (evt) => {\n        const { scrollTop, scrollLeft } = evt.target;\n        // console.log('scrollTop:', scrollTop);\n        if (this.moveFn) {\n          this.moveFn(this.vertical ? scrollTop : scrollLeft, evt);\n        }\n        // console.log('evt:::', evt);\n      });\n  }\n\n  move(v) {\n    this.el.scroll(v);\n    return this;\n  }\n\n  scroll() {\n    return this.el.scroll();\n  }\n\n  set(distance, contentDistance) {\n    const d = distance - 1;\n    // console.log('distance:', distance, ', contentDistance:', contentDistance);\n    if (contentDistance > d) {\n      const cssKey = this.vertical ? 'height' : 'width';\n      this.el.css(cssKey, `${d}px`).show();\n      this.contentEl\n        .css(this.vertical ? 'width' : 'height', '1px')\n        .css(cssKey, `${contentDistance}px`);\n    } else {\n      this.el.hide();\n    }\n    return this;\n  }\n}\n","import { h } from './element';\nimport { cssPrefix } from '../config';\n\nconst selectorHeightBorderWidth = 2 * 2 - 1;\nlet startZIndex = 10;\n\nclass SelectorElement {\n  constructor() {\n    this.cornerEl = h('div', `${cssPrefix}-selector-corner`);\n    this.areaEl = h('div', `${cssPrefix}-selector-area`)\n      .child(this.cornerEl).hide();\n    this.clipboardEl = h('div', `${cssPrefix}-selector-clipboard`).hide();\n    this.autofillEl = h('div', `${cssPrefix}-selector-autofill`).hide();\n    this.el = h('div', `${cssPrefix}-selector`)\n      .css('z-index', `${startZIndex}`)\n      .children(this.areaEl, this.clipboardEl, this.autofillEl)\n      .hide();\n    startZIndex += 1;\n  }\n\n  setOffset(v) {\n    this.el.offset(v).show();\n    return this;\n  }\n\n  hide() {\n    this.el.hide();\n    return this;\n  }\n\n  setAreaOffset(v) {\n    const {\n      left, top, width, height,\n    } = v;\n    this.areaEl.offset({\n      width: width - selectorHeightBorderWidth + 0.8,\n      height: height - selectorHeightBorderWidth + 0.8,\n      left: left - 0.8,\n      top: top - 0.8,\n    }).show();\n  }\n\n  setClipboardOffset(v) {\n    const {\n      left, top, width, height,\n    } = v;\n    this.clipboardEl.offset({\n      left,\n      top,\n      width: width - 5,\n      height: height - 5,\n    });\n  }\n\n  showAutofill(v) {\n    const {\n      left, top, width, height,\n    } = v;\n    this.autofillEl.offset({\n      width: width - selectorHeightBorderWidth,\n      height: height - selectorHeightBorderWidth,\n      left,\n      top,\n    }).show();\n  }\n\n  hideAutofill() {\n    this.autofillEl.hide();\n  }\n\n  showClipboard() {\n    this.clipboardEl.show();\n  }\n\n  hideClipboard() {\n    this.clipboardEl.hide();\n  }\n}\n\nfunction calBRAreaOffset(offset) {\n  const { data } = this;\n  const {\n    left, top, width, height, scroll, l, t,\n  } = offset;\n  const ftwidth = data.freezeTotalWidth();\n  const ftheight = data.freezeTotalHeight();\n  let left0 = left - ftwidth;\n  if (ftwidth > l) left0 -= scroll.x;\n  let top0 = top - ftheight;\n  if (ftheight > t) top0 -= scroll.y;\n  return {\n    left: left0,\n    top: top0,\n    width,\n    height,\n  };\n}\n\nfunction calTAreaOffset(offset) {\n  const { data } = this;\n  const {\n    left, width, height, l, t, scroll,\n  } = offset;\n  const ftwidth = data.freezeTotalWidth();\n  let left0 = left - ftwidth;\n  if (ftwidth > l) left0 -= scroll.x;\n  return {\n    left: left0, top: t, width, height,\n  };\n}\n\nfunction calLAreaOffset(offset) {\n  const { data } = this;\n  const {\n    top, width, height, l, t, scroll,\n  } = offset;\n  const ftheight = data.freezeTotalHeight();\n  let top0 = top - ftheight;\n  // console.log('ftheight:', ftheight, ', t:', t);\n  if (ftheight > t) top0 -= scroll.y;\n  return {\n    left: l, top: top0, width, height,\n  };\n}\n\nfunction setBRAreaOffset(offset) {\n  const { br } = this;\n  br.setAreaOffset(calBRAreaOffset.call(this, offset));\n}\n\nfunction setTLAreaOffset(offset) {\n  const { tl } = this;\n  tl.setAreaOffset(offset);\n}\n\nfunction setTAreaOffset(offset) {\n  const { t } = this;\n  t.setAreaOffset(calTAreaOffset.call(this, offset));\n}\n\nfunction setLAreaOffset(offset) {\n  const { l } = this;\n  l.setAreaOffset(calLAreaOffset.call(this, offset));\n}\n\nfunction setLClipboardOffset(offset) {\n  const { l } = this;\n  l.setClipboardOffset(calLAreaOffset.call(this, offset));\n}\n\nfunction setBRClipboardOffset(offset) {\n  const { br } = this;\n  br.setClipboardOffset(calBRAreaOffset.call(this, offset));\n}\n\nfunction setTLClipboardOffset(offset) {\n  const { tl } = this;\n  tl.setClipboardOffset(offset);\n}\n\nfunction setTClipboardOffset(offset) {\n  const { t } = this;\n  t.setClipboardOffset(calTAreaOffset.call(this, offset));\n}\n\nfunction setAllAreaOffset(offset) {\n  setBRAreaOffset.call(this, offset);\n  setTLAreaOffset.call(this, offset);\n  setTAreaOffset.call(this, offset);\n  setLAreaOffset.call(this, offset);\n}\n\nfunction setAllClipboardOffset(offset) {\n  setBRClipboardOffset.call(this, offset);\n  setTLClipboardOffset.call(this, offset);\n  setTClipboardOffset.call(this, offset);\n  setLClipboardOffset.call(this, offset);\n}\n\nexport default class Selector {\n  constructor(data) {\n    this.data = data;\n    this.br = new SelectorElement();\n    this.t = new SelectorElement();\n    this.l = new SelectorElement();\n    this.tl = new SelectorElement();\n    this.br.el.show();\n    this.offset = null;\n    this.areaOffset = null;\n    this.indexes = null;\n    this.sIndexes = null;\n    this.eIndexes = null;\n    this.saIndexes = null;\n    this.eaIndexes = null;\n    this.el = h('div', `${cssPrefix}-selectors`)\n      .children(\n        this.tl.el,\n        this.t.el,\n        this.l.el,\n        this.br.el,\n      ).hide();\n\n    startZIndex += 1;\n  }\n\n  hide() {\n    this.el.hide();\n  }\n\n  resetOffset() {\n    const {\n      data, tl, t, l, br,\n    } = this;\n    const freezeHeight = data.freezeTotalHeight();\n    const freezeWidth = data.freezeTotalWidth();\n    if (freezeHeight > 0 || freezeWidth > 0) {\n      tl.setOffset({ width: freezeWidth, height: freezeHeight });\n      t.setOffset({ left: freezeWidth, height: freezeHeight });\n      l.setOffset({ top: freezeHeight, width: freezeWidth });\n      br.setOffset({ left: freezeWidth, top: freezeHeight });\n    } else {\n      tl.hide();\n      t.hide();\n      l.hide();\n      br.setOffset({ left: 0, top: 0 });\n    }\n  }\n\n  resetAreaOffset() {\n    // console.log('offset:', offset);\n    const offset = this.data.getSelectedRect();\n    const coffset = this.data.getClipboardRect();\n    setAllAreaOffset.call(this, offset);\n    setAllClipboardOffset.call(this, coffset);\n    this.resetOffset();\n  }\n\n  resetBRTAreaOffset() {\n    const offset = this.data.getSelectedRect();\n    const coffset = this.data.getClipboardRect();\n    setBRAreaOffset.call(this, offset);\n    setTAreaOffset.call(this, offset);\n    setBRClipboardOffset.call(this, coffset);\n    setTClipboardOffset.call(this, coffset);\n    this.resetOffset();\n  }\n\n  resetBRLAreaOffset() {\n    const offset = this.data.getSelectedRect();\n    const coffset = this.data.getClipboardRect();\n    setBRAreaOffset.call(this, offset);\n    setLAreaOffset.call(this, offset);\n    setBRClipboardOffset.call(this, coffset);\n    setLClipboardOffset.call(this, coffset);\n    this.resetOffset();\n  }\n\n  set(ri, ci) {\n    const { data } = this;\n    const [sIndexes, eIndexes] = data.calRangeIndexes(ri, ci);\n    if (ri > 0 && ci > 0) {\n      data.setSelectedCurrentIndexes(sIndexes);\n      this.indexes = sIndexes;\n    }\n    this.moveIndexes = sIndexes;\n    this.sIndexes = sIndexes;\n    this.eIndexes = eIndexes;\n    this.resetAreaOffset();\n    this.el.show();\n  }\n\n  setEnd(ri, ci) {\n    const { data } = this;\n    let [sIndexes, eIndexes] = data.calRangeIndexes2(this.indexes, [ri, ci]);\n    [sIndexes, eIndexes] = data.calRangeIndexes2(sIndexes, eIndexes);\n    this.sIndexes = sIndexes;\n    this.eIndexes = eIndexes;\n    this.reset();\n  }\n\n  reset() {\n    setAllAreaOffset.call(this, this.data.getSelectedRect());\n  }\n\n  showAutofill(ri, ci) {\n    if (ri === -1 && ci === -1) return;\n    // console.log('ri:', ri, ', ci:', ci);\n    const [sri, sci] = this.sIndexes;\n    const [eri, eci] = this.eIndexes;\n    const [nri, nci] = [ri, ci];\n    // const rn = eri - sri;\n    // const cn = eci - sci;\n    const srn = sri - ri;\n    const scn = sci - ci;\n    const ern = eri - ri;\n    const ecn = eci - ci;\n    if (scn > 0) {\n      // left\n      // console.log('left');\n      this.saIndexes = [sri, nci];\n      this.eaIndexes = [eri, sci - 1];\n      // data.calRangeIndexes2(\n    } else if (srn > 0) {\n      // top\n      // console.log('top');\n      // nri = sri;\n      this.saIndexes = [nri, sci];\n      this.eaIndexes = [sri - 1, eci];\n    } else if (ecn < 0) {\n      // right\n      // console.log('right');\n      // nci = eci;\n      this.saIndexes = [sri, eci + 1];\n      this.eaIndexes = [eri, nci];\n    } else if (ern < 0) {\n      // bottom\n      // console.log('bottom');\n      // nri = eri;\n      this.saIndexes = [eri + 1, sci];\n      this.eaIndexes = [nri, eci];\n    } else {\n      // console.log('else:');\n      this.saIndexes = null;\n      this.eaIndexes = null;\n      return;\n    }\n    if (this.saIndexes !== null) {\n      // console.log(this.saIndexes, ':', this.eaIndexes);\n      const offset = this.data.getRect(this.saIndexes, this.eaIndexes);\n      offset.width += 2;\n      offset.height += 2;\n      const {\n        br, l, t, tl,\n      } = this;\n      br.showAutofill(calBRAreaOffset.call(this, offset));\n      l.showAutofill(calLAreaOffset.call(this, offset));\n      t.showAutofill(calTAreaOffset.call(this, offset));\n      tl.showAutofill(offset);\n    }\n  }\n\n  hideAutofill() {\n    ['br', 'l', 't', 'tl'].forEach((property) => {\n      this[property].hideAutofill();\n    });\n  }\n\n  showClipboard() {\n    const coffset = this.data.getClipboardRect();\n    setAllClipboardOffset.call(this, coffset);\n    ['br', 'l', 't', 'tl'].forEach((property) => {\n      this[property].showClipboard();\n    });\n  }\n\n  hideClipboard() {\n    ['br', 'l', 't', 'tl'].forEach((property) => {\n      this[property].hideClipboard();\n    });\n  }\n}\n","/* global window */\nimport { h } from './element';\nimport { bind } from '../event';\nimport { cssPrefix } from '../config';\n\nfunction inputMovePrev(evt) {\n  evt.preventDefault();\n  evt.stopPropagation();\n  const { filterItems } = this;\n  if (filterItems.length <= 0) return;\n  filterItems[this.itemIndex].toggle();\n  this.itemIndex -= 1;\n  if (this.itemIndex < 0) {\n    this.itemIndex = filterItems.length - 1;\n  }\n  filterItems[this.itemIndex].toggle();\n}\n\nfunction inputMoveNext(evt) {\n  evt.stopPropagation();\n  const { filterItems } = this;\n  if (filterItems.length <= 0) return;\n  filterItems[this.itemIndex].toggle();\n  this.itemIndex += 1;\n  if (this.itemIndex > filterItems.length - 1) {\n    this.itemIndex = 0;\n  }\n  filterItems[this.itemIndex].toggle();\n}\n\nfunction inputEnter(evt) {\n  evt.preventDefault();\n  const { filterItems } = this;\n  if (filterItems.length <= 0) return;\n  evt.stopPropagation();\n  filterItems[this.itemIndex].el.click();\n  this.hide();\n}\n\nfunction inputKeydownHandler(evt) {\n  const { keyCode } = evt;\n  if (evt.ctrlKey) {\n    evt.stopPropagation();\n  }\n  switch (keyCode) {\n    case 37: // left\n      evt.stopPropagation();\n      break;\n    case 38: // up\n      inputMovePrev.call(this, evt);\n      break;\n    case 39: // right\n      evt.stopPropagation();\n      break;\n    case 40: // down\n      inputMoveNext.call(this, evt);\n      break;\n    case 13: // enter\n      inputEnter.call(this, evt);\n      break;\n    case 9:\n      inputEnter.call(this, evt);\n      break;\n    default:\n      evt.stopPropagation();\n      break;\n  }\n}\n\nexport default class Suggest {\n  constructor(items, itemClick) {\n    this.filterItems = [];\n    this.items = items;\n    this.el = h('div', `${cssPrefix}-suggest`).hide();\n    this.itemClick = itemClick;\n    this.itemIndex = 0;\n  }\n\n  setOffset(v) {\n    this.el.cssRemoveKeys('top', 'bottom')\n      .offset(v);\n  }\n\n  hide() {\n    this.filterItems = [];\n    this.itemIndex = 0;\n    this.el.hide();\n  }\n\n  search(word) {\n    let { items } = this;\n    if (!/^\\s*$/.test(word)) {\n      items = items.filter(it => it.key.startsWith(word.toUpperCase()));\n    }\n    items = items.map((it) => {\n      const item = h('div', `${cssPrefix}-item`)\n        .child(it.key)\n        .on('click.stop', () => {\n          this.itemClick(it);\n          this.hide();\n        });\n      item.child(h('div', 'label').html(it.title || it.label));\n      return item;\n    });\n    this.filterItems = items;\n    if (items.length <= 0) {\n      return;\n    }\n    items[0].toggle();\n    this.el.html('').children(...items).show();\n  }\n\n  bindInputEvents(input) {\n    input.on('keydown', evt => inputKeydownHandler.call(this, evt));\n    bind(window, 'click', (evt) => {\n      if (this.el.contains(evt.target)) return;\n      this.hide();\n    });\n  }\n}\n","//* global window */\nimport { h } from './element';\nimport Suggest from './suggest';\nimport { cssPrefix } from '../config';\n// import { mouseMoveUp } from '../event';\n\nfunction resetTextareaSize() {\n  if (!/^\\s*$/.test(this.inputText)) {\n    const {\n      textlineEl, textEl, areaOffset,\n    } = this;\n    const tlineWidth = textlineEl.offset().width + 9;\n    const maxWidth = this.viewFn().width - areaOffset.left - 9;\n    // console.log('tlineWidth:', tlineWidth, ':', maxWidth);\n    if (tlineWidth > areaOffset.width) {\n      let twidth = tlineWidth;\n      if (tlineWidth > maxWidth) {\n        twidth = maxWidth;\n        let h1 = parseInt(tlineWidth / maxWidth, 10);\n        h1 += (tlineWidth % maxWidth) > 0 ? 1 : 0;\n        h1 *= this.rowHeight;\n        if (h1 > areaOffset.height) {\n          textEl.css('height', `${h1}px`);\n        }\n      }\n      textEl.css('width', `${twidth}px`);\n    }\n  }\n}\n\nfunction inputEventHandler(evt) {\n  const v = evt.target.value;\n  // console.log(evt, 'v:', v);\n  this.inputText = v;\n  const start = v.lastIndexOf('=');\n  const { suggest, textlineEl } = this;\n  if (start !== -1) {\n    suggest.search(v.substring(start + 1));\n  } else {\n    suggest.hide();\n  }\n  textlineEl.html(v);\n  resetTextareaSize.call(this);\n}\n\nfunction setTextareaRange(position) {\n  const { el } = this.textEl;\n  setTimeout(() => {\n    el.focus();\n    el.setSelectionRange(position, position);\n  }, 0);\n}\n\nfunction setText(text, position) {\n  const { textEl, textlineEl } = this;\n  // firefox bug\n  textEl.el.blur();\n\n  textEl.val(text);\n  textlineEl.html(text);\n  setTextareaRange.call(this, position);\n}\n\nfunction suggestItemClick(it) {\n  const { inputText } = this;\n  const start = inputText.lastIndexOf('=');\n  const sit = inputText.substring(0, start + 1);\n  let eit = inputText.substring(start + 1);\n  if (eit.indexOf(')') !== -1) {\n    eit = eit.substring(eit.indexOf(')'));\n  } else {\n    eit = '';\n  }\n  this.inputText = `${sit + it.key}(`;\n  // console.log('inputText:', this.inputText);\n  const position = this.inputText.length;\n  this.inputText += `)${eit}`;\n  setText.call(this, this.inputText, position);\n}\n\nexport default class Editor {\n  constructor(formulas, viewFn, rowHeight) {\n    this.viewFn = viewFn;\n    this.rowHeight = rowHeight;\n    this.suggest = new Suggest(formulas, (it) => {\n      suggestItemClick.call(this, it);\n    });\n    this.areaEl = h('div', `${cssPrefix}-editor-area`)\n      .children(\n        this.textEl = h('textarea', '')\n          .on('input', evt => inputEventHandler.call(this, evt)),\n        this.textlineEl = h('div', 'textline'),\n        this.suggest.el,\n      )\n      .on('mousemove.stop', () => {})\n      .on('mousedown.stop', () => {});\n    this.el = h('div', `${cssPrefix}-editor`)\n      .child(this.areaEl).hide();\n    this.suggest.bindInputEvents(this.textEl);\n\n    this.areaOffset = null;\n    this.freeze = { w: 0, h: 0 };\n    this.cell = null;\n    this.inputText = '';\n    this.change = () => {};\n  }\n\n  setFreezeLengths(width, height) {\n    this.freeze.w = width;\n    this.freeze.h = height;\n  }\n\n  clear() {\n    const { cell } = this;\n    const cellText = (cell && cell.text) || '';\n    if (cellText !== this.inputText) {\n      this.change(this.inputText);\n    }\n    this.cell = null;\n    this.areaOffset = null;\n    this.inputText = '';\n    this.el.hide();\n    this.textEl.val('');\n    this.textlineEl.html('');\n  }\n\n  setOffset(offset, suggestPosition = 'top') {\n    const {\n      textEl, areaEl, suggest, freeze, el,\n    } = this;\n    if (offset) {\n      this.areaOffset = offset;\n      const {\n        left, top, width, height, l, t,\n      } = offset;\n      // console.log('left:', left, ',top:', top, ', freeze:', freeze);\n      const elOffset = { left: 0, top: 0 };\n      // top left\n      if (freeze.w > l && freeze.h > t) {\n        //\n      } else if (freeze.w < l && freeze.h < t) {\n        elOffset.left = freeze.w;\n        elOffset.top = freeze.h;\n      } else if (freeze.w > l) {\n        elOffset.top = freeze.h;\n      } else if (freeze.h > t) {\n        elOffset.left = freeze.w;\n      }\n      el.offset(elOffset);\n      areaEl.offset({ left: left - elOffset.left - 0.8, top: top - elOffset.top - 0.8 });\n      textEl.offset({ width: width - 9 + 0.8, height: height - 3 + 0.8 });\n      const sOffset = { left: 0 };\n      sOffset[suggestPosition] = height;\n      suggest.setOffset(sOffset);\n    }\n  }\n\n  setCell(cell) {\n    this.el.show();\n    this.cell = cell;\n    const text = (cell && cell.text) || '';\n    this.inputText = text;\n    // console.log('text>>:', text);\n    setText.call(this, text, text.length);\n    resetTextareaSize.call(this);\n  }\n}\n","/* global window */\nimport { h } from './element';\nimport { bind } from '../event';\nimport { cssPrefix } from '../config';\n\nconst menuItems = [\n  { key: 'copy', title: 'Copy', label: 'Ctrl+C' },\n  { key: 'cut', title: 'Cut', label: 'Ctrl+X' },\n  { key: 'paste', title: 'Paste', label: 'Ctrl+V' },\n  { key: 'paste-value', title: 'Paste values only', label: 'Ctrl+Shift+V' },\n  { key: 'paste-format', title: 'Paste format only', label: 'Ctrl+Alt+V' },\n  { key: 'divider' },\n  { key: 'insert-row', title: 'Insert row' },\n  { key: 'insert-column', title: 'Insert column' },\n  { key: 'divider' },\n  { key: 'delete-row', title: 'Delete row' },\n  { key: 'delete-column', title: 'Delete column' },\n  { key: 'delete-cell', title: 'Delete cell' },\n];\n\nfunction buildMenuItem(item) {\n  if (item.key === 'divider') {\n    return h('div', `${cssPrefix}-item divider`);\n  }\n  return h('div', `${cssPrefix}-item`)\n    .on('click', () => {\n      this.itemClick(item.key);\n      this.hide();\n    })\n    .children(\n      item.title,\n      h('div', 'label').child(item.label || ''),\n    );\n}\n\nfunction buildMenu() {\n  return menuItems.map(it => buildMenuItem.call(this, it));\n}\n\nexport default class ContextMenu {\n  constructor(viewFn) {\n    this.el = h('div', `${cssPrefix}-contextmenu`)\n      .children(...buildMenu.call(this))\n      .hide();\n    this.viewFn = viewFn;\n    this.itemClick = () => {};\n    bind(window, 'click', (evt) => {\n      // console.log('outside:::', this.el.contains(evt.target));\n      if (this.el.contains(evt.target)) return;\n      this.hide();\n    });\n  }\n\n  hide() {\n    this.el.hide();\n  }\n\n  setPosition(x, y) {\n    const { el } = this;\n    const { height, width } = el.show().offset();\n    const view = this.viewFn();\n    let top = y;\n    let left = x;\n    if (view.height - y <= height) {\n      // -1 : firefox bug, focus contextmenu\n      top -= height - 1;\n    }\n    if (view.width - x <= width) {\n      // -1 : firefox bug, focus contextmenu\n      left -= width - 1;\n    }\n    el.offset({ left, top });\n  }\n}\n","/* global window */\nfunction dpr() {\n  return window.devicePixelRatio || 1;\n}\n\nfunction thinLineWidth() {\n  return dpr() - 0.5;\n}\n\nfunction npx(px) {\n  return px * dpr();\n}\n\nclass DrawBox {\n  constructor(x, y, w, h, padding = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n    this.padding = padding;\n    this.bgcolor = '#ffffff';\n    // border: [width, style, color]\n    this.borderTop = null;\n    this.borderRight = null;\n    this.borderBottom = null;\n    this.borderLeft = null;\n  }\n\n  setBorders(bt, br, bb, bl) {\n    if (bt) this.borderTop = bt;\n    if (br) this.borderRight = br;\n    if (bb) this.borderBottom = bb;\n    if (bl) this.borderLeft = bl;\n  }\n\n  innerWidth() {\n    return this.width - (this.padding * 2);\n  }\n\n  innerHeight() {\n    return this.height - (this.padding * 2);\n  }\n\n  textx(align) {\n    const { width, padding } = this;\n    let { x } = this;\n    if (align === 'left') {\n      x += padding;\n    } else if (align === 'center') {\n      x += width / 2;\n    } else if (align === 'right') {\n      x += width - padding;\n    }\n    return x;\n  }\n\n  texty(align, fontSize, hoffset) {\n    const { height, padding } = this;\n    let { y } = this;\n    if (align === 'top') {\n      y += padding;\n    } else if (align === 'middle') {\n      const y1 = y + height / 2 - hoffset;\n      const y2 = y + padding + fontSize / 2 + 1;\n      if (y1 < y2) y = y2;\n      else y = y1;\n    } else if (align === 'bottom') {\n      y += height - padding;\n    }\n    return y;\n  }\n\n  topxys() {\n    const { x, y, width } = this;\n    return [[x, y], [x + width, y]];\n  }\n\n  rightxys() {\n    const {\n      x, y, width, height,\n    } = this;\n    return [[x + width, y], [x + width, y + height]];\n  }\n\n  bottomxys() {\n    const {\n      x, y, width, height,\n    } = this;\n    return [[x, y + height], [x + width, y + height]];\n  }\n\n  leftxys() {\n    const {\n      x, y, height,\n    } = this;\n    return [[x, y], [x, y + height]];\n  }\n}\n\n\nfunction drawStrikethrough(tx, ty, align, valign, blheight, blwidth) {\n  const floffset = { x: 0, y: 0 };\n  if (valign === 'bottom') {\n    floffset.y = blheight / 2;\n  } else if (valign === 'top') {\n    floffset.y = -blheight / 2;\n  }\n\n  if (align === 'center') {\n    floffset.x = blwidth / 2;\n  } else if (align === 'right') {\n    floffset.x = blwidth;\n  }\n  this.line(\n    [tx - floffset.x, ty - floffset.y],\n    [tx - floffset.x + blwidth, ty - floffset.y],\n  );\n}\n\n\nclass Draw {\n  constructor(el, width, height) {\n    this.el = el;\n    this.ctx = el.getContext('2d');\n    this.resize(width, height);\n    this.ctx.scale(dpr(), dpr());\n  }\n\n  resize(width, height) {\n    // console.log('dpr:', dpr);\n    this.el.style.width = `${width}px`;\n    this.el.style.height = `${height}px`;\n    this.el.width = npx(width);\n    this.el.height = npx(height);\n  }\n\n  clear() {\n    const { width, height } = this.el;\n    this.ctx.clearRect(0, 0, width, height);\n    return this;\n  }\n\n  attr(options) {\n    Object.assign(this.ctx, options);\n    return this;\n  }\n\n  save() {\n    this.ctx.save();\n    this.ctx.beginPath();\n    return this;\n  }\n\n  restore() {\n    this.ctx.restore();\n    return this;\n  }\n\n  beginPath() {\n    this.ctx.beginPath();\n    return this;\n  }\n\n  translate(x, y) {\n    this.ctx.translate(npx(x), npx(y));\n    return this;\n  }\n\n  fillRect(x, y, w, h) {\n    this.ctx.fillRect(npx(x) - 0.5, npx(y) - 0.5, npx(w), npx(h));\n    return this;\n  }\n\n  fillText(text, x, y) {\n    this.ctx.fillText(text, npx(x), npx(y));\n    return this;\n  }\n\n  /*\n    txt: render text\n    box: DrawBox\n    attr: {\n      align: left | center | right\n      valign: top | middle | bottom\n      color: '#333333',\n      textDecoration: 'normal',\n      strikethrought: false,\n      font: {\n        name: 'Arial',\n        size: 14,\n        bold: false,\n        italic: false,\n      }\n    }\n    textWrap: text wrapping\n  */\n  text(txt, box, attr = {}, textWrap = true) {\n    const { ctx } = this;\n    const {\n      align, valign, font, color, strikethrough,\n    } = attr;\n    const tx = box.textx(align);\n    ctx.save();\n    this.attr({\n      textAlign: align,\n      textBaseline: valign,\n      font: `${font.italic ? 'italic' : ''} ${font.bold ? 'bold' : ''} ${npx(font.size)}px ${font.name}`,\n      fillStyle: color,\n      strokeStyle: color,\n    });\n    const txtWidth = ctx.measureText(txt).width;\n    let hoffset = 0;\n    if (textWrap) {\n      const n = Math.ceil(txtWidth / box.innerWidth());\n      hoffset = ((n - 1) * font.size) / 2;\n    }\n    let ty = box.texty(valign, font.size, hoffset);\n    // console.log('tx: ', tx, ', ty:', ty);\n    if (textWrap && txtWidth > box.innerWidth()) {\n      const textLine = { len: 0, start: 0 };\n      for (let i = 0; i < txt.length; i += 1) {\n        if (textLine.len >= box.innerWidth()) {\n          this.fillText(txt.substring(textLine.start, i), tx, ty);\n          if (strikethrough) {\n            drawStrikethrough.call(this, tx, ty, align, valign, font.size, textLine.len);\n          }\n          ty += font.size + 2;\n          textLine.len = 0;\n          textLine.start = i;\n        }\n        textLine.len += ctx.measureText(txt[i]).width;\n      }\n      if (textWrap && textLine.len > 0) {\n        this.fillText(txt.substring(textLine.start), tx, ty);\n        if (strikethrough) {\n          drawStrikethrough.call(this, tx, ty, align, valign, font.size, textLine.len);\n        }\n      }\n    } else {\n      this.fillText(txt, tx, ty);\n      if (strikethrough) {\n        drawStrikethrough.call(this, tx, ty, align, valign, font.size, txtWidth);\n      }\n    }\n    ctx.restore();\n    return this;\n  }\n\n  border(style, color) {\n    const { ctx } = this;\n    ctx.lineWidth = thinLineWidth;\n    ctx.strokeStyle = color;\n    if (style === 'medium') {\n      ctx.lineWidth = npx(1) + 0.5;\n    } else if (style === 'thick') {\n      ctx.lineWidth = npx(2) + 0.5;\n    } else if (style === 'dashed') {\n      ctx.setLineDash([npx(3), npx(2)]);\n    } else if (style === 'dotted') {\n      ctx.setLineDash([npx(1), npx(1)]);\n    } else if (style === 'double') {\n      ctx.setLineDash([npx(2), 0]);\n    }\n    return this;\n  }\n\n  line(...xys) {\n    const { ctx } = this;\n    if (xys.length > 1) {\n      const [x, y] = xys[0];\n      ctx.moveTo(npx(x) - 0.5, npx(y) - 0.5);\n      for (let i = 1; i < xys.length; i += 1) {\n        const [x1, y1] = xys[i];\n        ctx.lineTo(npx(x1) - 0.5, npx(y1) - 0.5);\n      }\n      ctx.stroke();\n    }\n    return this;\n  }\n\n  strokeBorders(box) {\n    const { ctx } = this;\n    ctx.save();\n    ctx.beginPath();\n    // border\n    const {\n      borderTop, borderRight, borderBottom, borderLeft,\n    } = box;\n    if (borderTop) {\n      this.border(...borderTop);\n      this.line(...box.topxys());\n    }\n    if (borderRight) {\n      this.border(...borderRight);\n      this.line(...box.rightxys());\n    }\n    if (borderBottom) {\n      this.border(...borderBottom);\n      this.line(...box.bottomxys());\n    }\n    if (borderLeft) {\n      this.border(...borderLeft);\n      this.line(...box.leftxys());\n    }\n    ctx.restore();\n  }\n\n  rect(box) {\n    const { ctx } = this;\n    const {\n      x, y, width, height, bgcolor,\n    } = box;\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = bgcolor || '#fff';\n    ctx.strokeStyle = '#e6e6e6';\n    ctx.rect(npx(x) - 0.5, npx(y) - 0.5, npx(width), npx(height));\n    ctx.fill();\n    ctx.stroke();\n    this.strokeBorders(box);\n    ctx.restore();\n  }\n}\n\nexport default {};\nexport {\n  Draw,\n  DrawBox,\n  thinLineWidth,\n  npx,\n};\n","import alphabet from '../alphabet';\nimport { getFontSizePxByPt } from '../font';\nimport _cell from '../cell';\nimport {\n  Draw, DrawBox, thinLineWidth, npx,\n} from '../canvas/draw';\n// gobal var\nconst cellPaddingWidth = 5;\nconst tableFixedHeaderCleanStyle = { fillStyle: '#f4f5f8' };\nfunction tableFixedHeaderStyle() {\n  return {\n    textAlign: 'center',\n    textBaseline: 'middle',\n    font: `500 ${npx(12)}px Source Sans Pro`,\n    fillStyle: '#585757',\n    lineWidth: thinLineWidth(),\n    strokeStyle: '#e6e6e6',\n  };\n}\n\nfunction getDrawBox(rindex, cindex) {\n  const { data } = this;\n  const {\n    left, top, width, height,\n  } = data.cellRect(rindex, cindex);\n  return new DrawBox(left, top, width, height, cellPaddingWidth);\n}\n\nfunction renderCell(rindex, cindex) {\n  const { draw, data } = this;\n  const { cellmm } = data.d;\n  const cell = data.getCell(rindex, cindex);\n\n  const style = data.getCellStyle(rindex, cindex);\n  // console.log('style:', style);\n  const dbox = getDrawBox.call(this, rindex, cindex);\n  dbox.bgcolor = style.bgcolor;\n  draw.rect(dbox);\n  if (cell !== null) {\n    // render text\n    let cellText = _cell.render(cell.text || '', data.formulam, (y, x) => (cellmm[x] && cellmm[x][y] && cellmm[x][y].text) || '');\n    if (cell.format) {\n      // console.log(data.formatm, '>>', cell.format);\n      cellText = data.formatm[cell.format].render(cellText);\n    }\n    const font = Object.assign({}, style.font);\n    font.size = getFontSizePxByPt(font.size);\n    // console.log('style:', style);\n    draw.text(cellText, dbox, {\n      align: style.align,\n      valign: style.valign,\n      font,\n      color: style.color,\n      strikethrough: style.strikethrough,\n    }, style.textwrap);\n  }\n}\n\nfunction renderContent(rowStart, rowLen, colStart, colLen, scrollOffset) {\n  const { draw, data } = this;\n  const { col, row } = data.options;\n  draw.save();\n  draw.translate(col.indexWidth, row.height)\n    .translate(-scrollOffset.x, -scrollOffset.y);\n\n  data.eachCellsInView(\n    rowStart,\n    rowLen,\n    colStart,\n    colLen,\n    true,\n    (cell, i, j) => renderCell.call(this, i, j),\n  );\n  // border\n  data.eachCellsInView(\n    rowStart,\n    rowLen,\n    colStart,\n    colLen,\n    false,\n    (cell, ri, ci) => {\n      if (cell && cell.si !== undefined) {\n        // console.log('cell:', cell, ri, ci);\n        const style = data.getStyle(cell.si);\n        if (style) {\n          const {\n            bti, bri, bbi, bli,\n          } = style;\n          // console.log('bti:', bti);\n          if (bti !== undefined || bri !== undefined\n            || bbi !== undefined || bli !== undefined) {\n            // console.log('::::::::::', ri, ci);\n            const dbox = getDrawBox.call(this, ri, ci);\n            // console.log('ri:', ri, ',ci:', ci, 'style:', style, dbox);\n            dbox.setBorders(\n              data.getBorder(bti),\n              data.getBorder(bri),\n              data.getBorder(bbi),\n              data.getBorder(bli),\n            );\n            draw.strokeBorders(dbox);\n          }\n        }\n      }\n    },\n  );\n  draw.restore();\n}\n\nfunction renderSelectedHeaderCell(x, y, w, h) {\n  const { draw } = this;\n  draw.save();\n  draw.attr({ fillStyle: 'rgba(75, 137, 255, 0.08)' })\n    .fillRect(x, y, w, h);\n  draw.restore();\n}\n\nfunction renderFixedHeaders(rowStart, rowLen, colStart, colLen) {\n  const { draw, data } = this;\n  const { col, row } = data.options;\n  draw.save();\n  const sumHeight = data.rowSumHeight(0, rowLen) + row.height;\n  const sumWidth = data.colSumWidth(0, colLen) + col.indexWidth;\n  // draw rect background\n  draw.attr(tableFixedHeaderCleanStyle)\n    .fillRect(0, 0, col.indexWidth, sumHeight)\n    .fillRect(0, 0, sumWidth, row.height);\n\n  const [[sri, sci], [eri, eci]] = data.selector.getRange();\n  // console.log(data.selectIndexes);\n  // draw text\n  // text font, align...\n  draw.attr(tableFixedHeaderStyle());\n  // y-header-text\n  data.rowEach(rowStart, rowLen, (i, y1, rowHeight) => {\n    const y = y1 + row.height;\n    // console.log('y1:', y1, ', i:', i);\n    draw.line([0, y], [col.indexWidth, y]);\n    if (i !== rowLen) {\n      if (sri <= i && i < eri + 1) {\n        renderSelectedHeaderCell.call(this, 0, y, col.indexWidth, rowHeight);\n      }\n      draw.fillText(i + 1, col.indexWidth / 2, y + (rowHeight / 2));\n    }\n  });\n  draw.line([col.indexWidth, 0], [col.indexWidth, sumHeight]);\n  // x-header-text\n  data.colEach(colStart, colLen, (i, x1, colWidth) => {\n    const x = x1 + col.indexWidth;\n    // console.log('x1:', x1, ', i:', i);\n    draw.line([x, 0], [x, row.height]);\n    if (i !== colLen) {\n      if (sci <= i && i < eci + 1) {\n        renderSelectedHeaderCell.call(this, x, 0, colWidth, row.height);\n      }\n      draw.fillText(alphabet.stringAt(i), x + (colWidth / 2), row.height / 2);\n    }\n  });\n  draw.line([0, row.height], [sumWidth, row.height]);\n  // left-top-cell\n  draw.attr({ fillStyle: '#f4f5f8' })\n    .fillRect(0, 0, col.indexWidth, row.height)\n    .line([col.indexWidth, 0], [col.indexWidth, row.height])\n    .line([0, row.height], [col.indexWidth, row.height]);\n  // context.closePath();\n  draw.restore();\n}\n\n/*\nfunction renderFreezeGridAndContent0(rowLen, colLen, width, height, scrollOffset) {\n  const { draw, data } = this;\n  const { col, row } = data.options;\n  draw.save()\n    .translate(col.indexWidth, row.height)\n    .translate(-scrollOffset.x, -scrollOffset.y);\n\n  // draw.fillRect(0, 0, width, height);\n  // draw.line([0, 0], [width, 0]);\n  // draw.line([0, 0], [0, height]);\n  data.rowEach(rowLen - 1, (i, y1, rowHeight) => {\n    // const y = y1 + rowHeight;\n    // console.log('y:', y);\n    // if (y >= 0) {\n    // draw.line([0, y], [width, y]);\n    data.colEach(colLen - 1, (j, x) => {\n      // if (x >= 0) {\n        // draw.line([x, y - rowHeight], [x, y]);\n      renderCell.call(this, i, j);\n      // }\n    });\n  });\n  draw.restore();\n}\n*/\n\nfunction renderFreezeHighlightLine(p1, p2, scrollOffset) {\n  const { draw, data } = this;\n  const { row, col } = data.options;\n  draw.save()\n    .translate(col.indexWidth, row.height)\n    .translate(-scrollOffset.x, -scrollOffset.y)\n    .attr({ strokeStyle: 'rgba(75, 137, 255, .6)' });\n  draw.line(p1, p2);\n  draw.restore();\n}\n\nfunction renderFreezeGridAndContent() {\n  const { data } = this;\n  const [fri, fci] = data.getFreeze();\n  const { scroll } = data;\n  const sheight = data.rowSumHeight(0, fri);\n  const twidth = data.colTotalWidth();\n  if (fri > 0) {\n    renderContent.call(\n      this,\n      0,\n      fri,\n      0,\n      data.colLen(),\n      { x: scroll.x, y: 0 },\n    );\n  }\n  const theight = data.rowTotalHeight();\n  const swidth = data.colSumWidth(0, fci);\n  if (fci) {\n    renderContent.call(\n      this,\n      0,\n      data.rowLen(),\n      0,\n      fci,\n      { x: 0, y: scroll.y },\n    );\n  }\n  renderFreezeHighlightLine.call(\n    this, [0, sheight], [twidth, sheight], { x: scroll.x, y: 0 },\n  );\n  renderFreezeHighlightLine.call(\n    this, [swidth, 0], [swidth, theight], { x: 0, y: scroll.y },\n  );\n}\n\nfunction renderAll(rowStart, rowLen, colStart, colLen, scrollOffset) {\n  // const { row, col, scrollOffset } = this;\n  // renderContentGrid.call(this, rowLen, colLen, scrollOffset);\n  renderContent.call(this, rowStart, rowLen, colStart, colLen, scrollOffset);\n  renderFixedHeaders.call(this, rowStart, rowLen, colStart, colLen);\n}\n\n/** end */\nclass Table {\n  constructor(el, data) {\n    this.el = el;\n    const view = data.getView();\n    this.draw = new Draw(el, view.width(), view.height());\n    this.data = data;\n  }\n\n  render() {\n    // resize canvas\n    const view = this.data.getView();\n    this.draw.resize(view.width(), view.height());\n    //\n    this.clear();\n    const { data } = this;\n    const { indexes } = data.scroll;\n    renderAll.call(this, indexes[0], data.rowLen(), indexes[1], data.colLen(), data.scroll);\n    const [fri, fci] = data.getFreeze();\n    if (fri > 0 || fci > 0) {\n      renderFreezeGridAndContent.call(this);\n      renderAll.call(this, 0, fri, 0, fci, { x: 0, y: 0 });\n    }\n  }\n\n  clear() {\n    this.draw.clear();\n  }\n}\n\nexport default Table;\n","/* global window */\nimport { Element, h } from './element';\nimport { bind } from '../event';\nimport { cssPrefix } from '../config';\n\nexport default class Dropdown extends Element {\n  constructor(title, width, showArrow, placement, ...children) {\n    super('div', `${cssPrefix}-dropdown ${placement}`);\n    this.title = title;\n    this.change = () => {};\n    if (typeof title === 'string') {\n      this.title = h('div', `${cssPrefix}-dropdown-title`).child(title);\n    } else if (showArrow) {\n      this.title.addClass('arrow-left');\n    }\n    this.contentEl = h('div', `${cssPrefix}-dropdown-content`)\n      .children(...children)\n      .css('width', width)\n      .hide();\n\n    this.headerEl = h('div', `${cssPrefix}-dropdown-header`);\n    this.headerEl.on('click', () => {\n      if (this.contentEl.css('display') !== 'block') {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }).children(\n      this.title,\n      showArrow ? h('div', `${cssPrefix}-icon arrow-right`).child(\n        h('div', `${cssPrefix}-icon-img arrow-down`),\n      ) : '',\n    );\n    this.children(this.headerEl, this.contentEl);\n    bind(window, 'click', (evt) => {\n      if (this.el.contains(evt.target)) return;\n      this.hide();\n    });\n  }\n\n  setTitle(title) {\n    this.title.html(title);\n    this.hide();\n  }\n\n  show() {\n    this.contentEl.show();\n    this.parent().active();\n  }\n\n  hide() {\n    this.parent().active(false);\n    this.contentEl.hide();\n  }\n}\n","import Dropdown from './dropdown';\nimport { h } from './element';\nimport { baseFonts } from '../font';\nimport { cssPrefix } from '../config';\n\nexport default class DropdownFont extends Dropdown {\n  constructor() {\n    const nfonts = baseFonts.map(it => h('div', `${cssPrefix}-item`)\n      .on('click', () => {\n        this.setTitle(it.title);\n        this.change(it);\n      })\n      .child(it.title));\n    super(baseFonts[0].title, '160px', true, 'bottom-left', ...nfonts);\n  }\n}\n","import Dropdown from './dropdown';\nimport { h } from './element';\nimport { fontSizes } from '../font';\nimport { cssPrefix } from '../config';\n\nexport default class DropdownFontSize extends Dropdown {\n  constructor() {\n    const nfontSizes = fontSizes.map(it => h('div', `${cssPrefix}-item`)\n      .on('click', () => {\n        this.setTitle(`${it.pt}`);\n        this.change(it);\n      })\n      .child(`${it.pt}`));\n    super('10', '60px', true, 'bottom-left', ...nfontSizes);\n  }\n}\n","import Dropdown from './dropdown';\nimport { h } from './element';\nimport { baseFormats } from '../format';\nimport { cssPrefix } from '../config';\n\nexport default class DropdownFormat extends Dropdown {\n  constructor() {\n    let nformats = baseFormats.slice(0);\n    nformats.splice(2, 0, { key: 'divider' });\n    nformats.splice(7, 0, { key: 'divider' });\n    nformats = nformats.map((it) => {\n      const item = h('div', `${cssPrefix}-item`);\n      if (it.key === 'divider') {\n        item.addClass('divider');\n      } else {\n        item.child(it.title)\n          .on('click', () => {\n            this.setTitle(it.title);\n            this.change(it);\n          });\n        if (it.label) item.child(h('div', 'label').html(it.label));\n      }\n      return item;\n    });\n    super('Normal', '220px', true, 'bottom-left', ...nformats);\n  }\n\n  setTitle(key) {\n    for (let i = 0; i < baseFormats.length; i += 1) {\n      if (baseFormats[i].key === key) {\n        this.title.html(baseFormats[i].title);\n      }\n    }\n  }\n}\n","import { Element, h } from './element';\nimport { cssPrefix } from '../config';\n\nexport default class Icon extends Element {\n  constructor(name) {\n    super('div', `${cssPrefix}-icon`);\n    this.iconNameEl = h('div', `${cssPrefix}-icon-img ${name}`);\n    this.child(this.iconNameEl);\n  }\n\n  setName(name) {\n    this.iconNameEl.className(`${cssPrefix}-icon-img ${name}`);\n  }\n}\n","import Dropdown from './dropdown';\nimport Icon from './icon';\nimport { h } from './element';\nimport { baseFormulas } from '../formula';\nimport { cssPrefix } from '../config';\n\nexport default class DropdownFormula extends Dropdown {\n  constructor() {\n    const nformulas = baseFormulas.map(it => h('div', `${cssPrefix}-item`)\n      .on('click', () => {\n        this.hide();\n        this.change(it);\n      })\n      .child(it.key));\n    super(new Icon('formula'), '180px', true, 'bottom-left', ...nformulas);\n  }\n}\n","import { h } from './element';\nimport { cssPrefix } from '../config';\n\nconst themeColorPlaceHolders = ['#ffffff', '#000100', '#e7e5e6', '#445569', '#5b9cd6', '#ed7d31', '#a5a5a5', '#ffc001', '#4371c6', '#71ae47'];\n\nconst themeColors = [\n  ['#f2f2f2', '#7f7f7f', '#d0cecf', '#d5dce4', '#deeaf6', '#fce5d5', '#ededed', '#fff2cd', '#d9e2f3', '#e3efd9'],\n  ['#d8d8d8', '#595959', '#afabac', '#adb8ca', '#bdd7ee', '#f7ccac', '#dbdbdb', '#ffe59a', '#b3c6e7', '#c5e0b3'],\n  ['#bfbfbf', '#3f3f3f', '#756f6f', '#8596b0', '#9cc2e6', '#f4b184', '#c9c9c9', '#fed964', '#8eaada', '#a7d08c'],\n  ['#a5a5a5', '#262626', '#3a3839', '#333f4f', '#2e75b5', '#c45a10', '#7b7b7b', '#bf8e01', '#2f5596', '#538136'],\n  ['#7f7f7f', '#0c0c0c', '#171516', '#222a35', '#1f4e7a', '#843c0a', '#525252', '#7e6000', '#203864', '#365624'],\n];\n\nconst standardColors = ['#c00000', '#fe0000', '#fdc101', '#ffff01', '#93d051', '#00b04e', '#01b0f1', '#0170c1', '#012060', '#7030a0'];\n\nfunction buildTd(bgcolor) {\n  return h('td', '').child(\n    h('div', `${cssPrefix}-color-palette-cell`)\n      .on('click.stop', () => this.change(bgcolor))\n      .css('background-color', bgcolor),\n  );\n}\n\nexport default class ColorPalette {\n  constructor() {\n    this.el = h('div', `${cssPrefix}-color-palette`);\n    this.change = () => {};\n    const table = h('table', '').children(\n      h('tbody', '').children(\n        h('tr', `${cssPrefix}-theme-color-placeholders`).children(\n          ...themeColorPlaceHolders.map(color => buildTd.call(this, color)),\n        ),\n        ...themeColors.map(it => h('tr', `${cssPrefix}-theme-colors`).children(\n          ...it.map(color => buildTd.call(this, color)),\n        )),\n        h('tr', `${cssPrefix}-standard-colors`).children(\n          ...standardColors.map(color => buildTd.call(this, color)),\n        ),\n      ),\n    );\n    this.el.child(table);\n  }\n}\n","import Dropdown from './dropdown';\nimport Icon from './icon';\nimport ColorPalette from './color_palette';\n\nexport default class DropdownColor extends Dropdown {\n  constructor(iconName, color) {\n    const icon = new Icon(iconName)\n      .css('height', '16px')\n      .css('border-bottom', `3px solid ${color}`);\n    const colorPalette = new ColorPalette();\n    colorPalette.change = (v) => {\n      this.setTitle(v);\n      this.change(v);\n    };\n    super(icon, 'auto', false, 'bottom-left', colorPalette.el);\n  }\n\n  setTitle(color) {\n    this.title.css('border-color', color);\n    this.hide();\n  }\n}\n","import Dropdown from './dropdown';\nimport { h } from './element';\nimport Icon from './icon';\nimport { cssPrefix } from '../config';\n\nfunction buildItemWithIcon(iconName) {\n  return h('div', `${cssPrefix}-item`).child(new Icon(iconName));\n}\n\nexport default class DropdownAlign extends Dropdown {\n  constructor(aligns, align) {\n    const icon = new Icon(`align-${align}`);\n    const naligns = aligns.map(it => buildItemWithIcon(`align-${it}`)\n      .on('click', () => {\n        this.setTitle(it);\n        this.change(it);\n      }));\n    super(icon, 'auto', true, 'bottom-left', ...naligns);\n  }\n\n  setTitle(align) {\n    this.title.setName(`align-${align}`);\n    this.hide();\n  }\n}\n","import Dropdown from './dropdown';\nimport { h } from './element';\nimport Icon from './icon';\nimport { cssPrefix } from '../config';\n\nconst lineTypes = [\n  ['thin', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"1\" style=\"user-select: none;\"><line x1=\"0\" y1=\"0.5\" x2=\"50\" y2=\"0.5\" stroke-width=\"1\" stroke=\"black\" style=\"user-select: none;\"></line></svg>'],\n  ['medium', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"2\" style=\"user-select: none;\"><line x1=\"0\" y1=\"1.0\" x2=\"50\" y2=\"1.0\" stroke-width=\"2\" stroke=\"black\" style=\"user-select: none;\"></line></svg>'],\n  ['thick', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"3\" style=\"user-select: none;\"><line x1=\"0\" y1=\"1.5\" x2=\"50\" y2=\"1.5\" stroke-width=\"3\" stroke=\"black\" style=\"user-select: none;\"></line></svg>'],\n  ['dashed', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"1\" style=\"user-select: none;\"><line x1=\"0\" y1=\"0.5\" x2=\"50\" y2=\"0.5\" stroke-width=\"1\" stroke=\"black\" stroke-dasharray=\"2\" style=\"user-select: none;\"></line></svg>'],\n  ['dotted', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"1\" style=\"user-select: none;\"><line x1=\"0\" y1=\"0.5\" x2=\"50\" y2=\"0.5\" stroke-width=\"1\" stroke=\"black\" stroke-dasharray=\"1\" style=\"user-select: none;\"></line></svg>'],\n  // ['double', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"3\" style=\"user-select: none;\"><line x1=\"0\" y1=\"0.5\" x2=\"50\" y2=\"0.5\" stroke-width=\"1\" stroke=\"black\" style=\"user-select: none;\"></line><line x1=\"0\" y1=\"2.5\" x2=\"50\" y2=\"2.5\" stroke-width=\"1\" stroke=\"black\" style=\"user-select: none;\"></line></svg>'],\n];\n\nexport default class DropdownLineType extends Dropdown {\n  constructor(type) {\n    const icon = new Icon('line-type');\n    let beforei = 0;\n    const lineTypeEls = lineTypes.map((it, iti) => h('div', `${cssPrefix}-item state ${type === it[0] ? 'checked' : ''}`)\n      .on('click', () => {\n        lineTypeEls[beforei].toggle('checked');\n        lineTypeEls[iti].toggle('checked');\n        beforei = iti;\n        this.hide();\n        this.change(it);\n      })\n      .child(\n        h('div', `${cssPrefix}-line-type`).html(it[1]),\n      ));\n\n    super(icon, 'auto', false, 'bottom-left', ...lineTypeEls);\n  }\n}\n","import { h } from './element';\nimport Icon from './icon';\nimport DropdownColor from './dropdown_color';\nimport DropdownLineType from './dropdown_linetype';\nimport { cssPrefix } from '../config';\n\nfunction buildTable(...trs) {\n  return h('table', '').child(\n    h('tbody', '').children(...trs),\n  );\n}\n\nfunction buildTd(iconName) {\n  return h('td', '').child(\n    h('div', `${cssPrefix}-border-palette-cell`).child(\n      new Icon(`border-${iconName}`),\n    ).on('click', () => {\n      this.mode = iconName;\n      const { mode, style, color } = this;\n      this.change({ mode, style, color });\n    }),\n  );\n}\n\nexport default class BorderPalette {\n  constructor() {\n    this.color = '#000';\n    this.style = 'thin';\n    this.mode = 'all';\n    this.change = () => {};\n    this.ddColor = new DropdownColor('line-color', this.color);\n    this.ddColor.change = (color) => {\n      this.color = color;\n    };\n    this.ddType = new DropdownLineType(this.style);\n    this.ddType.change = ([s]) => {\n      this.style = s;\n    };\n    this.el = h('div', `${cssPrefix}-border-palette`);\n    const table = buildTable(\n      h('tr', '').children(\n        h('td', `${cssPrefix}-border-palette-left`).child(\n          buildTable(\n            h('tr', '').children(\n              ...['all', 'inside', 'horizontal', 'vertical', 'outside'].map(it => buildTd.call(this, it)),\n            ),\n            h('tr', '').children(\n              ...['left', 'top', 'right', 'bottom', 'none'].map(it => buildTd.call(this, it)),\n            ),\n          ),\n        ),\n        h('td', `${cssPrefix}-border-palette-right`).children(\n          h('div', `${cssPrefix}-toolbar-btn`).child(this.ddColor.el),\n          h('div', `${cssPrefix}-toolbar-btn`).child(this.ddType.el),\n        ),\n      ),\n    );\n    this.el.child(table);\n  }\n}\n","import Dropdown from './dropdown';\nimport Icon from './icon';\nimport BorderPalette from './border_palette';\n\nexport default class DropdownBorder extends Dropdown {\n  constructor() {\n    const icon = new Icon('border-all');\n    const borderPalette = new BorderPalette();\n    borderPalette.change = (v) => {\n      this.change(v);\n      this.hide();\n    };\n    super(icon, 'auto', false, 'bottom-left', borderPalette.el);\n  }\n}\n","/* global window */\nimport { h } from './element';\nimport { bind } from '../event';\nimport tooltip from './tooltip';\nimport DropdownFont from './dropdown_font';\nimport DropdownFontSize from './dropdown_fontsize';\nimport DropdownFormat from './dropdown_format';\nimport DropdownFormula from './dropdown_formula';\nimport DropdownColor from './dropdown_color';\nimport DropdownAlign from './dropdown_align';\nimport DropdownBorder from './dropdown_border';\nimport Dropdown from './dropdown';\nimport Icon from './icon';\nimport { cssPrefix } from '../config';\n\nfunction buildIcon(name) {\n  return new Icon(name);\n}\n\nfunction buildButton(tooltipdata) {\n  return h('div', `${cssPrefix}-toolbar-btn`)\n    .on('mouseenter', (evt) => {\n      tooltip(tooltipdata, evt.target);\n    })\n    .attr('data-tooltip', tooltipdata);\n}\n\nfunction buildDivider() {\n  return h('div', `${cssPrefix}-toolbar-divider`);\n}\n\nfunction buildButtonWithIcon(tooltipdata, iconName, change = () => {}) {\n  return buildButton(tooltipdata)\n    .child(buildIcon(iconName))\n    .on('click', () => change());\n}\n\nfunction bindDropdownChange() {\n  this.ddFormat.change = it => this.change('format', it.key);\n  this.ddFont.change = it => this.change('font-name', it.key);\n  this.ddFormula.change = it => this.change('formula', it.key);\n  this.ddFontSize.change = it => this.change('font-size', it.pt);\n  this.ddTextColor.change = it => this.change('color', it);\n  this.ddFillColor.change = it => this.change('bgcolor', it);\n  this.ddAlign.change = it => this.change('align', it);\n  this.ddVAlign.change = it => this.change('valign', it);\n  this.ddBorder.change = it => this.change('border', it);\n}\n\nfunction toggleChange(elName, type) {\n  const el = this[`${elName}El`];\n  el.toggle();\n  this.change(type, el.hasClass('active'));\n}\n\nclass DropdownMore extends Dropdown {\n  constructor() {\n    const icon = new Icon('ellipsis');\n    const moreBtns = h('div', `${cssPrefix}-toolbar-more`);\n    super(icon, 'auto', false, 'bottom-right', moreBtns);\n    this.moreBtns = moreBtns;\n    this.contentEl.css('max-width', '420px');\n  }\n}\n\nfunction moreResize() {\n  const {\n    el, btns, moreEl, ddMore, btnChildren,\n  } = this;\n  const { moreBtns, contentEl } = ddMore;\n  const elBox = el.box();\n\n  let sumWidth = 160;\n  let sumWidth2 = 12;\n  const list1 = [];\n  const list2 = [];\n  // console.log('elBox:', elBox);\n  btnChildren.forEach((it) => {\n    const rect = it.box();\n    sumWidth += rect.width;\n    // console.log('sumWidth:', sumWidth, elBox.width);\n    if (it.attr('data-tooltip') === 'More' || sumWidth < elBox.width) {\n      list1.push(it);\n    } else {\n      // console.log('margin:', it.computedStyle());\n      const { marginLeft, marginRight } = it.computedStyle();\n      sumWidth2 += rect.width + parseInt(marginLeft, 10) + parseInt(marginRight, 10);\n      list2.push(it);\n    }\n  });\n  btns.html('').children(...list1);\n  moreBtns.html('').children(...list2);\n  contentEl.css('width', `${sumWidth2}px`);\n  if (list2.length > 0) {\n    moreEl.show();\n  } else {\n    moreEl.hide();\n  }\n}\n\nexport default class Toolbar {\n  constructor(data) {\n    this.data = data;\n    this.change = () => {};\n    const { style } = data.options;\n    // console.log('data:', data);\n    this.ddFormat = new DropdownFormat();\n    this.ddFont = new DropdownFont();\n    this.ddFormula = new DropdownFormula();\n    this.ddFontSize = new DropdownFontSize();\n    this.ddTextColor = new DropdownColor('text-color', style.color);\n    this.ddFillColor = new DropdownColor('fill-color', style.bgcolor);\n    this.ddAlign = new DropdownAlign(['left', 'center', 'right'], style.align);\n    this.ddVAlign = new DropdownAlign(['top', 'middle', 'bottom'], style.valign);\n    this.ddBorder = new DropdownBorder();\n    this.ddMore = new DropdownMore();\n    this.btnChildren = [\n      this.undoEl = buildButtonWithIcon('Undo (Ctrl+Z)', 'undo', () => this.change('undo')),\n      this.redoEl = buildButtonWithIcon('Redo (Ctrl+Y)', 'redo', () => this.change('redo')),\n      // this.printEl = buildButtonWithIcon('Print (Ctrl+P)', 'print', () => this.change('print')),\n      this.paintformatEl = buildButtonWithIcon('Paint format', 'paintformat', () => toggleChange.call(this, 'paintformat', 'paintformat')),\n      this.clearformatEl = buildButtonWithIcon('Clear format', 'clearformat', () => this.change('clearformat')),\n      buildDivider(),\n      buildButton('Format').child(this.ddFormat.el),\n      buildDivider(),\n      buildButton('Font').child(this.ddFont.el),\n      buildButton('Font size').child(this.ddFontSize.el),\n      buildDivider(),\n      this.boldEl = buildButtonWithIcon('Bold', 'bold', () => toggleChange.call(this, 'bold', 'font-bold')),\n      this.italicEl = buildButtonWithIcon('Italic', 'italic', () => toggleChange.call(this, 'italic', 'font-italic')),\n      this.strikethroughEl = buildButtonWithIcon('Strikethrough', 'strikethrough', () => toggleChange.call(this, 'strikethrough', 'strikethrough')),\n      buildButton('Text color').child(this.ddTextColor.el),\n      buildDivider(),\n      buildButton('Fill color').child(this.ddFillColor.el),\n      buildButton('Borders').child(this.ddBorder.el),\n      this.mergeEl = buildButtonWithIcon('Merge cells', 'merge', () => toggleChange.call(this, 'merge', 'merge')),\n      buildDivider(),\n      buildButton('Horizontal align').child(this.ddAlign.el),\n      buildButton('Vertical align').child(this.ddVAlign.el),\n      this.textwrapEl = buildButtonWithIcon('Text wrapping', 'textwrap', () => toggleChange.call(this, 'textwrap', 'textwrap')),\n      buildDivider(),\n      // this.linkEl = buildButtonWithIcon('Insert link', 'link'),\n      // this.chartEl = buildButtonWithIcon('Insert chart', 'chart'),\n      // this.autofilterEl = buildButtonWithIcon('Filter', 'autofilter'),\n      this.freezeEl = buildButtonWithIcon('Freeze cell', 'freeze', () => toggleChange.call(this, 'freeze', 'freeze')),\n      buildButton('Functions').child(this.ddFormula.el),\n      // buildDivider(),\n      this.moreEl = buildButton('More').child(this.ddMore.el).hide(),\n    ];\n    this.el = h('div', `${cssPrefix}-toolbar`);\n    this.btns = h('div', `${cssPrefix}-toolbar-btns`).children(...this.btnChildren);\n    this.el.child(this.btns);\n    bindDropdownChange.call(this);\n    this.reset();\n    setTimeout(() => {\n      moreResize.call(this);\n    }, 0);\n    bind(window, 'resize', () => {\n      moreResize.call(this);\n    });\n  }\n\n  paintformatActive() {\n    return this.paintformatEl.hasClass('active');\n  }\n\n  paintformatToggle() {\n    this.paintformatEl.toggle();\n  }\n\n  reset() {\n    const { data } = this;\n    const style = data.getSelectedCellStyle();\n    const cell = data.getSelectedCell();\n    // console.log('canUndo:', data.canUndo());\n    this.undoEl.disabled(!data.canUndo());\n    this.redoEl.disabled(!data.canRedo());\n    this.mergeEl.active(data.canUnmerge())\n      .disabled(data.selector.seqe());\n    // this.mergeEl.disabled();\n    // console.log('selectedCell:', style, cell);\n    const { font } = style;\n    this.ddFont.setTitle(font.name);\n    this.ddFontSize.setTitle(font.size);\n    this.boldEl.active(font.bold);\n    this.italicEl.active(font.italic);\n    this.strikethroughEl.active(style.strikethrough);\n    this.ddTextColor.setTitle(style.color);\n    this.ddFillColor.setTitle(style.bgcolor);\n    this.ddAlign.setTitle(style.align);\n    this.ddVAlign.setTitle(style.valign);\n    this.textwrapEl.active(style.textwrap);\n    // console.log('freeze is Active:', data.freezeIsActive());\n    this.freezeEl.active(data.freezeIsActive());\n    if (cell) {\n      if (cell.format) {\n        this.ddFormat.setTitle(cell.format);\n      }\n    }\n  }\n}\n","/* global document */\nimport { h } from './element';\nimport { bind } from '../event';\nimport { cssPrefix } from '../config';\n\nexport default function tooltip(html, target) {\n  if (target.classList.contains('active')) {\n    return;\n  }\n  const {\n    left, top, width, height,\n  } = target.getBoundingClientRect();\n  const el = h('div', `${cssPrefix}-tooltip`).html(html).show();\n  document.body.appendChild(el.el);\n  const elBox = el.box();\n  // console.log('elBox:', elBox);\n  el.css('left', `${left + (width / 2) - (elBox.width / 2)}px`)\n    .css('top', `${top + height + 2}px`);\n\n  bind(target, 'mouseleave', () => {\n    if (document.body.contains(el.el)) {\n      document.body.removeChild(el.el);\n    }\n  });\n\n  bind(target, 'click', () => {\n    if (document.body.contains(el.el)) {\n      document.body.removeChild(el.el);\n    }\n  });\n}\n","/* global window */\nimport { h } from './element';\nimport { bind, mouseMoveUp } from '../event';\nimport Resizer from './resizer';\nimport Scrollbar from './scrollbar';\nimport Selector from './selector';\nimport Editor from './editor';\nimport ContextMenu from './contextmenu';\nimport Table from './table';\nimport Toolbar from './toolbar';\nimport { cssPrefix } from '../config';\n\nfunction scrollbarMove() {\n  const {\n    data, verticalScrollbar, horizontalScrollbar,\n  } = this;\n  const {\n    l, t, left, top, width, height,\n  } = data.getSelectedRect();\n  const tableOffset = this.getTableOffset();\n  // console.log(',l:', l, ', left:', left, ', tOffset.left:', tableOffset.width);\n  if (Math.abs(left) + width > tableOffset.width) {\n    horizontalScrollbar.move({ left: l + width - tableOffset.width });\n  } else {\n    const fsw = data.freezeTotalWidth();\n    if (left < fsw) {\n      horizontalScrollbar.move({ left: l - 1 - fsw });\n    }\n  }\n  // console.log('top:', top, ', height:', height, ', tof.height:', tableOffset.height);\n  if (Math.abs(top) + height > tableOffset.height) {\n    verticalScrollbar.move({ top: t + height - tableOffset.height - 1 });\n  } else {\n    const fsh = data.freezeTotalHeight();\n    if (top < fsh) {\n      verticalScrollbar.move({ top: t - 1 - fsh });\n    }\n  }\n}\n\nfunction selectorSet(multiple, ri, ci) {\n  if (ri === -1 && ci === -1) return;\n  // console.log(multiple, ', ri:', ri, ', ci:', ci);\n  const {\n    table, selector, toolbar,\n  } = this;\n  if (multiple) {\n    selector.setEnd(ri, ci);\n  } else {\n    selector.set(ri, ci);\n  }\n  toolbar.reset();\n  table.render();\n}\n\n// multiple: boolean\n// direction: left | right | up | down | row-first | row-last | col-first | col-last\nfunction selectorMove(multiple, direction) {\n  const {\n    selector, data,\n  } = this;\n  let [ri, ci] = selector.indexes;\n  const [eri, eci] = selector.eIndexes;\n  if (multiple) {\n    [ri, ci] = selector.moveIndexes;\n  }\n  // console.log('selector.move:', ri, ci);\n  if (direction === 'left') {\n    if (ci > 0) ci -= 1;\n  } else if (direction === 'right') {\n    if (eci !== ci) ci = eci;\n    if (ci < data.colLen() - 1) ci += 1;\n  } else if (direction === 'up') {\n    if (ri > 0) ri -= 1;\n  } else if (direction === 'down') {\n    if (eri !== ri) ri = eri;\n    if (ri < data.rowLen() - 1) ri += 1;\n  } else if (direction === 'row-first') {\n    ci = 0;\n  } else if (direction === 'row-last') {\n    ci = data.colLen() - 1;\n  } else if (direction === 'col-first') {\n    ri = 0;\n  } else if (direction === 'col-last') {\n    ri = data.rowLen() - 1;\n  }\n  if (multiple) {\n    selector.moveIndexes = [ri, ci];\n  }\n  selectorSet.call(this, multiple, ri, ci);\n  scrollbarMove.call(this);\n}\n\n// private methods\nfunction overlayerMousemove(evt) {\n  // console.log('x:', evt.offsetX, ', y:', evt.offsetY);\n  if (evt.buttons !== 0) return;\n  if (evt.target.className === `${cssPrefix}-resizer-hover`) return;\n  const { offsetX, offsetY } = evt;\n  const {\n    rowResizer, colResizer, tableEl, data,\n  } = this;\n  if (offsetX > data.getFixedHeaderWidth()\n    && offsetY > data.getFixedHeaderHeight()) {\n    rowResizer.hide();\n    colResizer.hide();\n    return;\n  }\n  const tRect = tableEl.box();\n  const cRect = data.getCellRectByXY(evt.offsetX, evt.offsetY);\n  if (cRect.ri >= 0 && cRect.ci === -1) {\n    cRect.width = data.getFixedHeaderWidth();\n    rowResizer.show(cRect, {\n      width: tRect.width,\n    });\n  } else {\n    rowResizer.hide();\n  }\n  if (cRect.ri === -1 && cRect.ci >= 0) {\n    cRect.height = data.getFixedHeaderHeight();\n    colResizer.show(cRect, {\n      height: tRect.height,\n    });\n  } else {\n    colResizer.hide();\n  }\n}\n\nfunction verticalScrollbarSet() {\n  const { data, verticalScrollbar } = this;\n  const { height } = this.getTableOffset();\n  verticalScrollbar.set(height, data.rowTotalHeight());\n}\n\nfunction horizontalScrollbarSet() {\n  const { data, horizontalScrollbar } = this;\n  const { width } = this.getTableOffset();\n  if (data) {\n    horizontalScrollbar.set(width, data.colTotalWidth());\n  }\n}\n\nfunction sheetFreeze() {\n  const {\n    selector, data, editor,\n  } = this;\n  const [ri, ci] = data.getFreeze();\n  if (ri > 0 || ci > 0) {\n    const fwidth = data.freezeTotalWidth();\n    const fheight = data.freezeTotalHeight();\n    editor.setFreezeLengths(fwidth, fheight);\n  }\n  selector.resetAreaOffset();\n}\n\nfunction sheetReset() {\n  const {\n    tableEl,\n    overlayerEl,\n    overlayerCEl,\n    table,\n    toolbar,\n    selector,\n  } = this;\n  const tOffset = this.getTableOffset();\n  const vRect = this.getRect();\n  tableEl.attr(vRect);\n  overlayerEl.offset(vRect);\n  overlayerCEl.offset(tOffset);\n  verticalScrollbarSet.call(this);\n  horizontalScrollbarSet.call(this);\n  sheetFreeze.call(this);\n  table.render();\n  toolbar.reset();\n  selector.reset();\n}\n\nfunction clearClipboard() {\n  const { data, selector } = this;\n  data.clearClipboard();\n  selector.hideClipboard();\n}\n\nfunction copy() {\n  const { data, selector } = this;\n  data.copy();\n  selector.showClipboard();\n}\n\nfunction cut() {\n  const { data, selector } = this;\n  data.cut();\n  selector.showClipboard();\n}\n\nfunction paste(what) {\n  this.data.paste(what);\n  sheetReset.call(this);\n}\n\nfunction toolbarChangePaintformatPaste() {\n  const { toolbar } = this;\n  if (toolbar.paintformatActive()) {\n    paste.call(this, 'format');\n    clearClipboard.call(this);\n    toolbar.paintformatToggle();\n  }\n}\n\nfunction overlayerMousedown(evt) {\n  // console.log(':::::overlayer.mousedown:', evt.detail, evt.button, evt.buttons, evt.shiftKey);\n  // console.log('evt.target.className:', evt.target.className);\n  const {\n    selector, data, table,\n  } = this;\n  const isAutofillEl = evt.target.className === `${cssPrefix}-selector-corner`;\n  let { ri, ci } = data.getCellRectByXY(evt.offsetX, evt.offsetY);\n  // console.log('ri:', ri, ', ci:', ci);\n  if (!evt.shiftKey) {\n    // console.log('selectorSetStart:::');\n    if (isAutofillEl) {\n      selector.showAutofill(ri, ci);\n    } else {\n      selectorSet.call(this, false, ri, ci);\n    }\n\n    // mouse move up\n    mouseMoveUp(window, (e) => {\n      // console.log('mouseMoveUp::::');\n      ({ ri, ci } = data.getCellRectByXY(e.offsetX, e.offsetY));\n      if (isAutofillEl) {\n        selector.showAutofill(ri, ci);\n      } else if (e.buttons === 1 && !e.shiftKey) {\n        selectorSet.call(this, true, ri, ci);\n      }\n    }, () => {\n      if (isAutofillEl) {\n        data.autofill(selector.saIndexes, selector.eaIndexes, 'all');\n        table.render();\n      }\n      selector.hideAutofill();\n      toolbarChangePaintformatPaste.call(this);\n    });\n  }\n\n  if (!isAutofillEl && evt.buttons === 1) {\n    if (evt.shiftKey) {\n      // console.log('shiftKey::::');\n      selectorSet.call(this, true, ri, ci);\n    }\n  }\n}\n\nfunction editorSetOffset() {\n  const { editor, data } = this;\n  const sOffset = data.getSelectedRect();\n  const tOffset = this.getTableOffset();\n  let sPosition = 'top';\n  // console.log('sOffset:', sOffset, ':', tOffset);\n  if (sOffset.top > tOffset.height / 2) {\n    sPosition = 'bottom';\n  }\n  editor.setOffset(sOffset, sPosition);\n}\n\nfunction editorSet() {\n  const {\n    editor, data, selector,\n  } = this;\n  const [ri, ci] = selector.indexes;\n  editorSetOffset.call(this);\n  editor.setCell(data.getCell(ri, ci));\n  clearClipboard.call(this);\n}\n\nfunction verticalScrollbarMove(distance) {\n  const { data, table, selector } = this;\n  data.scrolly(distance, () => {\n    selector.resetBRLAreaOffset();\n    editorSetOffset.call(this);\n    table.render();\n  });\n}\n\nfunction horizontalScrollbarMove(distance) {\n  const { data, table, selector } = this;\n  data.scrollx(distance, () => {\n    selector.resetBRTAreaOffset();\n    editorSetOffset.call(this);\n    table.render();\n  });\n}\n\nfunction rowResizerFinished(cRect, distance) {\n  const { ri } = cRect;\n  const { table, selector, data } = this;\n  data.setRowHeight(ri, distance);\n  table.render();\n  selector.resetAreaOffset();\n  verticalScrollbarSet.call(this);\n  editorSetOffset.call(this);\n}\n\nfunction colResizerFinished(cRect, distance) {\n  const { ci } = cRect;\n  const { table, selector, data } = this;\n  data.setColWidth(ci, distance);\n  // console.log('data:', data);\n  table.render();\n  selector.resetAreaOffset();\n  horizontalScrollbarSet.call(this);\n  editorSetOffset.call(this);\n}\n\nfunction dataSetCellText(text) {\n  const { selector, data, table } = this;\n  const [ri, ci] = selector.indexes;\n  data.setCellText(ri, ci, text);\n  table.render();\n}\n\nfunction insertDeleteRowColumn(type) {\n  const { data } = this;\n  if (type === 'insert-row') {\n    data.insertRow();\n  } else if (type === 'delete-row') {\n    data.deleteRow();\n  } else if (type === 'insert-column') {\n    data.insertColumn();\n  } else if (type === 'delete-column') {\n    data.deleteColumn();\n  } else if (type === 'delete-cell') {\n    data.deleteCell();\n  } else if (type === 'delete-cell-format') {\n    data.deleteCell('format');\n  }\n  clearClipboard.call(this);\n  sheetReset.call(this);\n}\n\nfunction toolbarChange(type, value) {\n  const { data } = this;\n  if (type === 'undo') {\n    this.undo();\n  } else if (type === 'redo') {\n    this.redo();\n  } else if (type === 'print') {\n    // print\n  } else if (type === 'paintformat') {\n    if (value === true) copy.call(this);\n    else clearClipboard.call(this);\n  } else if (type === 'clearformat') {\n    insertDeleteRowColumn.call(this, 'delete-cell-format');\n  } else if (type === 'link') {\n    // link\n  } else if (type === 'chart') {\n    // chart\n  } else if (type === 'filter') {\n    // filter\n  } else if (type === 'freeze') {\n    if (value) {\n      this.freeze(...data.selector.indexes);\n    } else {\n      this.freeze(0, 0);\n    }\n  } else {\n    data.setSelectedCellAttr(type, value);\n    if (type === 'formula') {\n      editorSet.call(this);\n    }\n    sheetReset.call(this);\n  }\n}\n\nfunction sheetInitEvents() {\n  const {\n    overlayerEl,\n    rowResizer,\n    colResizer,\n    verticalScrollbar,\n    horizontalScrollbar,\n    editor,\n    contextMenu,\n    data,\n    row,\n    toolbar,\n  } = this;\n  // overlayer\n  overlayerEl\n    .on('mousemove', (evt) => {\n      overlayerMousemove.call(this, evt);\n    }).on('mousedown', (evt) => {\n      if (evt.buttons === 2) {\n        if (data.xyInSelectedRect(evt.offsetX, evt.offsetY)) {\n          contextMenu.setPosition(evt.offsetX, evt.offsetY);\n        } else {\n          contextMenu.hide();\n        }\n      } else if (evt.detail === 2) {\n        editorSet.call(this);\n      } else {\n        editor.clear();\n        overlayerMousedown.call(this, evt);\n      }\n    });\n\n  // toolbar change\n  toolbar.change = (type, value) => toolbarChange.call(this, type, value);\n\n  // resizer finished callback\n  rowResizer.finishedFn = (cRect, distance) => {\n    rowResizerFinished.call(this, cRect, distance);\n  };\n  colResizer.finishedFn = (cRect, distance) => {\n    colResizerFinished.call(this, cRect, distance);\n  };\n  // scrollbar move callback\n  verticalScrollbar.moveFn = (distance, evt) => {\n    verticalScrollbarMove.call(this, distance, evt);\n  };\n  horizontalScrollbar.moveFn = (distance, evt) => {\n    horizontalScrollbarMove.call(this, distance, evt);\n  };\n  // editor\n  editor.change = (itext) => {\n    dataSetCellText.call(this, itext);\n    toolbar.reset();\n  };\n  // contextmenu\n  contextMenu.itemClick = (type) => {\n    // console.log('type:', type);\n    if (type === 'copy') {\n      copy.call(this);\n    } else if (type === 'cut') {\n      cut.call(this);\n    } else if (type === 'paste') {\n      paste.call(this, 'all');\n    } else if (type === 'paste-value') {\n      paste.call(this, 'text');\n    } else if (type === 'paste-format') {\n      paste.call(this, 'format');\n    } else {\n      insertDeleteRowColumn.call(this, type);\n    }\n  };\n\n  bind(window, 'resize', () => {\n    this.reload();\n  });\n\n  bind(window, 'click', (evt) => {\n    this.focusing = overlayerEl.contains(evt.target);\n  });\n\n  bind(window, 'mousewheel', (evt) => {\n    if (!this.focusing) return;\n    const { top } = this.verticalScrollbar.scroll();\n    if (evt.deltaY > 0) {\n      // up\n      const ri = data.scroll.indexes[0] + 1;\n      if (ri < row.len) {\n        this.verticalScrollbar.move({ top: top + data.getRowHeight(ri) });\n      }\n    } else {\n      // down\n      const ri = data.scroll.indexes[0] - 1;\n      if (ri >= 0) {\n        this.verticalScrollbar.move({ top: ri === 0 ? 0 : top - data.getRowHeight(ri) });\n      }\n    }\n  });\n\n  // for selector\n  bind(window, 'keydown', (evt) => {\n    if (!this.focusing) return;\n    const keyCode = evt.keyCode || evt.which;\n    // console.log('keydown.evt: ', keyCode);\n    if (evt.ctrlKey) {\n      // const { sIndexes, eIndexes } = selector;\n      let what = 'all';\n      if (evt.shiftKey) what = 'text';\n      if (evt.altKey) what = 'format';\n      switch (keyCode) {\n        case 90:\n          // undo: ctrl + z\n          this.undo();\n          evt.preventDefault();\n          break;\n        case 89:\n          // redo: ctrl + y\n          this.redo();\n          evt.preventDefault();\n          break;\n        case 67:\n          // ctrl + c\n          copy.call(this);\n          evt.preventDefault();\n          break;\n        case 88:\n          // ctrl + x\n          cut.call(this);\n          evt.preventDefault();\n          break;\n        case 86:\n          // ctrl + v\n          paste.call(this, what);\n          evt.preventDefault();\n          break;\n        case 37:\n          // ctrl + left\n          selectorMove.call(this, evt.shiftKey, 'row-first');\n          evt.preventDefault();\n          break;\n        case 38:\n          // ctrl + up\n          selectorMove.call(this, evt.shiftKey, 'col-first');\n          evt.preventDefault();\n          break;\n        case 39:\n          // ctrl + right\n          selectorMove.call(this, evt.shiftKey, 'row-last');\n          evt.preventDefault();\n          break;\n        case 40:\n          // ctrl + down\n          selectorMove.call(this, evt.shiftKey, 'col-last');\n          evt.preventDefault();\n          break;\n        case 32:\n          // ctrl + space, all cells in col\n          selectorSet.call(this, false, -1, data.selector.indexes[1]);\n          evt.preventDefault();\n          break;\n        default:\n          break;\n      }\n      // return;\n    } else if (evt.shiftKey) {\n      switch (keyCode) {\n        case 32:\n          // shift + space, all cells in row\n          selectorSet.call(this, false, data.selector.indexes[0], -1);\n          break;\n        default:\n          break;\n      }\n    } else {\n      // console.log('evt.keyCode:', evt.keyCode);\n      switch (keyCode) {\n        case 27: // esc\n          contextMenu.hide();\n          clearClipboard.call(this);\n          break;\n        case 37: // left\n          selectorMove.call(this, evt.shiftKey, 'left');\n          evt.preventDefault();\n          break;\n        case 38: // up\n          selectorMove.call(this, evt.shiftKey, 'up');\n          evt.preventDefault();\n          break;\n        case 39: // right\n          selectorMove.call(this, evt.shiftKey, 'right');\n          evt.preventDefault();\n          break;\n        case 40: // down\n          selectorMove.call(this, evt.shiftKey, 'down');\n          evt.preventDefault();\n          break;\n        case 9: // tab\n          editor.clear();\n          selectorMove.call(this, evt.shiftKey, 'right');\n          evt.preventDefault();\n          break;\n        case 13: // enter\n          editor.clear();\n          selectorMove.call(this, evt.shiftKey, 'down');\n          evt.preventDefault();\n          break;\n        default:\n          break;\n      }\n\n      // console.log('keyCode:', keyCode, evt.key);\n      if ((keyCode >= 65 && keyCode <= 90)\n        || (keyCode >= 48 && keyCode <= 57)\n        || (keyCode >= 96 && keyCode <= 105)\n        || evt.key === '='\n      ) {\n        dataSetCellText.call(this, evt.key);\n        editorSet.call(this);\n      } else if (keyCode === 113) {\n        // F2\n        editorSet.call(this);\n      }\n    }\n  });\n}\n\nexport default class Sheet {\n  constructor(targetEl, data) {\n    this.el = h('div', `${cssPrefix}-sheet`);\n    this.toolbar = new Toolbar(data);\n    targetEl.children(this.toolbar.el, this.el);\n    // console.log('elRect:', elRect);\n    const {\n      row, col, view,\n    } = data.options;\n    this.view = view;\n    this.col = col;\n    this.row = row;\n    this.data = data;\n    // table\n    this.tableEl = h('canvas', `${cssPrefix}-table`);\n    // resizer\n    this.rowResizer = new Resizer(false, row.height);\n    this.colResizer = new Resizer(true, col.minWidth);\n    // scrollbar\n    this.verticalScrollbar = new Scrollbar(true);\n    this.horizontalScrollbar = new Scrollbar(false);\n    // editor\n    this.editor = new Editor(\n      Object.values(data.formulam),\n      () => this.getTableOffset(),\n      row.height,\n    );\n    // contextMenu\n    this.contextMenu = new ContextMenu(() => this.getTableOffset());\n    // selector\n    this.selector = new Selector(data);\n    this.overlayerCEl = h('div', `${cssPrefix}-overlayer-content`)\n      .children(\n        this.editor.el,\n        this.selector.el,\n      );\n    this.overlayerEl = h('div', `${cssPrefix}-overlayer`)\n      .child(this.overlayerCEl);\n    // root element\n    this.el.children(\n      this.tableEl,\n      this.overlayerEl.el,\n      this.rowResizer.el,\n      this.colResizer.el,\n      this.verticalScrollbar.el,\n      this.horizontalScrollbar.el,\n      this.contextMenu.el,\n    );\n    // table\n    this.table = new Table(this.tableEl.el, data);\n    sheetInitEvents.call(this);\n    sheetReset.call(this);\n    // init selector [0, 0]\n    selectorSet.call(this, false, 0, 0);\n  }\n\n  loadData(data) {\n    this.data.load(data);\n    sheetReset.call(this);\n    return this;\n  }\n\n  // freeze rows or cols\n  freeze(ri, ci) {\n    const { data } = this;\n    data.setFreeze(ri, ci);\n    sheetReset.call(this);\n    return this;\n  }\n\n  undo() {\n    this.data.undo();\n    sheetReset.call(this);\n  }\n\n  redo() {\n    this.data.redo();\n    sheetReset.call(this);\n  }\n\n  reload() {\n    sheetReset.call(this);\n    return this;\n  }\n\n  getRect() {\n    const height = this.view.height();\n    const width = this.view.width();\n    return { width, height };\n  }\n\n  getTableOffset() {\n    const { row, col } = this;\n    const { width, height } = this.getRect();\n    return {\n      width: width - col.indexWidth,\n      height: height - row.height,\n      left: col.indexWidth,\n      top: row.height,\n    };\n  }\n}\n","/* global window, document */\nimport helper from './helper';\nimport { h } from './component/element';\nimport DataProxy from './data_proxy';\nimport Sheet from './component/sheet';\nimport { cssPrefix } from './config';\n// import Bottombar from './component/bottombar';\nimport './index.less';\n\nconst defaultOptions = {\n  view: {\n    height: () => document.documentElement.clientHeight - 41,\n    width: () => document.documentElement.clientWidth,\n  },\n  formats: [],\n  fonts: [],\n  formula: [],\n  row: {\n    len: 100,\n    height: 25,\n  },\n  col: {\n    len: 26,\n    width: 100,\n    indexWidth: 60,\n    minWidth: 60,\n  },\n  style: {\n    bgcolor: '#ffffff',\n    align: 'left',\n    valign: 'middle',\n    textwrap: false,\n    textDecoration: 'normal',\n    strikethrough: false,\n    color: '#0a0a0a',\n    font: {\n      name: 'Helvetica',\n      size: 10,\n      bold: false,\n      italic: false,\n    },\n  },\n};\n\n/*\nRow: {\n  height: number\n}\nCol: {\n  width: number\n}\nCell: {\n  text: string\n  merge: [rowLen, colLen]\n  format: string,\n  si: style-index\n}\n*/\n\n/*\n  el: element in document\n  options: like #defaultOptions\n  data: {\n    freeze: [0, 0],\n    rowm: {}, // Map<int, Row>\n    colm: {}, // Map<int, Col>\n    cellmm: {}, // Map<int, Map<int, Cell>>\n  }\n*/\n\nclass Spreadsheet {\n  constructor(selectors, options = {}) {\n    let targetEl = selectors;\n    if (typeof selectors === 'string') {\n      targetEl = document.querySelector(selectors);\n    }\n    this.options = helper.merge(defaultOptions, options);\n    this.data = new DataProxy(this.options);\n    const rootEl = h('div', `${cssPrefix}`)\n      .on('contextmenu', evt => evt.preventDefault());\n    // create canvas element\n    targetEl.appendChild(rootEl.el);\n    this.sheet = new Sheet(rootEl, this.data);\n  }\n\n  loadData(data) {\n    this.sheet.loadData(data);\n    return this;\n  }\n\n  change(cb) {\n    this.data.change = cb;\n    return this;\n  }\n}\n\nconst spreadsheet = (el, options = {}) => new Spreadsheet(el, options);\n\nif (window) {\n  window.x = window.x || {};\n  window.x.spreadsheet = spreadsheet;\n}\n\nexport default Spreadsheet;\nexport {\n  spreadsheet,\n};\n"],"sourceRoot":""}