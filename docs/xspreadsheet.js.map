{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/component/element.js","webpack:///./src/core/alphabet.js","webpack:///./src/core/cell_range.js","webpack:///./src/core/selector.js","webpack:///./src/core/scroll.js","webpack:///./src/helper.js","webpack:///./src/core/history.js","webpack:///./src/core/clipboard.js","webpack:///./src/core/merge.js","webpack:///./src/core/row.js","webpack:///./src/core/col.js","webpack:///./src/core/data_proxy.js","webpack:///./src/event.js","webpack:///./src/config.js","webpack:///./src/component/resizer.js","webpack:///./src/component/scrollbar.js","webpack:///./src/component/selector.js","webpack:///./src/component/suggest.js","webpack:///./src/component/editor.js","webpack:///./src/component/contextmenu.js","webpack:///./src/core/font.js","webpack:///./src/core/cell.js","webpack:///./src/core/formula.js","webpack:///./src/core/format.js","webpack:///./src/canvas/draw.js","webpack:///./src/component/table.js","webpack:///./src/component/dropdown.js","webpack:///./src/component/dropdown_font.js","webpack:///./src/component/dropdown_fontsize.js","webpack:///./src/component/dropdown_format.js","webpack:///./src/component/icon.js","webpack:///./src/component/dropdown_formula.js","webpack:///./src/component/color_palette.js","webpack:///./src/component/dropdown_color.js","webpack:///./src/component/dropdown_align.js","webpack:///./src/component/dropdown_linetype.js","webpack:///./src/component/border_palette.js","webpack:///./src/component/dropdown_border.js","webpack:///./src/component/toolbar.js","webpack:///./src/component/tooltip.js","webpack:///./src/component/sheet.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Element","[object Object]","tag","className","this","el","document","createElement","data","undefined","eventNames","handler","fen","oen","split","eventName","test","window","navigator","userAgent","addEventListener","evt","length","k","button","stopPropagation","keys","forEach","css","offsetTop","offsetLeft","offsetHeight","offsetWidth","top","left","height","width","v","scrollLeft","scrollTop","getBoundingClientRect","parentNode","eles","arguments","childNodes","ele","child","arg","createTextNode","appendChild","contains","classList","add","remove","cls","toggleClass","toggle","flag","addClass","removeClass","setAttribute","getAttribute","removeAttribute","content","innerHTML","style","removeProperty","getComputedStyle","h","alphabets","stringAt","index","str","cindex","parseInt","last","indexAt","ret","charCodeAt","exponet","expr2xy","src","x","y","charAt","expr2expr","xn","yn","xy2expr","cell_range_CellRange","sri","sci","eri","eci","args","ri","ci","cb","j","other","toString","ref","refs","selector_Selector","range","multiple","size","Scroll","mergeDeep","sources","source","Array","isArray","helper","cloneDeep","obj","JSON","parse","stringify","merge","equals","obj1","obj2","v1","v2","ai","sum","objOrAry","total","rangeEach","min","max","rangeSum","getv","rangeReduceIf","inits","initv","ifv","deleteProperty","oldv","history_History","undoItems","redoItems","push","currentd","canUndo","pop","canRedo","Clipboard","state","cellRange","merge_Merges","_","cr","filter","it","within","includes","intersects","union","deleteWithin","type","cbWithin","rn","cn","it1","merges","map","valueOf","row_Rows","len","row","getOrNew","getHeight","sumHeight","cells","cell","getCell","what","text","getCellOrNew","srcCellRange","dstCellRange","autofill","dsri","dsci","deri","deci","drn","dcn","isAdd","dn","ii","jj","nri","nci","ncell","replace","word","result","exec","Number","substring","setCell","ncellmm","each","eachCells","ndata","rndata","deleteCell","entries","col_Cols","indexWidth","minWidth","col","getWidth","sumWidth","defaultSettings","view","documentElement","clientHeight","clientWidth","showGrid","showToolbar","bgcolor","align","valign","textwrap","strike","underline","color","font","bold","italic","toolbarHeight","copyPaste","rows","deleteCells","setStyleBorder","bss","styles","cstyle","assign","border","addStyle","data_proxy_DataProxy","settings","freeze","cols","hyperlinks","comments","selector","scroll","history","clipboard","change","undo","getData","setData","redo","copy","cut","isClear","changeData","isCopy","isCut","cutPaste","move","clear","cri","cci","getFirstIncludes","unmerge","isSignleSelected","mergeIndexes","mri","mci","splice","mrl","mcl","bottom","right","getCellMerge","format","nfont","triggerChange","setCellText","getSelectedRect","x1","y1","getRect","cellPosition","left0","top0","fsh","freezeTotalHeight","fsw","freezeTotalWidth","scrollOffsety","scrollOffsetx","totalWidth","totalHeight","cellRect","si","insert","insertColumn","shift","rsize","csize","delete","deleteColumn","fci","fri","cellStyle","defaultStyle","getCellStyleOrDefault","setHeight","setWidth","viewHeight","viewWidth","viewRange","filterIntersects","rowHeight","colWidth","nstyle","target","fn","unbind","removeEventListener","mouseMoveUp","movefunc","upfunc","xEvtUp","calTouchDirection","spanx","spany","direction","Math","abs","cssPrefix","devicePixelRatio","resizer_Resizer","vertical","minDistance","moving","children","hoverEl","on","mousedownHandler","lineEl","hide","cRect","finishedFn","rect","line","offset","show","startEvt","distance","e","buttons","movementX","movementY","scrollbar_Scrollbar","moveFn","contentEl","contentDistance","cssKey","selectorHeightBorderWidth","startZIndex","selector_SelectorElement","cornerEl","areaEl","clipboardEl","autofillEl","calBRAreaOffset","ftwidth","ftheight","calTAreaOffset","calLAreaOffset","setBRAreaOffset","br","setAreaOffset","setTAreaOffset","setLAreaOffset","setLClipboardOffset","setClipboardOffset","setBRClipboardOffset","setTClipboardOffset","setAllAreaOffset","tl","setAllClipboardOffset","component_selector_Selector","areaOffset","indexes","arange","freezeHeight","freezeWidth","setOffset","coffset","getClipboardRect","resetOffset","indexesUpdated","calSelectedRangeByStart","setIndexes","moveIndexes","resetAreaOffset","calSelectedRangeByEnd","reset","srn","ern","ecn","showAutofill","hideAutofill","showClipboard","hideClipboard","inputEnter","preventDefault","filterItems","itemIndex","click","suggest_Suggest","items","itemClick","cssRemoveKeys","startsWith","toUpperCase","item","html","title","label","input","keyCode","ctrlKey","resetTextareaSize","inputText","textlineEl","textEl","tlineWidth","maxWidth","viewFn","twidth","h1","setText","position","blur","val","setTimeout","focus","setSelectionRange","editor_Editor","formulas","suggest","start","lastIndexOf","sit","eit","indexOf","search","bindInputEvents","w","suggestPosition","elOffset","sOffset","menuItems","buildMenu","contextmenu_ContextMenu","baseFonts","fontSizes","pt","px","evalSubExpr","subExpr","cellRender","cell_cellRender","formulaMap","getCellText","stack","operatorStack","subStrs","fnArgType","fnArgsLen","join","c1","ex","ey","sx","sy","rangelen","infixExprToSuffixExpr","srcStack","formula","params","render","evalSuffixExpr","cellText","core_cell","baseFormulas","ary","reduce","a","b","formula_formulas","formulam","f","formatStringRender","formatNumberRender","toFixed","first","parts","baseFormats","formatm","draw_dpr","thinLineWidth","npx","DrawBox","padding","borderTop","borderRight","borderBottom","borderLeft","fontSize","hoffset","y2","drawFontLine","tx","ty","blheight","blwidth","floffset","Draw","ctx","getContext","resize","scale","clearRect","options","save","beginPath","restore","translate","fillRect","fillText","txt","box","attr","textWrap","textx","textAlign","textBaseline","fillStyle","strokeStyle","txtWidth","measureText","ceil","innerWidth","texty","textLine","lineWidth","setLineDash","xys","moveTo","lineTo","stroke","topxys","rightxys","bottomxys","leftxys","dtextcb","clip","fill","strokeBorders","cellPaddingWidth","tableFixedHeaderCleanStyle","tableGridStyle","renderCell","rindex","draw","dbox","setBorders","getCellTextOrDefault","getFontSizePxByPt","renderContent","scrollOffset","nviewRange","eachMergesInView","renderSelectedHeaderCell","renderFixedHeaders","rowEach","colEach","renderContentGrid","renderFreezeHighlightLine","p1","p2","renderAll","component_table","sheight","ftw","fth","theight","swidth","freezeViewRange","dropdown_Dropdown","showArrow","placement","super","headerEl","parent","active","dropdown_font_DropdownFont","nfonts","setTitle","dropdown_fontsize_DropdownFontSize","dropdown_format_DropdownFormat","nformats","slice","icon_Icon","iconNameEl","dropdown_formula_DropdownFormula","nformulas","themeColorPlaceHolders","themeColors","standardColors","buildTd","color_palette_ColorPalette","table","dropdown_color_DropdownColor","iconName","icon","colorPalette","dropdown_align_DropdownAlign","aligns","buildItemWithIcon","setName","lineTypes","dropdown_linetype_DropdownLineType","beforei","lineTypeEls","iti","buildTable","trs","border_palette_buildTd","border_palette_BorderPalette","ddColor","ddType","dropdown_border_DropdownBorder","borderPalette","buildButton","tooltipdata","body","elBox","removeChild","tooltip","buildDivider","buildButtonWithIcon","buildIcon","toggleChange","elName","types","hasClass","toolbar_DropdownMore","moreBtns","moreResize","btns","moreEl","ddMore","btnChildren","sumWidth2","list1","list2","marginLeft","marginRight","computedStyle","toolbar_Toolbar","isHide","ddFormat","ddFont","ddFormula","ddFontSize","ddTextColor","ddFillColor","ddAlign","ddVAlign","ddBorder","undoEl","redoEl","paintformatEl","clearformatEl","fontBoldEl","fontItalicEl","underlineEl","striketEl","mergeEl","textwrapEl","freezeEl","getSelectedCellStyle","getSelectedCell","disabled","canUnmerge","freezeIsActive","selectorSet","toolbar","setEnd","set","selectorMove","verticalScrollbar","horizontalScrollbar","tableOffset","getTableOffset","verticalScrollbarSet","horizontalScrollbarSet","sheetReset","tableEl","overlayerEl","overlayerCEl","tOffset","vRect","editor","fwidth","fheight","setFreezeLengths","clearClipboard","paste","overlayerMousedown","isAutofillEl","getCellRectByXY","offsetX","offsetY","shiftKey","paintformatActive","paintformatToggle","editorSetOffset","sPosition","editorSet","dataSetCellText","setSelectedCellText","insertDeleteRowColumn","sheetInitEvents","rowResizer","colResizer","contextMenu","tRect","xyInSelectedRect","setPosition","detail","delta","deltaY","end","startx","starty","pageX","pageY","touches","changedTouches","bindTouch","setSelectedCellAttr","scrolly","resetBRLAreaOffset","scrollx","resetBRTAreaOffset","itext","reload","focusing","which","altKey","trigger","sheet_Sheet","targetEl","setFreeze","__webpack_exports__","spreadsheet","src_Spreadsheet","selectors","querySelector","rootEl","sheet","loadData"],"mappings":"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","file":"xspreadsheet.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/* global document */\n/* global window */\nclass Element {\n  constructor(tag, className = '') {\n    if (typeof tag === 'string') {\n      this.el = document.createElement(tag);\n      this.el.className = className;\n    } else {\n      this.el = tag;\n    }\n    this.data = {};\n  }\n\n  data(key, value) {\n    if (value !== undefined) {\n      this.data[key] = value;\n      return this;\n    }\n    return this.data[key];\n  }\n\n  on(eventNames, handler) {\n    const [fen, ...oen] = eventNames.split('.');\n    let eventName = fen;\n    if (eventName === 'mousewheel' && /Firefox/i.test(window.navigator.userAgent)) {\n      eventName = 'DOMMouseScroll';\n    }\n    this.el.addEventListener(eventName, (evt) => {\n      handler(evt);\n      for (let i = 0; i < oen.length; i += 1) {\n        const k = oen[i];\n        if (k === 'left' && evt.button !== 0) {\n          return;\n        } if (k === 'right' && evt.button !== 2) {\n          return;\n        } if (k === 'stop') {\n          evt.stopPropagation();\n        }\n      }\n    });\n    return this;\n  }\n\n  offset(value) {\n    if (value !== undefined) {\n      Object.keys(value).forEach((k) => {\n        this.css(k, `${value[k]}px`);\n      });\n      return this;\n    }\n    const {\n      offsetTop, offsetLeft, offsetHeight, offsetWidth,\n    } = this.el;\n    return {\n      top: offsetTop,\n      left: offsetLeft,\n      height: offsetHeight,\n      width: offsetWidth,\n    };\n  }\n\n  scroll(v) {\n    const { el } = this;\n    if (v !== undefined) {\n      if (v.left !== undefined) {\n        el.scrollLeft = v.left;\n      }\n      if (v.top !== undefined) {\n        el.scrollTop = v.top;\n      }\n    }\n    return { left: el.scrollLeft, top: el.scrollTop };\n  }\n\n  box() {\n    return this.el.getBoundingClientRect();\n  }\n\n  parent() {\n    return new Element(this.el.parentNode);\n  }\n\n  children(...eles) {\n    if (arguments.length === 0) {\n      return this.el.childNodes;\n    }\n    eles.forEach(ele => this.child(ele));\n    return this;\n  }\n\n  /*\n  first() {\n    return this.el.firstChild;\n  }\n\n  last() {\n    return this.el.lastChild;\n  }\n\n  remove(ele) {\n    return this.el.removeChild(ele);\n  }\n\n  prepend(ele) {\n    const { el } = this;\n    if (el.children.length > 0) {\n      el.insertBefore(ele, el.firstChild);\n    } else {\n      el.appendChild(ele);\n    }\n    return this;\n  }\n\n  prev() {\n    return this.el.previousSibling;\n  }\n\n  next() {\n    return this.el.nextSibling;\n  }\n  */\n\n  child(arg) {\n    let ele = arg;\n    if (typeof arg === 'string') {\n      ele = document.createTextNode(arg);\n    } else if (arg instanceof Element) {\n      ele = arg.el;\n    }\n    this.el.appendChild(ele);\n    return this;\n  }\n\n  contains(ele) {\n    return this.el.contains(ele);\n  }\n\n  className(v) {\n    if (v !== undefined) {\n      this.el.className = v;\n      return this;\n    }\n    return this.el.className;\n  }\n\n  addClass(name) {\n    this.el.classList.add(name);\n    return this;\n  }\n\n  hasClass(name) {\n    return this.el.classList.contains(name);\n  }\n\n  removeClass(name) {\n    this.el.classList.remove(name);\n    return this;\n  }\n\n  toggle(cls = 'active') {\n    return this.toggleClass(cls);\n  }\n\n  toggleClass(name) {\n    return this.el.classList.toggle(name);\n  }\n\n  active(flag = true) {\n    if (flag) this.addClass('active');\n    else this.removeClass('active');\n    return this;\n  }\n\n  disabled(flag = true) {\n    if (flag) this.addClass('disabled');\n    else this.removeClass('disabled');\n    return this;\n  }\n\n  // key, value\n  // key\n  // {k, v}...\n  attr(key, value) {\n    if (value !== undefined) {\n      this.el.setAttribute(key, value);\n    } else {\n      if (typeof key === 'string') {\n        return this.el.getAttribute(key);\n      }\n      Object.keys(key).forEach((k) => {\n        this.el.setAttribute(k, key[k]);\n      });\n    }\n    return this;\n  }\n\n  removeAttr(key) {\n    this.el.removeAttribute(key);\n    return this;\n  }\n\n  html(content) {\n    if (content !== undefined) {\n      this.el.innerHTML = content;\n      return this;\n    }\n    return this.el.innerHTML;\n  }\n\n  val(v) {\n    if (v !== undefined) {\n      this.el.value = v;\n      return this;\n    }\n    return this.el.value;\n  }\n\n  cssRemoveKeys(...keys) {\n    keys.forEach(k => this.el.style.removeProperty(k));\n    return this;\n  }\n\n  // css( propertyName )\n  // css( propertyName, value )\n  // css( properties )\n  css(name, value) {\n    if (value === undefined && typeof name !== 'string') {\n      Object.keys(name).forEach((k) => {\n        this.el.style[k] = name[k];\n      });\n      return this;\n    }\n    if (value !== undefined) {\n      this.el.style[name] = value;\n      return this;\n    }\n    return this.el.style[name];\n  }\n\n  computedStyle() {\n    return window.getComputedStyle(this.el, null);\n  }\n\n  show() {\n    this.css('display', 'block');\n    return this;\n  }\n\n  hide() {\n    this.css('display', 'none');\n    return this;\n  }\n}\n\nconst h = (tag, className = '') => new Element(tag, className);\n\nexport {\n  Element,\n  h,\n};\n","const alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\nexport function stringAt(index) {\n  let str = '';\n  let cindex = index;\n  while (cindex >= alphabets.length) {\n    cindex /= alphabets.length;\n    cindex -= 1;\n    str += alphabets[parseInt(cindex, 10) % alphabets.length];\n  }\n  const last = index % alphabets.length;\n  str += alphabets[last];\n  return str;\n}\n\nexport function indexAt(str) {\n  let ret = 0;\n  for (let i = 0; i < str.length - 1; i += 1) {\n    const cindex = str.charCodeAt(i) - 65;\n    const exponet = str.length - 1 - i;\n    ret += (alphabets.length ** exponet) + (alphabets.length * cindex);\n  }\n  ret += str.charCodeAt(str.length - 1) - 65;\n  return ret;\n}\n\n// B10 => x,y\nexport function expr2xy(src) {\n  let x = '';\n  let y = '';\n  for (let i = 0; i < src.length; i += 1) {\n    if (src.charAt(i) >= '0' && src.charAt(i) <= '9') {\n      y += src.charAt(i);\n    } else {\n      x += src.charAt(i);\n    }\n  }\n  return [indexAt(x), parseInt(y, 10) - 1];\n}\n\nexport function expr2expr(src, xn, yn) {\n  const [x, y] = expr2xy(src);\n  return stringAt(x + xn) + (y + yn);\n}\n\n// x,y => B10\nexport function xy2expr(x, y) {\n  return `${stringAt(x)}${y + 1}`;\n}\n\nexport default {\n  stringAt,\n  indexAt,\n  expr2xy,\n  xy2expr,\n  expr2expr,\n};\n","import { xy2expr, expr2xy } from './alphabet';\n\nclass CellRange {\n  constructor(sri, sci, eri, eci) {\n    this.sri = sri;\n    this.sci = sci;\n    this.eri = eri;\n    this.eci = eci;\n  }\n\n  set(sri, sci, eri, eci) {\n    this.sri = sri;\n    this.sci = sci;\n    this.eri = eri;\n    this.eci = eci;\n  }\n\n  multiple() {\n    return this.eri - this.sri > 0 || this.eci - this.sci > 0;\n  }\n\n  // cell-index: ri, ci\n  // cell-ref: A10\n  includes(...args) {\n    let [ri, ci] = [0, 0];\n    if (args.length === 1) {\n      [ri, ci] = expr2xy(args[0]);\n    } else if (args.length === 2) {\n      [ri, ci] = args;\n    }\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    return sri <= ri && ri <= eri && sci <= ci && ci <= eci;\n  }\n\n  each(cb) {\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    for (let i = sri; i <= eri; i += 1) {\n      for (let j = sci; j <= eci; j += 1) {\n        cb(i, j);\n      }\n    }\n  }\n\n  // within\n  within(other) {\n    return this.sri >= other.sri\n      && this.sci >= other.sci\n      && this.eri <= other.eri\n      && this.eci <= other.eci;\n  }\n\n  // disjoint\n  disjoint(other) {\n    return this.sri > other.eri\n      || this.sci > other.eci\n      || other.sri > this.eri\n      || other.sci > this.eci;\n  }\n\n  // intersects\n  intersects(other) {\n    return this.sri <= other.eri\n      && this.sci <= other.eci\n      && other.sri <= this.eri\n      && other.sci <= this.eci;\n  }\n\n  // union\n  union(other) {\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    return new CellRange(\n      other.sri < sri ? other.sri : sri,\n      other.sci < sci ? other.sci : sci,\n      other.eri > eri ? other.eri : eri,\n      other.eci > eci ? other.eci : eci,\n    );\n  }\n  // intersection\n\n  size() {\n    return [\n      this.eri - this.sri + 1,\n      this.eci - this.sci + 1,\n    ];\n  }\n\n  toString() {\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    return `${xy2expr(sci, sri)}:${xy2expr(eci, eri)}`;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n\n  equals(other) {\n    return this.eri === other.eri\n      && this.eci === other.eci\n      && this.sri === other.sri\n      && this.sci === other.sci;\n  }\n\n  static valueOf(ref) {\n    // B1:B8, B1 => 1 x 1 cell range\n    const refs = ref.split(':');\n    const [sri, sci] = expr2xy(refs[0]);\n    let [eri, eci] = [sri, sci];\n    if (refs.length > 1) {\n      [eri, eci] = expr2xy(refs[1]);\n    }\n    return new CellRange(sri, sci, eri, eci);\n  }\n}\n\nexport default CellRange;\n\nexport {\n  CellRange,\n};\n","import { CellRange } from './cell_range';\n\nexport default class Selector {\n  constructor() {\n    this.range = new CellRange(0, 0, 0, 0);\n    this.ri = 0;\n    this.ci = 0;\n  }\n\n  multiple() {\n    return this.range.multiple();\n  }\n\n  setIndexes(ri, ci) {\n    this.ri = ri;\n    this.ci = ci;\n  }\n\n  size() {\n    return this.range.size();\n  }\n}\n","export default class Scroll {\n  constructor() {\n    this.x = 0; // left\n    this.y = 0; // top\n    this.ri = 0; // cell row-index\n    this.ci = 0; // cell col-index\n  }\n}\n","/* eslint-disable no-param-reassign */\nfunction cloneDeep(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nconst mergeDeep = (object = {}, ...sources) => {\n  sources.forEach((source) => {\n    Object.keys(source).forEach((key) => {\n      const v = source[key];\n      // console.log('k:', key, ', v:', source[key], typeof v, v instanceof Object);\n      if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean') {\n        object[key] = v;\n      } else if (typeof v !== 'function' && !Array.isArray(v) && v instanceof Object) {\n        object[key] = object[key] || {};\n        mergeDeep(object[key], v);\n      } else {\n        object[key] = v;\n      }\n    });\n  });\n  // console.log('::', object);\n  return object;\n};\n\nfunction equals(obj1, obj2) {\n  const keys = Object.keys(obj1);\n  if (keys.length !== Object.keys(obj2).length) return false;\n  for (let i = 0; i < keys.length; i += 1) {\n    const k = keys[i];\n    const v1 = obj1[k];\n    const v2 = obj2[k];\n    if (v2 === undefined) return false;\n    if (typeof v1 === 'string' || typeof v1 === 'number' || typeof v1 === 'boolean') {\n      if (v1 !== v2) return false;\n    } else if (Array.isArray(v1)) {\n      if (v1.length !== v2.length) return false;\n      for (let ai = 0; ai < v1.length; ai += 1) {\n        if (!equals(v1[ai], v2[ai])) return false;\n      }\n    } else if (typeof v1 !== 'function' && !Array.isArray(v1) && v1 instanceof Object) {\n      if (!equals(v1, v2)) return false;\n    }\n  }\n  return true;\n}\n\n/*\n  objOrAry: obejct or Array\n  cb: (value, index | key) => { return value }\n*/\nconst sum = (objOrAry, cb = value => value) => {\n  let total = 0;\n  let size = 0;\n  Object.keys(objOrAry).forEach((key) => {\n    total += cb(objOrAry[key], key);\n    size += 1;\n  });\n  return [total, size];\n};\n\nfunction deleteProperty(obj, property) {\n  const oldv = obj[`${property}`];\n  delete obj[`${property}`];\n  return oldv;\n}\n\nfunction rangeReduceIf(min, max, inits, initv, ifv, getv) {\n  let s = inits;\n  let v = initv;\n  let i = min;\n  for (; i < max; i += 1) {\n    if (s > ifv) break;\n    v = getv(i);\n    s += v;\n  }\n  return [i, s - v, v];\n}\n\nfunction rangeSum(min, max, getv) {\n  let s = 0;\n  for (let i = min; i < max; i += 1) {\n    s += getv(i);\n  }\n  return s;\n}\n\nfunction rangeEach(min, max, cb) {\n  for (let i = min; i < max; i += 1) {\n    cb(i);\n  }\n}\n\nexport default {\n  cloneDeep,\n  merge: (...sources) => mergeDeep({}, ...sources),\n  equals,\n  sum,\n  rangeEach,\n  rangeSum,\n  rangeReduceIf,\n  deleteProperty,\n};\n","import helper from '../helper';\n\nexport default class History {\n  constructor() {\n    this.undoItems = [];\n    this.redoItems = [];\n  }\n\n  add(data) {\n    this.undoItems.push(helper.cloneDeep(data));\n    this.redoItems = [];\n  }\n\n  canUndo() {\n    return this.undoItems.length > 0;\n  }\n\n  canRedo() {\n    return this.redoItems.length > 0;\n  }\n\n  undo(currentd, cb) {\n    const { undoItems, redoItems } = this;\n    if (this.canUndo()) {\n      redoItems.push(helper.cloneDeep(currentd));\n      cb(undoItems.pop());\n    }\n  }\n\n  redo(currentd, cb) {\n    const { undoItems, redoItems } = this;\n    if (this.canRedo()) {\n      undoItems.push(helper.cloneDeep(currentd));\n      cb(redoItems.pop());\n    }\n  }\n}\n","export default class Clipboard {\n  constructor() {\n    this.range = null; // CellRange\n    this.state = 'clear';\n  }\n\n  copy(cellRange) {\n    this.range = cellRange;\n    this.state = 'copy';\n    return this;\n  }\n\n  cut(cellRange) {\n    this.range = cellRange;\n    this.state = 'cut';\n    return this;\n  }\n\n  isCopy() {\n    return this.state === 'copy';\n  }\n\n  isCut() {\n    return this.state === 'cut';\n  }\n\n  isClear() {\n    return this.state === 'clear';\n  }\n\n  clear() {\n    this.range = null;\n    this.state = 'clear';\n  }\n}\n","import { CellRange } from './cell_range';\n\nclass Merges {\n  constructor(d = []) {\n    this._ = d;\n  }\n\n  forEach(cb) {\n    this._.forEach(cb);\n  }\n\n  deleteWithin(cr) {\n    this._ = this._.filter(it => !it.within(cr));\n  }\n\n  getFirstIncludes(ri, ci) {\n    for (let i = 0; i < this._.length; i += 1) {\n      const it = this._[i];\n      if (it.includes(ri, ci)) {\n        return it;\n      }\n    }\n    return null;\n  }\n\n  filterIntersects(cellRange) {\n    return new Merges(this._.filter(it => it.intersects(cellRange)));\n  }\n\n  union(cellRange) {\n    let cr = cellRange;\n    this._.forEach((it) => {\n      if (it.intersects(cellRange)) {\n        cr = it.union(cr);\n      }\n    });\n    return cr;\n  }\n\n  add(cr) {\n    this.deleteWithin(cr);\n    this._.push(cr);\n  }\n\n  // type: row | column\n  shift(type, index, n, cbWithin) {\n    this._.forEach((cellRange) => {\n      const {\n        sri, sci, eri, eci,\n      } = cellRange;\n      const range = cellRange;\n      if (type === 'row') {\n        if (sri > index) {\n          range.sri += n;\n          range.eri += n;\n        } else if (sri < index && index <= eri) {\n          range.eri += n;\n          cbWithin(sri, sci, n, 0);\n        }\n      } else if (type === 'column') {\n        if (sci > index) {\n          range.sci += n;\n          range.eci += n;\n        } else if (sci < index && index <= eci) {\n          range.eci += n;\n          cbWithin(sri, sci, 0, n);\n        }\n      }\n    });\n  }\n\n  move(cellRange, rn, cn) {\n    this._.forEach((it1) => {\n      const it = it1;\n      if (it.within(cellRange)) {\n        it.sri += rn;\n        it.sci += cn;\n      }\n    });\n  }\n\n  setData(merges) {\n    this._ = merges.map(merge => CellRange.valueOf(merge));\n    return this;\n  }\n\n  getData() {\n    return this._.map(merge => merge.toString());\n  }\n}\n\nexport default {};\nexport {\n  Merges,\n};\n","import helper from '../helper';\nimport { expr2expr } from './alphabet';\n\nclass Rows {\n  constructor({ len, height }) {\n    this._ = {};\n    this.len = len;\n    // default row height\n    this.height = height;\n  }\n\n  getHeight(ri) {\n    const row = this.get(ri);\n    if (row && row.height) {\n      return row.height;\n    }\n    return this.height;\n  }\n\n  setHeight(ri, v) {\n    const row = this.getOrNew(ri);\n    row.height = v;\n  }\n\n  setStyle(ri, style) {\n    const row = this.getOrNew(ri);\n    row.style = style;\n  }\n\n  sumHeight(min, max) {\n    return helper.rangeSum(min, max, i => this.getHeight(i));\n  }\n\n  totalHeight() {\n    return this.sumHeight(0, this.len);\n  }\n\n  get(ri) {\n    return this._[ri];\n  }\n\n  getOrNew(ri) {\n    this._[ri] = this._[ri] || { cells: {} };\n    return this._[ri];\n  }\n\n  getCell(ri, ci) {\n    const row = this.get(ri);\n    if (row !== undefined && row.cells !== undefined && row.cells[ci] !== undefined) {\n      return row.cells[ci];\n    }\n    return null;\n  }\n\n  getCellMerge(ri, ci) {\n    const cell = this.getCell(ri, ci);\n    if (cell && cell.merge) return cell.merge;\n    return [0, 0];\n  }\n\n  getCellOrNew(ri, ci) {\n    const row = this.getOrNew(ri);\n    row.cells[ci] = row.cells[ci] || {};\n    return row.cells[ci];\n  }\n\n  // what: all | text | format\n  setCell(ri, ci, cell, what = 'all') {\n    const row = this.getOrNew(ri);\n    if (what === 'all') {\n      row.cells[ci] = cell;\n    } else if (what === 'text') {\n      row.cells[ci] = row.cells[ci] || {};\n      row.cells[ci].text = cell.text;\n    } else if (what === 'format') {\n      row.cells[ci] = row.cells[ci] || {};\n      row.cells[ci].style = cell.style;\n      if (cell.merge) row.cells[ci].merge = cell.merge;\n    }\n  }\n\n  setCellText(ri, ci, text) {\n    const cell = this.getCellOrNew(ri, ci);\n    cell.text = text;\n  }\n\n  // what: all | format | text\n  copyPaste(srcCellRange, dstCellRange, what, autofill = false, cb = () => {}) {\n    const {\n      sri, sci, eri, eci,\n    } = srcCellRange;\n    const dsri = dstCellRange.sri;\n    const dsci = dstCellRange.sci;\n    const deri = dstCellRange.eri;\n    const deci = dstCellRange.eci;\n    const [rn, cn] = srcCellRange.size();\n    const [drn, dcn] = dstCellRange.size();\n    // console.log(srcIndexes, dstIndexes);\n    let isAdd = true;\n    let dn = 0;\n    if (deri < sri || deci < sci) {\n      isAdd = false;\n      if (deri < sri) dn = drn;\n      else dn = dcn;\n    }\n    // console.log('drn:', drn, ', dcn:', dcn);\n    for (let i = sri; i <= eri; i += 1) {\n      if (this._[i]) {\n        for (let j = sci; j <= eci; j += 1) {\n          if (this._[i].cells && this._[i].cells[j]) {\n            for (let ii = dsri; ii <= deri; ii += rn) {\n              for (let jj = dsci; jj <= deci; jj += cn) {\n                const nri = ii + (i - sri);\n                const nci = jj + (j - sci);\n                const ncell = helper.cloneDeep(this._[i].cells[j]);\n                // ncell.text\n                if (autofill && ncell && ncell.text && ncell.text.length > 0) {\n                  const { text } = ncell;\n                  let n = (jj - dsci) + (ii - dsri) + 1;\n                  // console.log('n:', n);\n                  if (!isAdd) {\n                    n -= dn + 1;\n                  }\n                  if (text[0] === '=') {\n                    ncell.text = text.replace(/\\w{1,3}\\d/g, (word) => {\n                      let [xn, yn] = [0, 0];\n                      if (sri === dsri) {\n                        xn = n;\n                      } else {\n                        yn = n;\n                      }\n                      // console.log('xn:', xn, ', yn:', yn, expr2expr(word, xn, yn));\n                      return expr2expr(word, xn, yn);\n                    });\n                  } else {\n                    const result = /[\\\\.\\d]+$/.exec(text);\n                    // console.log('result:', result);\n                    if (result !== null) {\n                      const index = Number(result[0]) + n;\n                      ncell.text = text.substring(0, result.index) + index;\n                    }\n                  }\n                }\n                // console.log('ncell:', nri, nci, ncell);\n                this.setCell(nri, nci, ncell, what);\n                cb(nri, nci, ncell);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  cutPaste(srcCellRange, dstCellRange) {\n    const ncellmm = {};\n    this.each((ri) => {\n      this.eachCells(ri, (ci) => {\n        let nri = parseInt(ri, 10);\n        let nci = parseInt(ci, 10);\n        if (srcCellRange.includes(ri, ci)) {\n          nri = dstCellRange.sri + (nri - srcCellRange.sri);\n          nci = dstCellRange.sci + (nci - srcCellRange.sci);\n        }\n        ncellmm[nri] = ncellmm[nri] || { cells: {} };\n        ncellmm[nri].cells[nci] = this._[ri].cells[ci];\n      });\n    });\n    this._ = ncellmm;\n  }\n\n  insert(sri, n = 1) {\n    const ndata = {};\n    this.each((ri, row) => {\n      let nri = parseInt(ri, 10);\n      if (nri >= sri) {\n        nri += n;\n      }\n      ndata[nri] = row;\n    });\n    this._ = ndata;\n    this.len += n;\n  }\n\n  delete(sri, eri) {\n    const n = eri - sri + 1;\n    const ndata = {};\n    this.each((ri, row) => {\n      const nri = parseInt(ri, 10);\n      if (nri < sri) {\n        ndata[nri] = row;\n      } else if (ri > eri) {\n        ndata[nri - n] = row;\n      }\n    });\n    this._ = ndata;\n    this.len -= n;\n  }\n\n  insertColumn(sci, n = 1) {\n    this.each((ri, row) => {\n      const rndata = {};\n      this.eachCells(ri, (ci, cell) => {\n        let nci = parseInt(ci, 10);\n        if (nci >= sci) {\n          nci += n;\n        }\n        rndata[nci] = cell;\n      });\n      row.cells = rndata;\n    });\n  }\n\n  deleteColumn(sci, eci) {\n    const n = eci - sci + 1;\n    this.each((ri, row) => {\n      const rndata = {};\n      this.eachCells(ri, (ci, cell) => {\n        const nci = parseInt(ci, 10);\n        if (nci < sci) {\n          rndata[nci] = cell;\n        } else if (nci > eci) {\n          rndata[nci - n] = cell;\n        }\n      });\n      row.cells = rndata;\n    });\n  }\n\n  // what: all | text | format | merge\n  deleteCells(cellRange, what = 'all') {\n    cellRange.each((i, j) => {\n      this.deleteCell(i, j, what);\n    });\n  }\n\n  // what: all | text | format | merge\n  deleteCell(ri, ci, what = 'all') {\n    const row = this.get(ri);\n    if (row !== null) {\n      const cell = this.getCell(ri, ci);\n      if (cell !== null) {\n        if (what === 'all') {\n          delete row.cells[ci];\n        } else if (what === 'text') {\n          if (cell.text) delete cell.text;\n          if (cell.value) delete cell.value;\n        } else if (what === 'format') {\n          if (cell.style !== undefined) delete cell.style;\n          if (cell.merge) delete cell.merge;\n        } else if (what === 'merge') {\n          if (cell.merge) delete cell.merge;\n        }\n      }\n    }\n  }\n\n  each(cb) {\n    Object.entries(this._).forEach(([ri, row]) => {\n      cb(ri, row);\n    });\n  }\n\n  eachCells(ri, cb) {\n    if (this._[ri] && this._[ri].cells) {\n      Object.entries(this._[ri].cells).forEach(([ci, cell]) => {\n        cb(ci, cell);\n      });\n    }\n  }\n\n  setData(d) {\n    this._ = d;\n  }\n\n  getData() {\n    return this._;\n  }\n}\n\nexport default {};\nexport {\n  Rows,\n};\n","import helper from '../helper';\n\nclass Cols {\n  constructor({\n    len, width, indexWidth, minWidth,\n  }) {\n    this._ = {};\n    this.len = len;\n    this.width = width;\n    this.indexWidth = indexWidth;\n    this.minWidth = minWidth;\n  }\n\n  setData(d) {\n    this._ = d;\n  }\n\n  getData() {\n    return this._;\n  }\n\n  getWidth(i) {\n    const col = this._[i];\n    if (col && col.width) {\n      return col.width;\n    }\n    return this.width;\n  }\n\n  getOrNew(ci) {\n    this._[ci] = this._[ci] || {};\n    return this._[ci];\n  }\n\n  setWidth(ci, width) {\n    const col = this.getOrNew(ci);\n    col.width = width;\n  }\n\n  setStyle(ci, style) {\n    const col = this.getOrNew(ci);\n    col.style = style;\n  }\n\n  sumWidth(min, max) {\n    return helper.rangeSum(min, max, i => this.getWidth(i));\n  }\n\n  totalWidth() {\n    return this.sumWidth(0, this.len);\n  }\n}\n\nexport default {};\nexport {\n  Cols,\n};\n","/* global document */\n\nimport Selector from './selector';\nimport Scroll from './scroll';\nimport History from './history';\nimport Clipboard from './clipboard';\nimport { Merges } from './merge';\nimport helper from '../helper';\nimport { Rows } from './row';\nimport { Cols } from './col';\nimport { CellRange } from './cell_range';\nimport { expr2xy, xy2expr } from './alphabet';\n\n// private methods\n/*\n * {\n *  name: ''\n *  freeze: [0, 0],\n *  formats: [],\n *  styles: [\n *    {\n *      bgcolor: '',\n *      align: '',\n *      valign: '',\n *      textwrap: false,\n *      strike: false,\n *      underline: false,\n *      color: '',\n *      format: 1,\n *      border: {\n *        left: [style, color],\n *        right: [style, color],\n *        top: [style, color],\n *        bottom: [style, color],\n *      },\n *      font: {\n *        family: 'Helvetica',\n *        size: 10,\n *        bold: false,\n *        italic: false,\n *      }\n *    }\n *  ],\n *  merges: [\n *    'A1:F11',\n *    ...\n *  ],\n *  rows: {\n *    1: {\n *      height: 50,\n *      style: 1,\n *      cells: {\n *        1: {\n *          style: 2,\n *          type: 'string',\n *          text: '',\n *          value: '', // cal result\n *        }\n *      }\n *    },\n *    ...\n *  },\n *  cols: {\n *    2: { width: 100, style: 1 }\n *  }\n * }\n */\nconst defaultSettings = {\n  view: {\n    height: () => document.documentElement.clientHeight,\n    width: () => document.documentElement.clientWidth,\n  },\n  showGrid: true,\n  showToolbar: true,\n  row: {\n    len: 100,\n    height: 25,\n  },\n  col: {\n    len: 26,\n    width: 100,\n    indexWidth: 60,\n    minWidth: 60,\n  },\n  style: {\n    bgcolor: '#ffffff',\n    align: 'left',\n    valign: 'middle',\n    textwrap: false,\n    strike: false,\n    underline: false,\n    color: '#0a0a0a',\n    font: {\n      name: 'Helvetica',\n      size: 10,\n      bold: false,\n      italic: false,\n    },\n  },\n};\n\nconst toolbarHeight = 41;\n\nfunction copyPaste(srcCellRange, dstCellRange, what, autofill = false) {\n  const { rows, merges } = this;\n  // delete dest merge\n  if (what === 'all' || what === 'format') {\n    rows.deleteCells(dstCellRange, what);\n    merges.deleteWithin(dstCellRange);\n  }\n  rows.copyPaste(srcCellRange, dstCellRange, what, autofill, (ri, ci, cell) => {\n    if (cell && cell.merge) {\n      // console.log('cell:', ri, ci, cell);\n      const [rn, cn] = cell.merge;\n      if (rn <= 0 && cn <= 0) return;\n      merges.add(new CellRange(ri, ci, ri + rn, ci + cn));\n    }\n  });\n}\n\nfunction cutPaste(srcCellRange, dstCellRange) {\n  const { clipboard, rows, merges } = this;\n  rows.cutPaste(srcCellRange, dstCellRange);\n  merges.move(srcCellRange,\n    dstCellRange.sri - srcCellRange.sri,\n    dstCellRange.sci - srcCellRange.sci);\n  clipboard.clear();\n}\n\n// bss: { top, bottom, left, right }\nfunction setStyleBorder(ri, ci, bss) {\n  const { styles, rows } = this;\n  const cell = rows.getCellOrNew(ri, ci);\n  let cstyle = {};\n  if (cell.style !== undefined) {\n    cstyle = helper.cloneDeep(styles[cell.style]);\n  }\n  Object.assign(cstyle, { border: bss });\n  cell.style = this.addStyle(cstyle);\n}\n\nfunction setStyleBorders({ mode, style, color }) {\n  const { styles, selector, rows } = this;\n  const {\n    sri, sci, eri, eci,\n  } = selector.range;\n  const multiple = !this.isSignleSelected();\n  if (!multiple) {\n    if (mode === 'inside' || mode === 'horizontal' || mode === 'vertical') {\n      return;\n    }\n  }\n  if (mode === 'outside' && !multiple) {\n    setStyleBorder.call(this, sri, sci, {\n      top: [style, color], bottom: [style, color], left: [style, color], right: [style, color],\n    });\n  } else if (mode === 'none') {\n    selector.range.each((ri, ci) => {\n      const cell = rows.getCell(ri, ci);\n      if (cell && cell.style !== undefined) {\n        const ns = helper.cloneDeep(styles[cell.style]);\n        delete ns.border;\n        // ['bottom', 'top', 'left', 'right'].forEach((prop) => {\n        //   if (ns[prop]) delete ns[prop];\n        // });\n        cell.style = this.addStyle(ns);\n      }\n    });\n  } else if (mode === 'all' || mode === 'inside' || mode === 'outside'\n    || mode === 'horizontal' || mode === 'vertical') {\n    const merges = [];\n    for (let ri = sri; ri <= eri; ri += 1) {\n      for (let ci = sci; ci <= eci; ci += 1) {\n        // jump merges -- start\n        const mergeIndexes = [];\n        for (let ii = 0; ii < merges.length; ii += 1) {\n          const [mri, mci, rn, cn] = merges[ii];\n          if (ri === mri + rn + 1) mergeIndexes.push(ii);\n          if (mri <= ri && ri <= mri + rn) {\n            if (ci === mci) {\n              ci += cn + 1;\n              break;\n            }\n          }\n        }\n        mergeIndexes.forEach(it => merges.splice(it, 1));\n        if (ci > eci) break;\n        // jump merges -- end\n        const cell = rows.getCell(ri, ci);\n        let [rn, cn] = [0, 0];\n        if (cell && cell.merge) {\n          [rn, cn] = cell.merge;\n          merges.push([ri, ci, rn, cn]);\n        }\n        const mrl = rn > 0 && ri + rn === eri;\n        const mcl = cn > 0 && ci + cn === eci;\n        let bss = {};\n        if (mode === 'all') {\n          bss = {\n            bottom: [style, color],\n            top: [style, color],\n            left: [style, color],\n            right: [style, color],\n          };\n        } else if (mode === 'inside') {\n          if (!mcl && ci < eci) bss.right = [style, color];\n          if (!mrl && ri < eri) bss.bottom = [style, color];\n        } else if (mode === 'horizontal') {\n          if (!mrl && ri < eri) bss.bottom = [style, color];\n        } else if (mode === 'vertical') {\n          if (!mcl && ci < eci) bss.right = [style, color];\n        } else if (mode === 'outside' && multiple) {\n          if (sri === ri) bss.top = [style, color];\n          if (mrl || eri === ri) bss.bottom = [style, color];\n          if (sci === ci) bss.left = [style, color];\n          if (mcl || eci === ci) bss.right = [style, color];\n        }\n        if (Object.keys(bss).length > 0) {\n          setStyleBorder.call(this, ri, ci, bss);\n        }\n        ci += cn;\n      }\n    }\n  } else if (mode === 'top' || mode === 'bottom') {\n    for (let ci = sci; ci <= eci; ci += 1) {\n      if (mode === 'top') {\n        setStyleBorder.call(this, sri, ci, { top: [style, color] });\n        ci += rows.getCellMerge(sri, ci)[1];\n      }\n      if (mode === 'bottom') {\n        setStyleBorder.call(this, eri, ci, { bottom: [style, color] });\n        ci += rows.getCellMerge(eri, ci)[1];\n      }\n    }\n  } else if (mode === 'left' || mode === 'right') {\n    for (let ri = sri; ri <= eri; ri += 1) {\n      if (mode === 'left') {\n        setStyleBorder.call(this, ri, sci, { left: [style, color] });\n        ri += rows.getCellMerge(ri, sci)[0];\n      }\n      if (mode === 'right') {\n        setStyleBorder.call(this, ri, eci, { right: [style, color] });\n        ri += rows.getCellMerge(ri, eci)[0];\n      }\n    }\n  }\n}\n\nfunction getCellRowByY(y, scrollOffsety) {\n  const { rows } = this;\n  const fsh = this.freezeTotalHeight();\n  // console.log('y:', y, ', fsh:', fsh);\n  let inits = rows.height;\n  if (fsh + rows.height < y) inits -= scrollOffsety;\n  const [ri, top, height] = helper.rangeReduceIf(\n    0,\n    rows.len,\n    inits,\n    rows.height,\n    y,\n    i => rows.getHeight(i),\n  );\n  if (top <= 0) {\n    return { ri: -1, top: 0, height };\n  }\n  return { ri: ri - 1, top, height };\n}\n\nfunction getCellColByX(x, scrollOffsetx) {\n  const { cols } = this;\n  const fsw = this.freezeTotalWidth();\n  let inits = cols.indexWidth;\n  if (fsw + cols.indexWidth < x) inits -= scrollOffsetx;\n  const [ci, left, width] = helper.rangeReduceIf(\n    0,\n    cols.len,\n    inits,\n    cols.indexWidth,\n    x,\n    i => cols.getWidth(i),\n  );\n  if (left <= 0) {\n    return { ci: -1, left: 0, width: cols.indexWidth };\n  }\n  return { ci: ci - 1, left, width };\n}\n\nexport default class DataProxy {\n  constructor(name, settings) {\n    this.settings = helper.merge(defaultSettings, settings || {});\n    // save data begin\n    this.name = name || 'sheet';\n    this.freeze = [0, 0];\n    this.styles = []; // Array<Style>\n    this.merges = new Merges(); // [CellRange, ...]\n    this.rows = new Rows(this.settings.row);\n    this.cols = new Cols(this.settings.col);\n    // this.validations = [];\n    this.hyperlinks = {};\n    this.comments = {};\n    // save data end\n\n    // don't save object\n    this.selector = new Selector();\n    this.scroll = new Scroll();\n    this.history = new History();\n    this.clipboard = new Clipboard();\n    this.change = () => {};\n  }\n\n  canUndo() {\n    return this.history.canUndo();\n  }\n\n  canRedo() {\n    return this.history.canRedo();\n  }\n\n  undo() {\n    this.history.undo(this.getData(), (d) => {\n      this.setData(d);\n    });\n  }\n\n  redo() {\n    this.history.redo(this.getData(), (d) => {\n      this.setData(d);\n    });\n  }\n\n  copy() {\n    this.clipboard.copy(this.selector.range);\n  }\n\n  cut() {\n    this.clipboard.cut(this.selector.range);\n  }\n\n  // what: all | text | format\n  paste(what = 'all') {\n    // console.log('sIndexes:', sIndexes);\n    const { clipboard, selector } = this;\n    if (clipboard.isClear()) return;\n\n    this.changeData(() => {\n      if (clipboard.isCopy()) {\n        copyPaste.call(this, clipboard.range, selector.range, what);\n      } else if (clipboard.isCut()) {\n        cutPaste.call(this, clipboard.range, selector.range);\n      }\n    });\n  }\n\n  autofill(cellRange, what) {\n    this.changeData(() => {\n      copyPaste.call(this, this.selector.range, cellRange, what, true);\n    });\n  }\n\n  clearClipboard() {\n    this.clipboard.clear();\n  }\n\n  calSelectedRangeByEnd(ri, ci) {\n    const {\n      selector, rows, cols, merges,\n    } = this;\n    let {\n      sri, sci, eri, eci,\n    } = selector.range;\n    const cri = selector.ri;\n    const cci = selector.ci;\n    let [nri, nci] = [ri, ci];\n    if (ri < 0) nri = rows.len - 1;\n    if (ci < 0) nci = cols.len - 1;\n    // row index\n    if (nri <= cri) [sri, eri] = [nri, cri];\n    else eri = nri;\n    // col index\n    if (nci <= cci) [sci, eci] = [nci, cci];\n    else eci = nci;\n    selector.range = merges.union(new CellRange(\n      sri, sci, eri, eci,\n    ));\n    // console.log('selector.range:', selector.range);\n    return selector.range;\n  }\n\n  calSelectedRangeByStart(ri, ci) {\n    const {\n      selector, rows, cols, merges,\n    } = this;\n    let cellRange = merges.getFirstIncludes(ri, ci);\n    // console.log('cellRange:', cellRange, ri, ci, merges);\n    if (cellRange === null) {\n      cellRange = new CellRange(ri, ci, ri, ci);\n      if (ri === -1) {\n        cellRange.sri = 0;\n        cellRange.eri = rows.len - 1;\n      }\n      if (ci === -1) {\n        cellRange.sci = 0;\n        cellRange.eci = cols.len - 1;\n      }\n    }\n    selector.range = cellRange;\n    return cellRange;\n  }\n\n  setSelectedCellAttr(property, value) {\n    this.changeData(() => {\n      const { selector, styles, rows } = this;\n      if (property === 'merge') {\n        if (value) this.merge();\n        else this.unmerge();\n      } else if (property === 'border') {\n        setStyleBorders.call(this, value);\n      } else if (property === 'formula') {\n        const cell = rows.getCellOrNew(selector.ri, selector.ci);\n        cell.text = `=${value}()`;\n      } else {\n        selector.range.each((ri, ci) => {\n          const cell = rows.getCellOrNew(ri, ci);\n          let cstyle = {};\n          if (cell.style !== undefined) {\n            cstyle = helper.cloneDeep(styles[cell.style]);\n          }\n          if (property === 'format') {\n            cstyle.format = value;\n            cell.style = this.addStyle(cstyle);\n          } else if (property === 'font-bold' || property === 'font-italic'\n            || property === 'font-name' || property === 'font-size') {\n            const nfont = {};\n            nfont[property.split('-')[1]] = value;\n            cstyle.font = Object.assign(cstyle.font || {}, nfont);\n            cell.style = this.addStyle(cstyle);\n          } else if (property === 'strike' || property === 'textwrap'\n            || property === 'underline'\n            || property === 'align' || property === 'valign'\n            || property === 'color' || property === 'bgcolor') {\n            cstyle[property] = value;\n            cell.style = this.addStyle(cstyle);\n          }\n        });\n      }\n    });\n  }\n\n  setSelectedCellText(text, triggerChange = true) {\n    const { ri, ci } = this.selector;\n    this.setCellText(ri, ci, text, triggerChange);\n  }\n\n  getSelectedCell() {\n    const { ri, ci } = this.selector;\n    return this.rows.getCell(ri, ci);\n  }\n\n  xyInSelectedRect(x, y) {\n    const {\n      left, top, width, height,\n    } = this.getSelectedRect();\n    const x1 = x - this.cols.indexWidth;\n    const y1 = y - this.rows.height;\n    // console.log('x:', x, ',y:', y, 'left:', left, 'top:', top);\n    return x1 > left && x1 < (left + width)\n      && y1 > top && y1 < (top + height);\n  }\n\n  getSelectedRect() {\n    return this.getRect(this.selector.range);\n  }\n\n  getClipboardRect() {\n    const { clipboard } = this;\n    if (!clipboard.isClear()) {\n      return this.getRect(clipboard.range);\n    }\n    return { left: -100, top: -100 };\n  }\n\n  getRect(cellRange) {\n    const { scroll, rows, cols } = this;\n    const {\n      sri, sci, eri, eci,\n    } = cellRange;\n    // console.log('sri:', sri, ',sci:', sci, ', eri:', eri, ', eci:', eci);\n    // no selector\n    if (sri < 0 && sci < 0) {\n      return {\n        left: 0, l: 0, top: 0, t: 0, scroll,\n      };\n    }\n    const { left, top } = this.cellPosition(sri, sci);\n    const height = rows.sumHeight(sri, eri + 1);\n    const width = cols.sumWidth(sci, eci + 1);\n    // console.log('sri:', sri, ', sci:', sci, ', eri:', eri, ', eci:', eci);\n    let left0 = left - scroll.x;\n    let top0 = top - scroll.y;\n    const fsh = this.freezeTotalHeight();\n    const fsw = this.freezeTotalWidth();\n    if (fsw > 0 && fsw > left) {\n      left0 = left;\n    }\n    if (fsh > 0 && fsh > top) {\n      top0 = top;\n    }\n    return {\n      l: left,\n      t: top,\n      left: left0,\n      top: top0,\n      height,\n      width,\n      scroll,\n    };\n  }\n\n  getCellRectByXY(x, y) {\n    const {\n      scroll, merges, rows, cols,\n    } = this;\n    let { ri, top, height } = getCellRowByY.call(this, y, scroll.y);\n    let { ci, left, width } = getCellColByX.call(this, x, scroll.x);\n    if (ci === -1) {\n      width = cols.totalWidth();\n    }\n    if (ri === -1) {\n      height = rows.totalHeight();\n    }\n    if (ri >= 0 || ci >= 0) {\n      const merge = merges.getFirstIncludes(ri, ci);\n      if (merge) {\n        ri = merge.sri;\n        ci = merge.sci;\n        ({\n          left, top, width, height,\n        } = this.cellRect(ri, ci));\n      }\n    }\n    return {\n      ri, ci, left, top, width, height,\n    };\n  }\n\n  isSignleSelected() {\n    const {\n      sri, sci, eri, eci,\n    } = this.selector.range;\n    const cell = this.getCell(sri, sci);\n    if (cell && cell.merge) {\n      const [rn, cn] = cell.merge;\n      if (sri + rn === eri && sci + cn === eci) return true;\n    }\n    return !this.selector.multiple();\n  }\n\n  canUnmerge() {\n    const {\n      sri, sci, eri, eci,\n    } = this.selector.range;\n    const cell = this.getCell(sri, sci);\n    if (cell && cell.merge) {\n      const [rn, cn] = cell.merge;\n      if (sri + rn === eri && sci + cn === eci) return true;\n    }\n    return false;\n  }\n\n  merge() {\n    const { selector, rows } = this;\n    if (this.isSignleSelected()) return;\n    const [rn, cn] = selector.size();\n    // console.log('merge:', rn, cn);\n    if (rn > 1 || cn > 1) {\n      const { sri, sci } = selector.range;\n      this.changeData(() => {\n        const cell = rows.getCellOrNew(sri, sci);\n        cell.merge = [rn - 1, cn - 1];\n        this.merges.add(selector.range);\n        // delete merge cells\n        this.rows.deleteCells(selector.range);\n        // console.log('cell:', cell, this.d);\n        this.rows.setCell(sri, sci, cell);\n      });\n    }\n  }\n\n  unmerge() {\n    const { selector } = this;\n    if (!this.isSignleSelected()) return;\n    const { sri, sci } = selector.range;\n    this.changeData(() => {\n      this.rows.deleteCell(sri, sci, 'merge');\n      this.merges.deleteWithin(selector.range);\n    });\n  }\n\n  deleteCell(what = 'all') {\n    const { selector } = this;\n    this.changeData(() => {\n      this.rows.deleteCells(selector.range, what);\n      if (what === 'all' || what === 'format') {\n        this.merges.deleteWithin(selector.range);\n      }\n    });\n  }\n\n  // type: row | column\n  insert(type, n = 1) {\n    this.changeData(() => {\n      const { sri, sci } = this.selector.range;\n      const { rows, merges, cols } = this;\n      let si = sri;\n      if (type === 'row') {\n        rows.insert(sri, n);\n      } else if (type === 'column') {\n        rows.insertColumn(sci, n);\n        si = sci;\n        cols.len += 1;\n      }\n      merges.shift(type, si, n, (ri, ci, rn, cn) => {\n        const cell = rows.getCell(ri, ci);\n        cell.merge[0] += rn;\n        cell.merge[1] += cn;\n      });\n    });\n  }\n\n  // type: row | column\n  delete(type) {\n    this.changeData(() => {\n      const {\n        rows, merges, selector, cols,\n      } = this;\n      const { range } = selector;\n      const {\n        sri, sci, eri, eci,\n      } = selector.range;\n      const [rsize, csize] = selector.range.size();\n      let si = sri;\n      let size = rsize;\n      if (type === 'row') {\n        rows.delete(sri, eri);\n      } else if (type === 'column') {\n        rows.deleteColumn(sci, eci);\n        si = range.sci;\n        size = csize;\n        cols.len -= 1;\n      }\n      // console.log('type:', type, ', si:', si, ', size:', size);\n      merges.shift(type, si, -size, (ri, ci, rn, cn) => {\n        // console.log('ri:', ri, ', ci:', ci, ', rn:', rn, ', cn:', cn);\n        const cell = rows.getCell(ri, ci);\n        cell.merge[0] += rn;\n        cell.merge[1] += cn;\n        if (cell.merge[0] === 0 && cell.merge[1] === 0) {\n          delete cell.merge;\n        }\n      });\n    });\n  }\n\n  scrollx(x, cb) {\n    const { scroll, freeze, cols } = this;\n    const [, fci] = freeze;\n    const [\n      ci, left, width,\n    ] = helper.rangeReduceIf(fci, cols.len, 0, 0, x, i => cols.getWidth(i));\n    // console.log('fci:', fci, ', ci:', ci);\n    let x1 = left;\n    if (x > 0) x1 += width;\n    if (scroll.x !== x1) {\n      scroll.ci = x > 0 ? ci - fci : 0;\n      scroll.x = x1;\n      cb();\n    }\n  }\n\n  scrolly(y, cb) {\n    const { scroll, freeze, rows } = this;\n    const [fri] = freeze;\n    const [\n      ri, top, height,\n    ] = helper.rangeReduceIf(fri, rows.len, 0, 0, y, i => rows.getHeight(i));\n    let y1 = top;\n    if (y > 0) y1 += height;\n    if (scroll.y !== y1) {\n      scroll.ri = y > 0 ? ri - fri : 0;\n      scroll.y = y1;\n      cb();\n    }\n  }\n\n  cellRect(ri, ci) {\n    const { rows, cols } = this;\n    const { left, top } = this.cellPosition(ri, ci);\n    const cell = rows.getCell(ri, ci);\n    let width = cols.getWidth(ci);\n    let height = rows.getHeight(ri);\n    if (cell !== null) {\n      if (cell.merge) {\n        const [rn, cn] = cell.merge;\n        // console.log('cell.merge:', cell.merge);\n        if (rn > 0) {\n          for (let i = 1; i <= rn; i += 1) {\n            height += rows.getHeight(ri + i);\n          }\n        }\n        if (cn > 0) {\n          for (let i = 1; i <= cn; i += 1) {\n            width += cols.getWidth(ci + i);\n          }\n        }\n      }\n    }\n    // console.log('data:', this.d);\n    return {\n      left, top, width, height, cell,\n    };\n  }\n\n  cellPosition(ri, ci) {\n    const { cols, rows } = this;\n    const left = cols.sumWidth(0, ci);\n    const top = rows.sumHeight(0, ri);\n    return {\n      left, top,\n    };\n  }\n\n  getCell(ri, ci) {\n    return this.rows.getCell(ri, ci);\n  }\n\n  getCellTextOrDefault(ri, ci) {\n    const cell = this.getCell(ri, ci);\n    return (cell && cell.text) ? cell.text : '';\n  }\n\n  getCellStyle(ri, ci) {\n    const cell = this.getCell(ri, ci);\n    if (cell && cell.style !== undefined) {\n      return this.styles[cell.style];\n    }\n    return null;\n  }\n\n  getCellStyleOrDefault(ri, ci) {\n    const { styles, rows } = this;\n    const cell = rows.getCell(ri, ci);\n    const cellStyle = (cell && cell.style !== undefined) ? styles[cell.style] : {};\n    return helper.merge(this.defaultStyle(), cellStyle);\n  }\n\n  getSelectedCellStyle() {\n    const { ri, ci } = this.selector;\n    return this.getCellStyleOrDefault(ri, ci);\n  }\n\n  setCellText(ri, ci, text, triggerChange = true) {\n    if (triggerChange) {\n      this.changeData(() => {\n        this.rows.setCellText(ri, ci, text);\n      });\n    } else {\n      this.rows.setCellText(ri, ci, text);\n    }\n  }\n\n  freezeIsActive() {\n    const [ri, ci] = this.freeze;\n    return ri > 0 || ci > 0;\n  }\n\n  setFreeze(ri, ci) {\n    this.changeData(() => {\n      this.freeze = [ri, ci];\n    });\n  }\n\n  freezeTotalWidth() {\n    return this.cols.sumWidth(0, this.freeze[1]);\n  }\n\n  freezeTotalHeight() {\n    return this.rows.sumHeight(0, this.freeze[0]);\n  }\n\n  setRowHeight(ri, height) {\n    this.changeData(() => {\n      this.rows.setHeight(ri, height);\n    });\n  }\n\n  setColWidth(ci, width) {\n    this.changeData(() => {\n      this.cols.setWidth(ci, width);\n    });\n  }\n\n  viewHeight() {\n    const { view, showToolbar } = this.settings;\n    let h = view.height();\n    if (showToolbar) {\n      h -= toolbarHeight;\n    }\n    return h;\n  }\n\n  viewWidth() {\n    return this.settings.view.width();\n  }\n\n  freezeViewRange() {\n    const [ri, ci] = this.freeze;\n    return new CellRange(0, 0, ri, ci);\n  }\n\n  viewRange() {\n    const { scroll, rows, cols } = this;\n    const { ri, ci } = scroll;\n    let [x, y] = [0, 0];\n    let [eri, eci] = [rows.len, cols.len];\n    for (let i = ri; i < rows.len; i += 1) {\n      y += rows.getHeight(i);\n      eri = i;\n      if (y > this.viewHeight()) break;\n    }\n    for (let j = ci; j < cols.len; j += 1) {\n      x += cols.getWidth(j);\n      eci = j;\n      if (x > this.viewWidth()) break;\n    }\n    // console.log(ri, ci, eri, eci);\n    return new CellRange(ri, ci, eri, eci);\n  }\n\n  eachMergesInView(viewRange, cb) {\n    this.merges.filterIntersects(viewRange)\n      .forEach(it => cb(it));\n  }\n\n  rowEach(min, max, cb) {\n    let y = 0;\n    const { rows } = this;\n    // console.log('min:', min, ', max:', max, ', scroll:', scroll);\n    for (let i = min; i <= max; i += 1) {\n      const rowHeight = rows.getHeight(i);\n      cb(i, y, rowHeight);\n      y += rowHeight;\n      if (y > this.viewHeight()) break;\n    }\n  }\n\n  colEach(min, max, cb) {\n    let x = 0;\n    const { cols } = this;\n    for (let i = min; i <= max; i += 1) {\n      const colWidth = cols.getWidth(i);\n      cb(i, x, colWidth);\n      x += colWidth;\n      if (x > this.viewWidth()) break;\n    }\n  }\n\n  defaultStyle() {\n    return this.settings.style;\n  }\n\n  addStyle(nstyle) {\n    const { styles } = this;\n    // console.log('old.styles:', styles, nstyle);\n    for (let i = 0; i < styles.length; i += 1) {\n      const style = styles[i];\n      if (helper.equals(style, nstyle)) return i;\n    }\n    styles.push(nstyle);\n    return styles.length - 1;\n  }\n\n  changeData(cb) {\n    this.history.add(this.getData());\n    cb();\n    this.change(this.getData());\n  }\n\n  setData(d) {\n    Object.keys(d).forEach((property) => {\n      if (property === 'merges' || property === 'rows' || property === 'cols') {\n        this[property].setData(d[property]);\n      } else if (property === 'freeze') {\n        this.freeze = expr2xy(d[property]);\n      } else if (d[property] !== undefined) {\n        this[property] = d[property];\n      }\n    });\n    return this;\n  }\n\n  getData() {\n    const {\n      name, freeze, styles, merges, rows, cols,\n    } = this;\n    return {\n      name,\n      freeze: xy2expr(...freeze),\n      styles,\n      merges: merges.getData(),\n      rows: rows.getData(),\n      cols: cols.getData(),\n    };\n  }\n}\n","export function bind(target, name, fn) {\n  target.addEventListener(name, fn);\n}\nexport function unbind(target, name, fn) {\n  target.removeEventListener(name, fn);\n}\nexport function mouseMoveUp(target, movefunc, upfunc) {\n  bind(target, 'mousemove', movefunc);\n  const t = target;\n  t.xEvtUp = (evt) => {\n    // console.log('mouseup>>>');\n    unbind(target, 'mousemove', movefunc);\n    unbind(target, 'mouseup', target.xEvtUp);\n    upfunc(evt);\n  };\n  bind(target, 'mouseup', target.xEvtUp);\n}\n\nfunction calTouchDirection(spanx, spany, evt, cb) {\n  let direction = '';\n  if (Math.abs(spanx) > Math.abs(spany)) {\n    // horizontal\n    direction = spanx > 0 ? 'right' : 'left';\n  } else {\n    // vertical\n    direction = spany > 0 ? 'down' : 'up';\n  }\n  cb(direction, spany, evt);\n}\n// cb = (direction, distance) => {}\nexport function bindTouch(target, { move, end }) {\n  let startx = 0;\n  let starty = 0;\n  bind(target, 'touchstart', (evt) => {\n    const { pageX, pageY } = evt.touches[0];\n    startx = pageX;\n    starty = pageY;\n  });\n  bind(target, 'touchmove', (evt) => {\n    if (!move) return;\n    const { pageX, pageY } = evt.changedTouches[0];\n    const spanx = pageX - startx;\n    const spany = pageY - starty;\n    // console.log('spanx:', spanx, ', spany:', spany);\n    calTouchDirection(spanx, spany, evt, move);\n    startx = pageX;\n    starty = pageY;\n    evt.preventDefault();\n  });\n  bind(target, 'touchend', (evt) => {\n    if (!end) return;\n    const { pageX, pageY } = evt.changedTouches[0];\n    const spanx = pageX - startx;\n    const spany = pageY - starty;\n    calTouchDirection(spanx, spany, evt, end);\n  });\n}\n","/* global window */\nexport const cssPrefix = 'x-spreadsheet';\nexport const dpr = window.devicePixelRatio || 1;\nexport default {\n  cssPrefix,\n  dpr,\n};\n","/* global window */\nimport { h } from './element';\nimport { mouseMoveUp } from '../event';\nimport { cssPrefix } from '../config';\n\nexport default class Resizer {\n  constructor(vertical = false, minDistance) {\n    this.moving = false;\n    this.vertical = vertical;\n    this.el = h('div', `${cssPrefix}-resizer ${vertical ? 'vertical' : 'horizontal'}`).children(\n      this.hoverEl = h('div', `${cssPrefix}-resizer-hover`)\n        .on('mousedown.stop', evt => this.mousedownHandler(evt)),\n      this.lineEl = h('div', `${cssPrefix}-resizer-line`).hide(),\n    ).hide();\n    // cell rect\n    this.cRect = null;\n    this.finishedFn = null;\n    this.minDistance = minDistance;\n  }\n\n  // rect : {top, left, width, height}\n  // line : {width, height}\n  show(rect, line) {\n    const {\n      moving, vertical, hoverEl, lineEl, el,\n    } = this;\n    if (moving) return;\n    this.cRect = rect;\n    const {\n      left, top, width, height,\n    } = rect;\n    el.offset({\n      left: vertical ? left + width - 5 : left,\n      top: vertical ? top : top + height - 5,\n    }).show();\n    hoverEl.offset({\n      width: vertical ? 5 : width,\n      height: vertical ? height : 5,\n    });\n    lineEl.offset({\n      width: vertical ? 0 : line.width,\n      height: vertical ? line.height : 0,\n    });\n  }\n\n  hide() {\n    this.el.offset({\n      left: 0,\n      top: 0,\n    }).hide();\n  }\n\n  mousedownHandler(evt) {\n    let startEvt = evt;\n    const {\n      el, lineEl, cRect, vertical, minDistance,\n    } = this;\n    let distance = vertical ? cRect.width : cRect.height;\n    // console.log('distance:', distance);\n    lineEl.show();\n    mouseMoveUp(window, (e) => {\n      this.moving = true;\n      if (startEvt !== null && e.buttons === 1) {\n        // console.log('top:', top, ', left:', top, ', cRect:', cRect);\n        if (vertical) {\n          distance += e.movementX;\n          if (distance > minDistance) {\n            el.css('left', `${cRect.left + distance}px`);\n          }\n        } else {\n          distance += e.movementY;\n          if (distance > minDistance) {\n            el.css('top', `${cRect.top + distance}px`);\n          }\n        }\n        startEvt = e;\n      }\n    }, () => {\n      startEvt = null;\n      lineEl.hide();\n      this.moving = false;\n      this.hide();\n      if (this.finishedFn) {\n        if (distance < minDistance) distance = minDistance;\n        this.finishedFn(cRect, distance);\n      }\n    });\n  }\n}\n","import { h } from './element';\nimport { cssPrefix } from '../config';\n\nexport default class Scrollbar {\n  constructor(vertical) {\n    this.vertical = vertical;\n    this.moveFn = null;\n    this.el = h('div', `${cssPrefix}-scrollbar ${vertical ? 'vertical' : 'horizontal'}`)\n      .child(this.contentEl = h('div', ''))\n      .on('mousemove.stop', () => {})\n      .on('scroll.stop', (evt) => {\n        const { scrollTop, scrollLeft } = evt.target;\n        // console.log('scrollTop:', scrollTop);\n        if (this.moveFn) {\n          this.moveFn(this.vertical ? scrollTop : scrollLeft, evt);\n        }\n        // console.log('evt:::', evt);\n      });\n  }\n\n  move(v) {\n    this.el.scroll(v);\n    return this;\n  }\n\n  scroll() {\n    return this.el.scroll();\n  }\n\n  set(distance, contentDistance) {\n    const d = distance - 1;\n    // console.log('distance:', distance, ', contentDistance:', contentDistance);\n    if (contentDistance > d) {\n      const cssKey = this.vertical ? 'height' : 'width';\n      this.el.css(cssKey, `${d}px`).show();\n      this.contentEl\n        .css(this.vertical ? 'width' : 'height', '1px')\n        .css(cssKey, `${contentDistance}px`);\n    } else {\n      this.el.hide();\n    }\n    return this;\n  }\n}\n","import { h } from './element';\nimport { cssPrefix } from '../config';\nimport { CellRange } from '../core/cell_range';\n\nconst selectorHeightBorderWidth = 2 * 2 - 1;\nlet startZIndex = 10;\n\nclass SelectorElement {\n  constructor() {\n    this.cornerEl = h('div', `${cssPrefix}-selector-corner`);\n    this.areaEl = h('div', `${cssPrefix}-selector-area`)\n      .child(this.cornerEl).hide();\n    this.clipboardEl = h('div', `${cssPrefix}-selector-clipboard`).hide();\n    this.autofillEl = h('div', `${cssPrefix}-selector-autofill`).hide();\n    this.el = h('div', `${cssPrefix}-selector`)\n      .css('z-index', `${startZIndex}`)\n      .children(this.areaEl, this.clipboardEl, this.autofillEl)\n      .hide();\n    startZIndex += 1;\n  }\n\n  setOffset(v) {\n    this.el.offset(v).show();\n    return this;\n  }\n\n  hide() {\n    this.el.hide();\n    return this;\n  }\n\n  setAreaOffset(v) {\n    const {\n      left, top, width, height,\n    } = v;\n    this.areaEl.offset({\n      width: width - selectorHeightBorderWidth + 0.8,\n      height: height - selectorHeightBorderWidth + 0.8,\n      left: left - 0.8,\n      top: top - 0.8,\n    }).show();\n  }\n\n  setClipboardOffset(v) {\n    const {\n      left, top, width, height,\n    } = v;\n    this.clipboardEl.offset({\n      left,\n      top,\n      width: width - 5,\n      height: height - 5,\n    });\n  }\n\n  showAutofill(v) {\n    const {\n      left, top, width, height,\n    } = v;\n    this.autofillEl.offset({\n      width: width - selectorHeightBorderWidth,\n      height: height - selectorHeightBorderWidth,\n      left,\n      top,\n    }).show();\n  }\n\n  hideAutofill() {\n    this.autofillEl.hide();\n  }\n\n  showClipboard() {\n    this.clipboardEl.show();\n  }\n\n  hideClipboard() {\n    this.clipboardEl.hide();\n  }\n}\n\nfunction calBRAreaOffset(offset) {\n  const { data } = this;\n  const {\n    left, top, width, height, scroll, l, t,\n  } = offset;\n  const ftwidth = data.freezeTotalWidth();\n  const ftheight = data.freezeTotalHeight();\n  let left0 = left - ftwidth;\n  if (ftwidth > l) left0 -= scroll.x;\n  let top0 = top - ftheight;\n  if (ftheight > t) top0 -= scroll.y;\n  return {\n    left: left0,\n    top: top0,\n    width,\n    height,\n  };\n}\n\nfunction calTAreaOffset(offset) {\n  const { data } = this;\n  const {\n    left, width, height, l, t, scroll,\n  } = offset;\n  const ftwidth = data.freezeTotalWidth();\n  let left0 = left - ftwidth;\n  if (ftwidth > l) left0 -= scroll.x;\n  return {\n    left: left0, top: t, width, height,\n  };\n}\n\nfunction calLAreaOffset(offset) {\n  const { data } = this;\n  const {\n    top, width, height, l, t, scroll,\n  } = offset;\n  const ftheight = data.freezeTotalHeight();\n  let top0 = top - ftheight;\n  // console.log('ftheight:', ftheight, ', t:', t);\n  if (ftheight > t) top0 -= scroll.y;\n  return {\n    left: l, top: top0, width, height,\n  };\n}\n\nfunction setBRAreaOffset(offset) {\n  const { br } = this;\n  br.setAreaOffset(calBRAreaOffset.call(this, offset));\n}\n\nfunction setTLAreaOffset(offset) {\n  const { tl } = this;\n  tl.setAreaOffset(offset);\n}\n\nfunction setTAreaOffset(offset) {\n  const { t } = this;\n  t.setAreaOffset(calTAreaOffset.call(this, offset));\n}\n\nfunction setLAreaOffset(offset) {\n  const { l } = this;\n  l.setAreaOffset(calLAreaOffset.call(this, offset));\n}\n\nfunction setLClipboardOffset(offset) {\n  const { l } = this;\n  l.setClipboardOffset(calLAreaOffset.call(this, offset));\n}\n\nfunction setBRClipboardOffset(offset) {\n  const { br } = this;\n  br.setClipboardOffset(calBRAreaOffset.call(this, offset));\n}\n\nfunction setTLClipboardOffset(offset) {\n  const { tl } = this;\n  tl.setClipboardOffset(offset);\n}\n\nfunction setTClipboardOffset(offset) {\n  const { t } = this;\n  t.setClipboardOffset(calTAreaOffset.call(this, offset));\n}\n\nfunction setAllAreaOffset(offset) {\n  setBRAreaOffset.call(this, offset);\n  setTLAreaOffset.call(this, offset);\n  setTAreaOffset.call(this, offset);\n  setLAreaOffset.call(this, offset);\n}\n\nfunction setAllClipboardOffset(offset) {\n  setBRClipboardOffset.call(this, offset);\n  setTLClipboardOffset.call(this, offset);\n  setTClipboardOffset.call(this, offset);\n  setLClipboardOffset.call(this, offset);\n}\n\nexport default class Selector {\n  constructor(data) {\n    this.data = data;\n    this.br = new SelectorElement();\n    this.t = new SelectorElement();\n    this.l = new SelectorElement();\n    this.tl = new SelectorElement();\n    this.br.el.show();\n    this.offset = null;\n    this.areaOffset = null;\n    this.indexes = null;\n    this.range = null;\n    this.arange = null;\n    this.el = h('div', `${cssPrefix}-selectors`)\n      .children(\n        this.tl.el,\n        this.t.el,\n        this.l.el,\n        this.br.el,\n      ).hide();\n\n    startZIndex += 1;\n  }\n\n  hide() {\n    this.el.hide();\n  }\n\n  resetOffset() {\n    const {\n      data, tl, t, l, br,\n    } = this;\n    const freezeHeight = data.freezeTotalHeight();\n    const freezeWidth = data.freezeTotalWidth();\n    if (freezeHeight > 0 || freezeWidth > 0) {\n      tl.setOffset({ width: freezeWidth, height: freezeHeight });\n      t.setOffset({ left: freezeWidth, height: freezeHeight });\n      l.setOffset({ top: freezeHeight, width: freezeWidth });\n      br.setOffset({ left: freezeWidth, top: freezeHeight });\n    } else {\n      tl.hide();\n      t.hide();\n      l.hide();\n      br.setOffset({ left: 0, top: 0 });\n    }\n  }\n\n  resetAreaOffset() {\n    // console.log('offset:', offset);\n    const offset = this.data.getSelectedRect();\n    const coffset = this.data.getClipboardRect();\n    setAllAreaOffset.call(this, offset);\n    setAllClipboardOffset.call(this, coffset);\n    this.resetOffset();\n  }\n\n  resetBRTAreaOffset() {\n    const offset = this.data.getSelectedRect();\n    const coffset = this.data.getClipboardRect();\n    setBRAreaOffset.call(this, offset);\n    setTAreaOffset.call(this, offset);\n    setBRClipboardOffset.call(this, coffset);\n    setTClipboardOffset.call(this, coffset);\n    this.resetOffset();\n  }\n\n  resetBRLAreaOffset() {\n    const offset = this.data.getSelectedRect();\n    const coffset = this.data.getClipboardRect();\n    setBRAreaOffset.call(this, offset);\n    setLAreaOffset.call(this, offset);\n    setBRClipboardOffset.call(this, coffset);\n    setLClipboardOffset.call(this, coffset);\n    this.resetOffset();\n  }\n\n  set(ri, ci, indexesUpdated = true) {\n    const { data } = this;\n    const cellRange = data.calSelectedRangeByStart(ri, ci);\n    const { sri, sci } = cellRange;\n    if (indexesUpdated) {\n      let [cri, cci] = [ri, ci];\n      if (ri < 0) cri = 0;\n      if (ci < 0) cci = 0;\n      data.selector.setIndexes(cri, cci);\n      this.indexes = [cri, cci];\n    }\n\n    this.moveIndexes = [sri, sci];\n    // this.sIndexes = sIndexes;\n    // this.eIndexes = eIndexes;\n    this.range = cellRange;\n    this.resetAreaOffset();\n    this.el.show();\n  }\n\n  setEnd(ri, ci) {\n    const { data } = this;\n    this.range = data.calSelectedRangeByEnd(ri, ci);\n    // this.sIndexes = sIndexes;\n    // this.eIndexes = eIndexes;\n    this.reset();\n  }\n\n  reset() {\n    setAllAreaOffset.call(this, this.data.getSelectedRect());\n  }\n\n  showAutofill(ri, ci) {\n    if (ri === -1 && ci === -1) return;\n    // console.log('ri:', ri, ', ci:', ci);\n    // const [sri, sci] = this.sIndexes;\n    // const [eri, eci] = this.eIndexes;\n    const {\n      sri, sci, eri, eci,\n    } = this.range;\n    const [nri, nci] = [ri, ci];\n    // const rn = eri - sri;\n    // const cn = eci - sci;\n    const srn = sri - ri;\n    const scn = sci - ci;\n    const ern = eri - ri;\n    const ecn = eci - ci;\n    if (scn > 0) {\n      // left\n      // console.log('left');\n      this.arange = new CellRange(sri, nci, eri, sci - 1);\n      // this.saIndexes = [sri, nci];\n      // this.eaIndexes = [eri, sci - 1];\n      // data.calRangeIndexes2(\n    } else if (srn > 0) {\n      // top\n      // console.log('top');\n      // nri = sri;\n      this.arange = new CellRange(nri, sci, sri - 1, eci);\n      // this.saIndexes = [nri, sci];\n      // this.eaIndexes = [sri - 1, eci];\n    } else if (ecn < 0) {\n      // right\n      // console.log('right');\n      // nci = eci;\n      this.arange = new CellRange(sri, eci + 1, eri, nci);\n      // this.saIndexes = [sri, eci + 1];\n      // this.eaIndexes = [eri, nci];\n    } else if (ern < 0) {\n      // bottom\n      // console.log('bottom');\n      // nri = eri;\n      this.arange = new CellRange(eri + 1, sci, nri, eci);\n      // this.saIndexes = [eri + 1, sci];\n      // this.eaIndexes = [nri, eci];\n    } else {\n      // console.log('else:');\n      this.arange = null;\n      // this.saIndexes = null;\n      // this.eaIndexes = null;\n      return;\n    }\n    if (this.arange !== null) {\n      // console.log(this.saIndexes, ':', this.eaIndexes);\n      const offset = this.data.getRect(this.arange);\n      offset.width += 2;\n      offset.height += 2;\n      const {\n        br, l, t, tl,\n      } = this;\n      br.showAutofill(calBRAreaOffset.call(this, offset));\n      l.showAutofill(calLAreaOffset.call(this, offset));\n      t.showAutofill(calTAreaOffset.call(this, offset));\n      tl.showAutofill(offset);\n    }\n  }\n\n  hideAutofill() {\n    ['br', 'l', 't', 'tl'].forEach((property) => {\n      this[property].hideAutofill();\n    });\n  }\n\n  showClipboard() {\n    const coffset = this.data.getClipboardRect();\n    setAllClipboardOffset.call(this, coffset);\n    ['br', 'l', 't', 'tl'].forEach((property) => {\n      this[property].showClipboard();\n    });\n  }\n\n  hideClipboard() {\n    ['br', 'l', 't', 'tl'].forEach((property) => {\n      this[property].hideClipboard();\n    });\n  }\n}\n","/* global window */\nimport { h } from './element';\nimport { bind } from '../event';\nimport { cssPrefix } from '../config';\n\nfunction inputMovePrev(evt) {\n  evt.preventDefault();\n  evt.stopPropagation();\n  const { filterItems } = this;\n  if (filterItems.length <= 0) return;\n  filterItems[this.itemIndex].toggle();\n  this.itemIndex -= 1;\n  if (this.itemIndex < 0) {\n    this.itemIndex = filterItems.length - 1;\n  }\n  filterItems[this.itemIndex].toggle();\n}\n\nfunction inputMoveNext(evt) {\n  evt.stopPropagation();\n  const { filterItems } = this;\n  if (filterItems.length <= 0) return;\n  filterItems[this.itemIndex].toggle();\n  this.itemIndex += 1;\n  if (this.itemIndex > filterItems.length - 1) {\n    this.itemIndex = 0;\n  }\n  filterItems[this.itemIndex].toggle();\n}\n\nfunction inputEnter(evt) {\n  evt.preventDefault();\n  const { filterItems } = this;\n  if (filterItems.length <= 0) return;\n  evt.stopPropagation();\n  filterItems[this.itemIndex].el.click();\n  this.hide();\n}\n\nfunction inputKeydownHandler(evt) {\n  const { keyCode } = evt;\n  if (evt.ctrlKey) {\n    evt.stopPropagation();\n  }\n  switch (keyCode) {\n    case 37: // left\n      evt.stopPropagation();\n      break;\n    case 38: // up\n      inputMovePrev.call(this, evt);\n      break;\n    case 39: // right\n      evt.stopPropagation();\n      break;\n    case 40: // down\n      inputMoveNext.call(this, evt);\n      break;\n    case 13: // enter\n      inputEnter.call(this, evt);\n      break;\n    case 9:\n      inputEnter.call(this, evt);\n      break;\n    default:\n      evt.stopPropagation();\n      break;\n  }\n}\n\nexport default class Suggest {\n  constructor(items, itemClick) {\n    this.filterItems = [];\n    this.items = items;\n    this.el = h('div', `${cssPrefix}-suggest`).hide();\n    this.itemClick = itemClick;\n    this.itemIndex = 0;\n  }\n\n  setOffset(v) {\n    this.el.cssRemoveKeys('top', 'bottom')\n      .offset(v);\n  }\n\n  hide() {\n    this.filterItems = [];\n    this.itemIndex = 0;\n    this.el.hide();\n  }\n\n  search(word) {\n    let { items } = this;\n    if (!/^\\s*$/.test(word)) {\n      items = items.filter(it => it.key.startsWith(word.toUpperCase()));\n    }\n    items = items.map((it) => {\n      const item = h('div', `${cssPrefix}-item`)\n        .child(it.key)\n        .on('click.stop', () => {\n          this.itemClick(it);\n          this.hide();\n        });\n      item.child(h('div', 'label').html(it.title || it.label));\n      return item;\n    });\n    this.filterItems = items;\n    if (items.length <= 0) {\n      return;\n    }\n    items[0].toggle();\n    this.el.html('').children(...items).show();\n  }\n\n  bindInputEvents(input) {\n    input.on('keydown', evt => inputKeydownHandler.call(this, evt));\n    bind(window, 'click', (evt) => {\n      if (this.el.contains(evt.target)) return;\n      this.hide();\n    });\n  }\n}\n","//* global window */\nimport { h } from './element';\nimport Suggest from './suggest';\nimport { cssPrefix } from '../config';\n// import { mouseMoveUp } from '../event';\n\nfunction resetTextareaSize() {\n  if (!/^\\s*$/.test(this.inputText)) {\n    const {\n      textlineEl, textEl, areaOffset,\n    } = this;\n    const tlineWidth = textlineEl.offset().width + 9;\n    const maxWidth = this.viewFn().width - areaOffset.left - 9;\n    // console.log('tlineWidth:', tlineWidth, ':', maxWidth);\n    if (tlineWidth > areaOffset.width) {\n      let twidth = tlineWidth;\n      if (tlineWidth > maxWidth) {\n        twidth = maxWidth;\n        let h1 = parseInt(tlineWidth / maxWidth, 10);\n        h1 += (tlineWidth % maxWidth) > 0 ? 1 : 0;\n        h1 *= this.rowHeight;\n        if (h1 > areaOffset.height) {\n          textEl.css('height', `${h1}px`);\n        }\n      }\n      textEl.css('width', `${twidth}px`);\n    }\n  }\n}\n\nfunction inputEventHandler(evt) {\n  const v = evt.target.value;\n  // console.log(evt, 'v:', v);\n  this.inputText = v;\n  const start = v.lastIndexOf('=');\n  const { suggest, textlineEl } = this;\n  if (start !== -1) {\n    suggest.search(v.substring(start + 1));\n  } else {\n    suggest.hide();\n  }\n  textlineEl.html(v);\n  resetTextareaSize.call(this);\n}\n\nfunction setTextareaRange(position) {\n  const { el } = this.textEl;\n  setTimeout(() => {\n    el.focus();\n    el.setSelectionRange(position, position);\n  }, 0);\n}\n\nfunction setText(text, position) {\n  const { textEl, textlineEl } = this;\n  // firefox bug\n  textEl.el.blur();\n\n  textEl.val(text);\n  textlineEl.html(text);\n  setTextareaRange.call(this, position);\n}\n\nfunction suggestItemClick(it) {\n  const { inputText } = this;\n  const start = inputText.lastIndexOf('=');\n  const sit = inputText.substring(0, start + 1);\n  let eit = inputText.substring(start + 1);\n  if (eit.indexOf(')') !== -1) {\n    eit = eit.substring(eit.indexOf(')'));\n  } else {\n    eit = '';\n  }\n  this.inputText = `${sit + it.key}(`;\n  // console.log('inputText:', this.inputText);\n  const position = this.inputText.length;\n  this.inputText += `)${eit}`;\n  setText.call(this, this.inputText, position);\n}\n\nexport default class Editor {\n  constructor(formulas, viewFn, rowHeight) {\n    this.viewFn = viewFn;\n    this.rowHeight = rowHeight;\n    this.suggest = new Suggest(formulas, (it) => {\n      suggestItemClick.call(this, it);\n    });\n    this.areaEl = h('div', `${cssPrefix}-editor-area`)\n      .children(\n        this.textEl = h('textarea', '')\n          .on('input', evt => inputEventHandler.call(this, evt)),\n        this.textlineEl = h('div', 'textline'),\n        this.suggest.el,\n      )\n      .on('mousemove.stop', () => {})\n      .on('mousedown.stop', () => {});\n    this.el = h('div', `${cssPrefix}-editor`)\n      .child(this.areaEl).hide();\n    this.suggest.bindInputEvents(this.textEl);\n\n    this.areaOffset = null;\n    this.freeze = { w: 0, h: 0 };\n    this.cell = null;\n    this.inputText = '';\n    this.change = () => {};\n  }\n\n  setFreezeLengths(width, height) {\n    this.freeze.w = width;\n    this.freeze.h = height;\n  }\n\n  clear() {\n    const { cell } = this;\n    const cellText = (cell && cell.text) || '';\n    if (cellText !== this.inputText) {\n      this.change(this.inputText);\n    }\n    this.cell = null;\n    this.areaOffset = null;\n    this.inputText = '';\n    this.el.hide();\n    this.textEl.val('');\n    this.textlineEl.html('');\n  }\n\n  setOffset(offset, suggestPosition = 'top') {\n    const {\n      textEl, areaEl, suggest, freeze, el,\n    } = this;\n    if (offset) {\n      this.areaOffset = offset;\n      const {\n        left, top, width, height, l, t,\n      } = offset;\n      // console.log('left:', left, ',top:', top, ', freeze:', freeze);\n      const elOffset = { left: 0, top: 0 };\n      // top left\n      if (freeze.w > l && freeze.h > t) {\n        //\n      } else if (freeze.w < l && freeze.h < t) {\n        elOffset.left = freeze.w;\n        elOffset.top = freeze.h;\n      } else if (freeze.w > l) {\n        elOffset.top = freeze.h;\n      } else if (freeze.h > t) {\n        elOffset.left = freeze.w;\n      }\n      el.offset(elOffset);\n      areaEl.offset({ left: left - elOffset.left - 0.8, top: top - elOffset.top - 0.8 });\n      textEl.offset({ width: width - 9 + 0.8, height: height - 3 + 0.8 });\n      const sOffset = { left: 0 };\n      sOffset[suggestPosition] = height;\n      suggest.setOffset(sOffset);\n    }\n  }\n\n  setCell(cell) {\n    this.el.show();\n    this.cell = cell;\n    const text = (cell && cell.text) || '';\n    this.inputText = text;\n    // console.log('text>>:', text);\n    setText.call(this, text, text.length);\n    resetTextareaSize.call(this);\n  }\n}\n","/* global window */\nimport { h } from './element';\nimport { bind } from '../event';\nimport { cssPrefix } from '../config';\n\nconst menuItems = [\n  { key: 'copy', title: 'Copy', label: 'Ctrl+C' },\n  { key: 'cut', title: 'Cut', label: 'Ctrl+X' },\n  { key: 'paste', title: 'Paste', label: 'Ctrl+V' },\n  { key: 'paste-value', title: 'Paste values only', label: 'Ctrl+Shift+V' },\n  { key: 'paste-format', title: 'Paste format only', label: 'Ctrl+Alt+V' },\n  { key: 'divider' },\n  { key: 'insert-row', title: 'Insert row' },\n  { key: 'insert-column', title: 'Insert column' },\n  { key: 'divider' },\n  { key: 'delete-row', title: 'Delete row' },\n  { key: 'delete-column', title: 'Delete column' },\n  { key: 'delete-cell-text', title: 'Delete cell' },\n];\n\nfunction buildMenuItem(item) {\n  if (item.key === 'divider') {\n    return h('div', `${cssPrefix}-item divider`);\n  }\n  return h('div', `${cssPrefix}-item`)\n    .on('click', () => {\n      this.itemClick(item.key);\n      this.hide();\n    })\n    .children(\n      item.title,\n      h('div', 'label').child(item.label || ''),\n    );\n}\n\nfunction buildMenu() {\n  return menuItems.map(it => buildMenuItem.call(this, it));\n}\n\nexport default class ContextMenu {\n  constructor(viewFn) {\n    this.el = h('div', `${cssPrefix}-contextmenu`)\n      .children(...buildMenu.call(this))\n      .hide();\n    this.viewFn = viewFn;\n    this.itemClick = () => {};\n    bind(window, 'click', (evt) => {\n      // console.log('outside:::', this.el.contains(evt.target));\n      if (this.el.contains(evt.target)) return;\n      this.hide();\n    });\n  }\n\n  hide() {\n    this.el.hide();\n  }\n\n  setPosition(x, y) {\n    const { el } = this;\n    const { height, width } = el.show().offset();\n    const view = this.viewFn();\n    let top = y;\n    let left = x;\n    if (view.height - y <= height) {\n      // -1 : firefox bug, focus contextmenu\n      top -= height - 1;\n    }\n    if (view.width - x <= width) {\n      // -1 : firefox bug, focus contextmenu\n      left -= width - 1;\n    }\n    el.offset({ left, top });\n  }\n}\n","const baseFonts = [\n  { key: 'Helvetica', title: 'Helvetica' },\n  { key: 'Source Sans Pro', title: 'Source Sans Pro' },\n  { key: 'Comic Sans MS', title: 'Comic Sans MS' },\n  { key: 'Arial', title: 'Arial' },\n  { key: 'Courier New', title: 'Courier New' },\n  { key: 'Verdana', title: 'Verdana' },\n];\n\nconst fontSizes = [\n  { pt: 7.5, px: 10 },\n  { pt: 8, px: 11 },\n  { pt: 9, px: 12 },\n  { pt: 10, px: 13 },\n  { pt: 10.5, px: 14 },\n  { pt: 11, px: 15 },\n  { pt: 12, px: 16 },\n  { pt: 14, px: 18.7 },\n  { pt: 15, px: 20 },\n  { pt: 16, px: 21.3 },\n  { pt: 18, px: 24 },\n  { pt: 22, px: 29.3 },\n  { pt: 24, px: 32 },\n  { pt: 26, px: 34.7 },\n  { pt: 36, px: 48 },\n  { pt: 42, px: 56 },\n  // { pt: 54, px: 71.7 },\n  // { pt: 63, px: 83.7 },\n  // { pt: 72, px: 95.6 },\n];\n\nfunction getFontSizePxByPt(pt) {\n  for (let i = 0; i < fontSizes.length; i += 1) {\n    const fontSize = fontSizes[i];\n    if (fontSize.pt === pt) {\n      return fontSize.px;\n    }\n  }\n  return pt;\n}\n\nconst fonts = (ary = []) => {\n  const map = {};\n  baseFonts.concat(ary).forEach((f) => {\n    map[f.key] = f;\n  });\n  return map;\n};\n\nexport default {};\nexport {\n  fontSizes,\n  fonts,\n  baseFonts,\n  getFontSizePxByPt,\n};\n","import { expr2xy, xy2expr } from './alphabet';\n\n// Converting infix expression to a suffix expression\n// src: AVERAGE(SUM(A1,A2), B1) + 50 + B20\n// return: [A1, A2], SUM[, B1],AVERAGE,50,+,B20,+\nconst infixExprToSuffixExpr = (src) => {\n  const operatorStack = [];\n  const stack = [];\n  let subStrs = []; // SUM, A1, B2, 50 ...\n  let fnArgType = 0; // 1 => , 2 => :\n  let fnArgsLen = 1; // A1,A2,A3...\n  for (let i = 0; i < src.length; i += 1) {\n    const c = src.charAt(i);\n    // console.log('c:', c);\n    if (c !== ' ') {\n      if (c >= 'a' && c <= 'z') {\n        subStrs.push(c.toUpperCase());\n      } else if ((c >= '0' && c <= '9') || (c >= 'A' && c <= 'Z') || c === '.') {\n        subStrs.push(c);\n      } else if (c === '\"') {\n        i += 1;\n        while (src.charAt(i) !== '\"') {\n          subStrs.push(src.charAt(i));\n          i += 1;\n        }\n        stack.push(`\"${subStrs.join('')}`);\n        subStrs = [];\n      } else {\n        if (subStrs.length > 0) {\n          stack.push(subStrs.join(''));\n        }\n        if (c === ')') {\n          let c1 = operatorStack.pop();\n          if (fnArgType === 2) {\n            // fn argument range => A1:B5\n            const [ex, ey] = expr2xy(stack.pop());\n            const [sx, sy] = expr2xy(stack.pop());\n            // console.log('::', sx, sy, ex, ey);\n            let rangelen = 0;\n            for (let x = sx; x <= ex; x += 1) {\n              for (let y = sy; y <= ey; y += 1) {\n                stack.push(xy2expr(x, y));\n                rangelen += 1;\n              }\n            }\n            stack.push([c1, rangelen]);\n          } else if (fnArgType === 1) {\n            // fn argument => A1,A2,B5\n            stack.push([c1, fnArgsLen]);\n            fnArgsLen = 1;\n          } else {\n            // console.log('c1:', c1, fnArgType, operatorStack);\n            while (c1 !== '(' && operatorStack.length > 0) {\n              stack.push(c1);\n              c1 = operatorStack.pop();\n            }\n          }\n          fnArgType = 0;\n        } else if (c === ':') {\n          fnArgType = 2;\n        } else if (c === ',') {\n          fnArgType = 1;\n          fnArgsLen += 1;\n        } else if (c === '(' && subStrs.length > 0) {\n          // function\n          stack.pop();\n          operatorStack.push(subStrs.join(''));\n        } else {\n          // priority: */ > +-\n          if (operatorStack.length > 0 && (c === '+' || c === '-')) {\n            const last = operatorStack[operatorStack.length - 1];\n            if (last === '*' || last === '/') {\n              while (operatorStack.length > 0) {\n                stack.push(operatorStack.pop());\n              }\n            }\n          }\n          operatorStack.push(c);\n        }\n        subStrs = [];\n      }\n    }\n  }\n  if (subStrs.length > 0) {\n    stack.push(subStrs.join(''));\n  }\n  while (operatorStack.length > 0) {\n    stack.push(operatorStack.pop());\n  }\n  return stack;\n};\n\nconst evalSubExpr = (subExpr, cellRender) => {\n  if (subExpr[0] >= '0' && subExpr[0] <= '9') {\n    return Number(subExpr);\n  }\n  if (subExpr[0] === '\"') {\n    return subExpr.substring(1);\n  }\n  const [x, y] = expr2xy(subExpr);\n  return cellRender(x, y);\n};\n\n// evaluate the suffix expression\n// srcStack: <= infixExprToSufixExpr\n// formulaMap: {'SUM': {}, ...}\n// cellRender: (x, y) => {}\nconst evalSuffixExpr = (srcStack, formulaMap, cellRender) => {\n  const stack = [];\n  // console.log(':::::formulaMap:', formulaMap);\n  for (let i = 0; i < srcStack.length; i += 1) {\n    // console.log(':::>>>', srcStack[i]);\n    if (srcStack[i] === '+') {\n      const top = stack.pop();\n      const bottom = stack.pop();\n      stack.push(Number(bottom) + Number(top));\n    } else if (srcStack[i] === '-') {\n      const top = stack.pop();\n      stack.push(Number(stack.pop()) - Number(top));\n    } else if (srcStack[i] === '*') {\n      stack.push(Number(stack.pop()) * Number(stack.pop()));\n    } else if (srcStack[i] === '/') {\n      const top = stack.pop();\n      stack.push(Number(stack.pop()) / Number(top));\n    } else if (Array.isArray(srcStack[i])) {\n      const [formula, len] = srcStack[i];\n      const params = [];\n      for (let j = 0; j < len; j += 1) {\n        params.push(stack.pop());\n      }\n      stack.push(formulaMap[formula].render(params));\n    } else {\n      stack.push(evalSubExpr(srcStack[i], cellRender));\n    }\n    // console.log('stack:', stack);\n  }\n  return stack[0];\n};\n\nconst cellRender = (sri, sci, src, formulaMap, getCellText) => {\n  // const srcExpr = alphabet.stringAt(sci) + (sri + 1);\n  // console.log(':::::::::::::src:', src, srcExpr);\n  if (src[0] === '=') {\n    const stack = infixExprToSuffixExpr(src.substring(1));\n    // if (stack.includes(srcExpr)) return '';\n    // console.log('suffixExpr:', stack);\n    if (stack.length <= 0) return src;\n    return evalSuffixExpr(stack, formulaMap, (x, y) => {\n      const cellText = (sri === y && sci === x) ? 0 : getCellText(x, y);\n      return cellRender(sri, sci, cellText, formulaMap, getCellText);\n    });\n  }\n  return src;\n};\n\nexport default {\n  render: cellRender,\n};\nexport {\n  infixExprToSuffixExpr,\n};\n","/**\n  formula:\n    key\n    title\n    render\n*/\nconst baseFormulas = [\n  {\n    key: 'SUM',\n    title: '求和',\n    render: ary => ary.reduce((a, b) => Number(a) + Number(b), 0),\n  },\n  {\n    key: 'AVERAGE',\n    title: '求平均值',\n    render: ary => ary.reduce((a, b) => Number(a) + Number(b), 0) / ary.length,\n  },\n  {\n    key: 'MAX',\n    title: '最大值',\n    render: ary => Math.max(...ary.map(v => Number(v))),\n  },\n  {\n    key: 'MIN',\n    title: '最小值',\n    render: ary => Math.min(...ary.map(v => Number(v))),\n  },\n  {\n    key: 'CONCAT',\n    title: '字符串拼接',\n    render: ary => ary.join(''),\n  },\n];\n\nconst formulas = baseFormulas;\n\n// const formulas = (formulaAry = []) => {\n//   const formulaMap = {};\n//   baseFormulas.concat(formulaAry).forEach((f) => {\n//     formulaMap[f.key] = f;\n//   });\n//   return formulaMap;\n// };\nconst formulam = {};\nbaseFormulas.forEach((f) => {\n  formulam[f.key] = f;\n});\n\nexport default {\n};\n\nexport {\n  formulam,\n  formulas,\n  baseFormulas,\n};\n","const formatStringRender = v => v;\n\nconst formatNumberRender = (v) => {\n  if (/^(-?\\d*.?\\d*)$/.test(v)) {\n    const v1 = Number(v).toFixed(2).toString();\n    const [first, ...parts] = v1.split('\\\\.');\n    return [first.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,'), ...parts];\n  }\n  return v;\n};\n\nconst baseFormats = [\n  {\n    key: 'normal',\n    title: 'Normal',\n    type: 'string',\n    render: formatStringRender,\n  },\n  {\n    key: 'text',\n    title: 'Plain Text',\n    type: 'string',\n    render: formatStringRender,\n  },\n  {\n    key: 'number',\n    title: 'Number',\n    type: 'number',\n    label: '1,000.12',\n    render: formatNumberRender,\n  },\n  {\n    key: 'percent',\n    title: 'Percent',\n    type: 'number',\n    label: '10.12%',\n    render: v => `${v}%`,\n  },\n  {\n    key: 'rmb',\n    title: 'RMB',\n    type: 'number',\n    label: '￥10.00',\n    render: v => `￥${formatNumberRender(v)}`,\n  },\n  {\n    key: 'usd',\n    title: 'USD',\n    type: 'number',\n    label: '$10.00',\n    render: v => `$${formatNumberRender(v)}`,\n  },\n  {\n    key: 'date',\n    title: 'Date',\n    type: 'date',\n    label: '26/09/2008',\n    render: formatStringRender,\n  },\n  {\n    key: 'time',\n    title: 'Time',\n    type: 'date',\n    label: '15:59:00',\n    render: formatStringRender,\n  },\n  {\n    key: 'datetime',\n    title: 'Date time',\n    type: 'date',\n    label: '26/09/2008 15:59:00',\n    render: formatStringRender,\n  },\n  {\n    key: 'duration',\n    title: 'Duration',\n    type: 'date',\n    label: '24:01:00',\n    render: formatStringRender,\n  },\n];\n\n// const formats = (ary = []) => {\n//   const map = {};\n//   baseFormats.concat(ary).forEach((f) => {\n//     map[f.key] = f;\n//   });\n//   return map;\n// };\nconst formatm = {};\nbaseFormats.forEach((f) => {\n  formatm[f.key] = f;\n});\n\nexport default {\n};\nexport {\n  formatm,\n  baseFormats,\n};\n","/* global window */\nfunction dpr() {\n  return window.devicePixelRatio || 1;\n}\n\nfunction thinLineWidth() {\n  return dpr() - 0.5;\n}\n\nfunction npx(px) {\n  return parseInt(px * dpr(), 10);\n}\n\nclass DrawBox {\n  constructor(x, y, w, h, padding = 0) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n    this.padding = padding;\n    this.bgcolor = '#ffffff';\n    // border: [width, style, color]\n    this.borderTop = null;\n    this.borderRight = null;\n    this.borderBottom = null;\n    this.borderLeft = null;\n  }\n\n  setBorders({\n    top, bottom, left, right,\n  }) {\n    if (top) this.borderTop = top;\n    if (right) this.borderRight = right;\n    if (bottom) this.borderBottom = bottom;\n    if (left) this.borderLeft = left;\n  }\n\n  innerWidth() {\n    return this.width - (this.padding * 2);\n  }\n\n  innerHeight() {\n    return this.height - (this.padding * 2);\n  }\n\n  textx(align) {\n    const { width, padding } = this;\n    let { x } = this;\n    if (align === 'left') {\n      x += padding;\n    } else if (align === 'center') {\n      x += width / 2;\n    } else if (align === 'right') {\n      x += width - padding;\n    }\n    return x;\n  }\n\n  texty(align, fontSize, hoffset) {\n    const { height, padding } = this;\n    let { y } = this;\n    if (align === 'top') {\n      y += padding;\n    } else if (align === 'middle') {\n      const y1 = y + height / 2 - hoffset;\n      const y2 = y + padding + fontSize / 2 + 1;\n      if (y1 < y2) y = y2;\n      else y = y1;\n    } else if (align === 'bottom') {\n      y += height - hoffset * 2 - padding;\n    }\n    return y;\n  }\n\n  topxys() {\n    const { x, y, width } = this;\n    return [[x, y], [x + width, y]];\n  }\n\n  rightxys() {\n    const {\n      x, y, width, height,\n    } = this;\n    return [[x + width, y], [x + width, y + height]];\n  }\n\n  bottomxys() {\n    const {\n      x, y, width, height,\n    } = this;\n    return [[x, y + height], [x + width, y + height]];\n  }\n\n  leftxys() {\n    const {\n      x, y, height,\n    } = this;\n    return [[x, y], [x, y + height]];\n  }\n}\n\nfunction drawFontLine(type, tx, ty, align, valign, blheight, blwidth) {\n  const floffset = { x: 0, y: 0 };\n  if (type === 'underline') {\n    if (valign === 'bottom') {\n      floffset.y = 0;\n    } else if (valign === 'top') {\n      floffset.y = -(blheight + 2);\n    } else {\n      floffset.y = -blheight / 2;\n    }\n  } else if (type === 'strike') {\n    if (valign === 'bottom') {\n      floffset.y = blheight / 2;\n    } else if (valign === 'top') {\n      floffset.y = -((blheight / 2) + 2);\n    }\n  }\n\n  if (align === 'center') {\n    floffset.x = blwidth / 2;\n  } else if (align === 'right') {\n    floffset.x = blwidth;\n  }\n  this.line(\n    [tx - floffset.x, ty - floffset.y],\n    [tx - floffset.x + blwidth, ty - floffset.y],\n  );\n}\n\nclass Draw {\n  constructor(el, width, height) {\n    this.el = el;\n    this.ctx = el.getContext('2d');\n    this.resize(width, height);\n    this.ctx.scale(dpr(), dpr());\n  }\n\n  resize(width, height) {\n    // console.log('dpr:', dpr);\n    this.el.style.width = `${width}px`;\n    this.el.style.height = `${height}px`;\n    this.el.width = npx(width);\n    this.el.height = npx(height);\n  }\n\n  clear() {\n    const { width, height } = this.el;\n    this.ctx.clearRect(0, 0, width, height);\n    return this;\n  }\n\n  attr(options) {\n    Object.assign(this.ctx, options);\n    return this;\n  }\n\n  save() {\n    this.ctx.save();\n    this.ctx.beginPath();\n    return this;\n  }\n\n  restore() {\n    this.ctx.restore();\n    return this;\n  }\n\n  beginPath() {\n    this.ctx.beginPath();\n    return this;\n  }\n\n  translate(x, y) {\n    this.ctx.translate(npx(x), npx(y));\n    return this;\n  }\n\n  fillRect(x, y, w, h) {\n    this.ctx.fillRect(npx(x) - 0.5, npx(y) - 0.5, npx(w), npx(h));\n    return this;\n  }\n\n  fillText(text, x, y) {\n    this.ctx.fillText(text, npx(x), npx(y));\n    return this;\n  }\n\n  /*\n    txt: render text\n    box: DrawBox\n    attr: {\n      align: left | center | right\n      valign: top | middle | bottom\n      color: '#333333',\n      strike: false,\n      font: {\n        name: 'Arial',\n        size: 14,\n        bold: false,\n        italic: false,\n      }\n    }\n    textWrap: text wrapping\n  */\n  text(txt, box, attr = {}, textWrap = true) {\n    const { ctx } = this;\n    const {\n      align, valign, font, color, strike, underline,\n    } = attr;\n    const tx = box.textx(align);\n    ctx.save();\n    this.attr({\n      textAlign: align,\n      textBaseline: valign,\n      font: `${font.italic ? 'italic' : ''} ${font.bold ? 'bold' : ''} ${npx(font.size)}px ${font.name}`,\n      fillStyle: color,\n      strokeStyle: color,\n    });\n    const txtWidth = ctx.measureText(txt).width;\n    let hoffset = 0;\n    if (textWrap) {\n      const n = Math.ceil(txtWidth / box.innerWidth());\n      hoffset = ((n - 1) * font.size) / 2;\n    }\n    let ty = box.texty(valign, font.size, hoffset);\n    // console.log('tx: ', tx, ', ty:', ty);\n    if (textWrap && txtWidth > box.innerWidth()) {\n      const textLine = { len: 0, start: 0 };\n      for (let i = 0; i < txt.length; i += 1) {\n        if (textLine.len >= box.innerWidth()) {\n          this.fillText(txt.substring(textLine.start, i), tx, ty);\n          if (strike) {\n            drawFontLine.call(this, 'strike', tx, ty, align, valign, font.size, textLine.len);\n          }\n          if (underline) {\n            drawFontLine.call(this, 'underline', tx, ty, align, valign, font.size, textLine.len);\n          }\n          ty += font.size + 2;\n          textLine.len = 0;\n          textLine.start = i;\n        }\n        textLine.len += ctx.measureText(txt[i]).width;\n      }\n      if (textWrap && textLine.len > 0) {\n        this.fillText(txt.substring(textLine.start), tx, ty);\n        if (strike) {\n          drawFontLine.call(this, 'strike', tx, ty, align, valign, font.size, textLine.len);\n        }\n        if (underline) {\n          drawFontLine.call(this, 'underline', tx, ty, align, valign, font.size, textLine.len);\n        }\n      }\n    } else {\n      this.fillText(txt, tx, ty);\n      if (strike) {\n        drawFontLine.call(this, 'striket', tx, ty, align, valign, font.size, txtWidth);\n      }\n      if (underline) {\n        drawFontLine.call(this, 'underline', tx, ty, align, valign, font.size, txtWidth);\n      }\n    }\n    ctx.restore();\n    return this;\n  }\n\n  border(style, color) {\n    const { ctx } = this;\n    ctx.lineWidth = thinLineWidth;\n    ctx.strokeStyle = color;\n    // console.log('style:', style);\n    if (style === 'medium') {\n      ctx.lineWidth = npx(1) + 0.5;\n    } else if (style === 'thick') {\n      ctx.lineWidth = npx(2);\n    } else if (style === 'dashed') {\n      ctx.setLineDash([npx(3), npx(2)]);\n    } else if (style === 'dotted') {\n      ctx.setLineDash([npx(1), npx(1)]);\n    } else if (style === 'double') {\n      ctx.setLineDash([npx(2), 0]);\n    }\n    return this;\n  }\n\n  line(...xys) {\n    const { ctx } = this;\n    if (xys.length > 1) {\n      const [x, y] = xys[0];\n      ctx.moveTo(npx(x) - 0.5, npx(y) - 0.5);\n      for (let i = 1; i < xys.length; i += 1) {\n        const [x1, y1] = xys[i];\n        ctx.lineTo(npx(x1) - 0.5, npx(y1) - 0.5);\n      }\n      ctx.stroke();\n    }\n    return this;\n  }\n\n  strokeBorders(box) {\n    const { ctx } = this;\n    ctx.save();\n    ctx.beginPath();\n    // border\n    const {\n      borderTop, borderRight, borderBottom, borderLeft,\n    } = box;\n    if (borderTop) {\n      this.border(...borderTop);\n      this.line(...box.topxys());\n    }\n    if (borderRight) {\n      this.border(...borderRight);\n      this.line(...box.rightxys());\n    }\n    if (borderBottom) {\n      this.border(...borderBottom);\n      this.line(...box.bottomxys());\n    }\n    if (borderLeft) {\n      this.border(...borderLeft);\n      this.line(...box.leftxys());\n    }\n    ctx.restore();\n  }\n\n  rect(box, dtextcb) {\n    const { ctx } = this;\n    const {\n      x, y, width, height, bgcolor,\n    } = box;\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = bgcolor || '#fff';\n    // ctx.strokeStyle = '#e6e6e6';\n    ctx.rect(npx(x) - 0.5, npx(y) - 0.5, npx(width), npx(height));\n    ctx.clip();\n    ctx.fill();\n    // ctx.stroke();\n    this.strokeBorders(box);\n    dtextcb();\n    ctx.restore();\n  }\n}\n\nexport default {};\nexport {\n  Draw,\n  DrawBox,\n  thinLineWidth,\n  npx,\n};\n","import { stringAt } from '../core/alphabet';\nimport { getFontSizePxByPt } from '../core/font';\nimport _cell from '../core/cell';\nimport { formulam } from '../core/formula';\nimport { formatm } from '../core/format';\nimport { CellRange } from '../core/cell_range';\n\nimport {\n  Draw, DrawBox, thinLineWidth, npx,\n} from '../canvas/draw';\n// gobal var\nconst cellPaddingWidth = 5;\nconst tableFixedHeaderCleanStyle = { fillStyle: '#f4f5f8' };\nconst tableGridStyle = {\n  fillStyle: '#fff',\n  lineWidth: thinLineWidth,\n  strokeStyle: '#e6e6e6',\n};\nfunction tableFixedHeaderStyle() {\n  return {\n    textAlign: 'center',\n    textBaseline: 'middle',\n    font: `500 ${npx(12)}px Source Sans Pro`,\n    fillStyle: '#585757',\n    lineWidth: thinLineWidth(),\n    strokeStyle: '#e6e6e6',\n  };\n}\n\nfunction getDrawBox(rindex, cindex) {\n  const { data } = this;\n  const {\n    left, top, width, height,\n  } = data.cellRect(rindex, cindex);\n  return new DrawBox(left, top, width, height, cellPaddingWidth);\n}\n\nfunction renderCell(rindex, cindex) {\n  const { draw, data } = this;\n  const cell = data.getCell(rindex, cindex);\n\n  const style = data.getCellStyleOrDefault(rindex, cindex);\n  // console.log('style:', style);\n  const dbox = getDrawBox.call(this, rindex, cindex);\n  dbox.bgcolor = style.bgcolor;\n  if (style.border !== undefined) {\n    dbox.setBorders(style.border);\n  }\n  draw.rect(dbox, () => {\n    if (cell !== null) {\n      // render text\n      let cellText = _cell.render(rindex, cindex, cell.text || '', formulam, (y, x) => (data.getCellTextOrDefault(x, y)));\n      if (style.format) {\n        // console.log(data.formatm, '>>', cell.format);\n        cellText = formatm[style.format].render(cellText);\n      }\n      const font = Object.assign({}, style.font);\n      font.size = getFontSizePxByPt(font.size);\n      // console.log('style:', style);\n      draw.text(cellText, dbox, {\n        align: style.align,\n        valign: style.valign,\n        font,\n        color: style.color,\n        strike: style.strike,\n        underline: style.underline,\n      }, style.textwrap);\n    }\n  });\n}\n\nfunction renderContent({\n  sri, sci, eri, eci,\n}, scrollOffset) {\n  const { draw, data } = this;\n  const { cols, rows } = data;\n  draw.save();\n  draw.translate(cols.indexWidth, rows.height)\n    .translate(-scrollOffset.x, -scrollOffset.y);\n\n  // render cell at first\n  const nviewRange = new CellRange(sri, sci, eri - 1, eci - 1);\n  nviewRange.each((ri, ci) => {\n    renderCell.call(this, ri, ci);\n  });\n  // render mergeCell at second\n  data.eachMergesInView(nviewRange, (r) => {\n    renderCell.call(this, r.sri, r.sci);\n  });\n\n  draw.restore();\n}\n\nfunction renderSelectedHeaderCell(x, y, w, h) {\n  const { draw } = this;\n  draw.save();\n  draw.attr({ fillStyle: 'rgba(75, 137, 255, 0.08)' })\n    .fillRect(x, y, w, h);\n  draw.restore();\n}\n\nfunction renderFixedHeaders(viewRange) {\n  const { draw, data } = this;\n  const { cols, rows } = data;\n  draw.save();\n  const sumHeight = rows.sumHeight(viewRange.sri, viewRange.eri) + rows.height;\n  const sumWidth = cols.sumWidth(viewRange.sci, viewRange.eci) + cols.indexWidth;\n  // draw rect background\n  draw.attr(tableFixedHeaderCleanStyle)\n    .fillRect(0, 0, cols.indexWidth, sumHeight)\n    .fillRect(0, 0, sumWidth, rows.height);\n\n  const {\n    sri, sci, eri, eci,\n  } = data.selector.range;\n  // console.log(data.selectIndexes);\n  // draw text\n  // text font, align...\n  draw.attr(tableFixedHeaderStyle());\n  // y-header-text\n  data.rowEach(viewRange.sri, viewRange.eri, (i, y1, rowHeight) => {\n    const y = y1 + rows.height;\n    // console.log('y1:', y1, ', i:', i);\n    draw.line([0, y], [cols.indexWidth, y]);\n    if (i !== viewRange.eri) {\n      if (sri <= i && i < eri + 1) {\n        renderSelectedHeaderCell.call(this, 0, y, cols.indexWidth, rowHeight);\n      }\n      draw.fillText(i + 1, cols.indexWidth / 2, y + (rowHeight / 2));\n    }\n  });\n  draw.line([cols.indexWidth, 0], [cols.indexWidth, sumHeight]);\n  // x-header-text\n  data.colEach(viewRange.sci, viewRange.eci, (i, x1, colWidth) => {\n    const x = x1 + cols.indexWidth;\n    // console.log('x1:', x1, ', i:', i);\n    draw.line([x, 0], [x, rows.height]);\n    if (i !== viewRange.eci) {\n      if (sci <= i && i < eci + 1) {\n        renderSelectedHeaderCell.call(this, x, 0, colWidth, rows.height);\n      }\n      draw.fillText(stringAt(i), x + (colWidth / 2), rows.height / 2);\n    }\n  });\n  draw.line([0, rows.height], [sumWidth, rows.height]);\n  // left-top-cell\n  draw.attr({ fillStyle: '#f4f5f8' })\n    .fillRect(0, 0, cols.indexWidth, rows.height)\n    .line([cols.indexWidth, 0], [cols.indexWidth, rows.height])\n    .line([0, rows.height], [cols.indexWidth, rows.height]);\n  // context.closePath();\n  draw.restore();\n}\n\nfunction renderContentGrid({\n  sri, sci, eri, eci,\n}, scrollOffset = { x: 0, y: 0 }) {\n  const { draw, data } = this;\n  const { cols, rows, settings } = data;\n  if (!settings.showGrid) return;\n\n  draw.save();\n  draw.attr(tableGridStyle)\n    .translate(cols.indexWidth, rows.height)\n    .translate(scrollOffset.x, scrollOffset.y);\n  const sumWidth = cols.sumWidth(sci, eci);\n  const sumHeight = rows.sumHeight(sri, eri);\n  // console.log('sumWidth:', sumWidth);\n  draw.fillRect(0, 0, sumWidth, sumHeight);\n  // console.log('rowStart:', rowStart, ', rowLen:', rowLen);\n  data.rowEach(sri, eri, (i, y) => {\n    draw.line([0, y], [sumWidth, y]);\n  });\n  data.colEach(sci, eci, (i, x) => {\n    draw.line([x, 0], [x, sumHeight]);\n  });\n  draw.restore();\n}\n\nfunction renderFreezeHighlightLine(p1, p2) {\n  const { draw, data } = this;\n  const { rows, cols } = data;\n  draw.save()\n    .translate(cols.indexWidth, rows.height)\n    .attr({ strokeStyle: 'rgba(75, 137, 255, .6)' });\n  draw.line(p1, p2);\n  draw.restore();\n}\n\nfunction renderFreezeGridAndContent({ eri, eci }) {\n  const { data } = this;\n  const [fri, fci] = data.freeze;\n  const { scroll, cols, rows } = data;\n  const sheight = rows.sumHeight(0, fri);\n  const twidth = data.viewWidth();\n  const ftw = data.freezeTotalWidth();\n  const fth = data.freezeTotalHeight();\n  if (fri > 0) {\n    renderContentGrid.call(\n      this,\n      new CellRange(0, fci + data.scroll.ci, fri, eci),\n      { x: ftw, y: 0 },\n    );\n    renderContent.call(\n      this,\n      new CellRange(0, fci, fri, eci),\n      { x: scroll.x, y: 0 },\n    );\n  }\n  const theight = data.viewHeight();\n  const swidth = cols.sumWidth(0, fci);\n  if (fci > 0) {\n    renderContentGrid.call(\n      this,\n      new CellRange(fri + data.scroll.ri, 0, eri, fci),\n      { x: 0, y: fth },\n    );\n    renderContent.call(\n      this,\n      new CellRange(fri, 0, eri, fci),\n      { x: 0, y: scroll.y },\n    );\n  }\n  renderFreezeHighlightLine.call(\n    this, [0, sheight], [twidth, sheight],\n  );\n  renderFreezeHighlightLine.call(\n    this, [swidth, 0], [swidth, theight],\n  );\n}\n\nfunction renderAll(viewRange, scrollOffset) {\n  // const { row, col, scrollOffset } = this;\n  // console.log('viewRange:', viewRange);\n  renderContentGrid.call(this, viewRange);\n  renderContent.call(this, viewRange, scrollOffset);\n  renderFixedHeaders.call(this, viewRange);\n}\n\n/** end */\nclass Table {\n  constructor(el, data) {\n    this.el = el;\n    this.draw = new Draw(el, data.viewWidth(), data.viewHeight());\n    this.data = data;\n  }\n\n  render() {\n    // resize canvas\n    const { data } = this;\n    this.draw.resize(data.viewWidth(), data.viewHeight());\n    this.clear();\n    const viewRange = data.viewRange();\n    renderAll.call(this, data.viewRange(), data.scroll);\n    const [fri, fci] = data.freeze;\n    if (fri > 0 || fci > 0) {\n      renderFreezeGridAndContent.call(this, viewRange);\n      renderAll.call(this, data.freezeViewRange(), { x: 0, y: 0 });\n    }\n  }\n\n  clear() {\n    this.draw.clear();\n  }\n}\n\nexport default Table;\n","/* global window */\nimport { Element, h } from './element';\nimport { bind } from '../event';\nimport { cssPrefix } from '../config';\n\nexport default class Dropdown extends Element {\n  constructor(title, width, showArrow, placement, ...children) {\n    super('div', `${cssPrefix}-dropdown ${placement}`);\n    this.title = title;\n    this.change = () => {};\n    if (typeof title === 'string') {\n      this.title = h('div', `${cssPrefix}-dropdown-title`).child(title);\n    } else if (showArrow) {\n      this.title.addClass('arrow-left');\n    }\n    this.contentEl = h('div', `${cssPrefix}-dropdown-content`)\n      .children(...children)\n      .css('width', width)\n      .hide();\n\n    this.headerEl = h('div', `${cssPrefix}-dropdown-header`);\n    this.headerEl.on('click', () => {\n      if (this.contentEl.css('display') !== 'block') {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }).children(\n      this.title,\n      showArrow ? h('div', `${cssPrefix}-icon arrow-right`).child(\n        h('div', `${cssPrefix}-icon-img arrow-down`),\n      ) : '',\n    );\n    this.children(this.headerEl, this.contentEl);\n    bind(window, 'click', (evt) => {\n      if (this.el.contains(evt.target)) return;\n      this.hide();\n    });\n  }\n\n  setTitle(title) {\n    this.title.html(title);\n    this.hide();\n  }\n\n  show() {\n    this.contentEl.show();\n    this.parent().active();\n  }\n\n  hide() {\n    this.parent().active(false);\n    this.contentEl.hide();\n  }\n}\n","import Dropdown from './dropdown';\nimport { h } from './element';\nimport { baseFonts } from '../core/font';\nimport { cssPrefix } from '../config';\n\nexport default class DropdownFont extends Dropdown {\n  constructor() {\n    const nfonts = baseFonts.map(it => h('div', `${cssPrefix}-item`)\n      .on('click', () => {\n        this.setTitle(it.title);\n        this.change(it);\n      })\n      .child(it.title));\n    super(baseFonts[0].title, '160px', true, 'bottom-left', ...nfonts);\n  }\n}\n","import Dropdown from './dropdown';\nimport { h } from './element';\nimport { fontSizes } from '../core/font';\nimport { cssPrefix } from '../config';\n\nexport default class DropdownFontSize extends Dropdown {\n  constructor() {\n    const nfontSizes = fontSizes.map(it => h('div', `${cssPrefix}-item`)\n      .on('click', () => {\n        this.setTitle(`${it.pt}`);\n        this.change(it);\n      })\n      .child(`${it.pt}`));\n    super('10', '60px', true, 'bottom-left', ...nfontSizes);\n  }\n}\n","import Dropdown from './dropdown';\nimport { h } from './element';\nimport { baseFormats } from '../core/format';\nimport { cssPrefix } from '../config';\n\nexport default class DropdownFormat extends Dropdown {\n  constructor() {\n    let nformats = baseFormats.slice(0);\n    nformats.splice(2, 0, { key: 'divider' });\n    nformats.splice(7, 0, { key: 'divider' });\n    nformats = nformats.map((it) => {\n      const item = h('div', `${cssPrefix}-item`);\n      if (it.key === 'divider') {\n        item.addClass('divider');\n      } else {\n        item.child(it.title)\n          .on('click', () => {\n            this.setTitle(it.title);\n            this.change(it);\n          });\n        if (it.label) item.child(h('div', 'label').html(it.label));\n      }\n      return item;\n    });\n    super('Normal', '220px', true, 'bottom-left', ...nformats);\n  }\n\n  setTitle(key) {\n    for (let i = 0; i < baseFormats.length; i += 1) {\n      if (baseFormats[i].key === key) {\n        this.title.html(baseFormats[i].title);\n      }\n    }\n    this.hide();\n  }\n}\n","import { Element, h } from './element';\nimport { cssPrefix } from '../config';\n\nexport default class Icon extends Element {\n  constructor(name) {\n    super('div', `${cssPrefix}-icon`);\n    this.iconNameEl = h('div', `${cssPrefix}-icon-img ${name}`);\n    this.child(this.iconNameEl);\n  }\n\n  setName(name) {\n    this.iconNameEl.className(`${cssPrefix}-icon-img ${name}`);\n  }\n}\n","import Dropdown from './dropdown';\nimport Icon from './icon';\nimport { h } from './element';\nimport { baseFormulas } from '../core/formula';\nimport { cssPrefix } from '../config';\n\nexport default class DropdownFormula extends Dropdown {\n  constructor() {\n    const nformulas = baseFormulas.map(it => h('div', `${cssPrefix}-item`)\n      .on('click', () => {\n        this.hide();\n        this.change(it);\n      })\n      .child(it.key));\n    super(new Icon('formula'), '180px', true, 'bottom-left', ...nformulas);\n  }\n}\n","import { h } from './element';\nimport { cssPrefix } from '../config';\n\nconst themeColorPlaceHolders = ['#ffffff', '#000100', '#e7e5e6', '#445569', '#5b9cd6', '#ed7d31', '#a5a5a5', '#ffc001', '#4371c6', '#71ae47'];\n\nconst themeColors = [\n  ['#f2f2f2', '#7f7f7f', '#d0cecf', '#d5dce4', '#deeaf6', '#fce5d5', '#ededed', '#fff2cd', '#d9e2f3', '#e3efd9'],\n  ['#d8d8d8', '#595959', '#afabac', '#adb8ca', '#bdd7ee', '#f7ccac', '#dbdbdb', '#ffe59a', '#b3c6e7', '#c5e0b3'],\n  ['#bfbfbf', '#3f3f3f', '#756f6f', '#8596b0', '#9cc2e6', '#f4b184', '#c9c9c9', '#fed964', '#8eaada', '#a7d08c'],\n  ['#a5a5a5', '#262626', '#3a3839', '#333f4f', '#2e75b5', '#c45a10', '#7b7b7b', '#bf8e01', '#2f5596', '#538136'],\n  ['#7f7f7f', '#0c0c0c', '#171516', '#222a35', '#1f4e7a', '#843c0a', '#525252', '#7e6000', '#203864', '#365624'],\n];\n\nconst standardColors = ['#c00000', '#fe0000', '#fdc101', '#ffff01', '#93d051', '#00b04e', '#01b0f1', '#0170c1', '#012060', '#7030a0'];\n\nfunction buildTd(bgcolor) {\n  return h('td', '').child(\n    h('div', `${cssPrefix}-color-palette-cell`)\n      .on('click.stop', () => this.change(bgcolor))\n      .css('background-color', bgcolor),\n  );\n}\n\nexport default class ColorPalette {\n  constructor() {\n    this.el = h('div', `${cssPrefix}-color-palette`);\n    this.change = () => {};\n    const table = h('table', '').children(\n      h('tbody', '').children(\n        h('tr', `${cssPrefix}-theme-color-placeholders`).children(\n          ...themeColorPlaceHolders.map(color => buildTd.call(this, color)),\n        ),\n        ...themeColors.map(it => h('tr', `${cssPrefix}-theme-colors`).children(\n          ...it.map(color => buildTd.call(this, color)),\n        )),\n        h('tr', `${cssPrefix}-standard-colors`).children(\n          ...standardColors.map(color => buildTd.call(this, color)),\n        ),\n      ),\n    );\n    this.el.child(table);\n  }\n}\n","import Dropdown from './dropdown';\nimport Icon from './icon';\nimport ColorPalette from './color_palette';\n\nexport default class DropdownColor extends Dropdown {\n  constructor(iconName, color) {\n    const icon = new Icon(iconName)\n      .css('height', '16px')\n      .css('border-bottom', `3px solid ${color}`);\n    const colorPalette = new ColorPalette();\n    colorPalette.change = (v) => {\n      this.setTitle(v);\n      this.change(v);\n    };\n    super(icon, 'auto', false, 'bottom-left', colorPalette.el);\n  }\n\n  setTitle(color) {\n    this.title.css('border-color', color);\n    this.hide();\n  }\n}\n","import Dropdown from './dropdown';\nimport { h } from './element';\nimport Icon from './icon';\nimport { cssPrefix } from '../config';\n\nfunction buildItemWithIcon(iconName) {\n  return h('div', `${cssPrefix}-item`).child(new Icon(iconName));\n}\n\nexport default class DropdownAlign extends Dropdown {\n  constructor(aligns, align) {\n    const icon = new Icon(`align-${align}`);\n    const naligns = aligns.map(it => buildItemWithIcon(`align-${it}`)\n      .on('click', () => {\n        this.setTitle(it);\n        this.change(it);\n      }));\n    super(icon, 'auto', true, 'bottom-left', ...naligns);\n  }\n\n  setTitle(align) {\n    this.title.setName(`align-${align}`);\n    this.hide();\n  }\n}\n","import Dropdown from './dropdown';\nimport { h } from './element';\nimport Icon from './icon';\nimport { cssPrefix } from '../config';\n\nconst lineTypes = [\n  ['thin', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"1\" style=\"user-select: none;\"><line x1=\"0\" y1=\"0.5\" x2=\"50\" y2=\"0.5\" stroke-width=\"1\" stroke=\"black\" style=\"user-select: none;\"></line></svg>'],\n  ['medium', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"2\" style=\"user-select: none;\"><line x1=\"0\" y1=\"1.0\" x2=\"50\" y2=\"1.0\" stroke-width=\"2\" stroke=\"black\" style=\"user-select: none;\"></line></svg>'],\n  ['thick', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"3\" style=\"user-select: none;\"><line x1=\"0\" y1=\"1.5\" x2=\"50\" y2=\"1.5\" stroke-width=\"3\" stroke=\"black\" style=\"user-select: none;\"></line></svg>'],\n  ['dashed', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"1\" style=\"user-select: none;\"><line x1=\"0\" y1=\"0.5\" x2=\"50\" y2=\"0.5\" stroke-width=\"1\" stroke=\"black\" stroke-dasharray=\"2\" style=\"user-select: none;\"></line></svg>'],\n  ['dotted', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"1\" style=\"user-select: none;\"><line x1=\"0\" y1=\"0.5\" x2=\"50\" y2=\"0.5\" stroke-width=\"1\" stroke=\"black\" stroke-dasharray=\"1\" style=\"user-select: none;\"></line></svg>'],\n  // ['double', '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"3\" style=\"user-select: none;\"><line x1=\"0\" y1=\"0.5\" x2=\"50\" y2=\"0.5\" stroke-width=\"1\" stroke=\"black\" style=\"user-select: none;\"></line><line x1=\"0\" y1=\"2.5\" x2=\"50\" y2=\"2.5\" stroke-width=\"1\" stroke=\"black\" style=\"user-select: none;\"></line></svg>'],\n];\n\nexport default class DropdownLineType extends Dropdown {\n  constructor(type) {\n    const icon = new Icon('line-type');\n    let beforei = 0;\n    const lineTypeEls = lineTypes.map((it, iti) => h('div', `${cssPrefix}-item state ${type === it[0] ? 'checked' : ''}`)\n      .on('click', () => {\n        lineTypeEls[beforei].toggle('checked');\n        lineTypeEls[iti].toggle('checked');\n        beforei = iti;\n        this.hide();\n        this.change(it);\n      })\n      .child(\n        h('div', `${cssPrefix}-line-type`).html(it[1]),\n      ));\n\n    super(icon, 'auto', false, 'bottom-left', ...lineTypeEls);\n  }\n}\n","import { h } from './element';\nimport Icon from './icon';\nimport DropdownColor from './dropdown_color';\nimport DropdownLineType from './dropdown_linetype';\nimport { cssPrefix } from '../config';\n\nfunction buildTable(...trs) {\n  return h('table', '').child(\n    h('tbody', '').children(...trs),\n  );\n}\n\nfunction buildTd(iconName) {\n  return h('td', '').child(\n    h('div', `${cssPrefix}-border-palette-cell`).child(\n      new Icon(`border-${iconName}`),\n    ).on('click', () => {\n      this.mode = iconName;\n      const { mode, style, color } = this;\n      this.change({ mode, style, color });\n    }),\n  );\n}\n\nexport default class BorderPalette {\n  constructor() {\n    this.color = '#000';\n    this.style = 'thin';\n    this.mode = 'all';\n    this.change = () => {};\n    this.ddColor = new DropdownColor('line-color', this.color);\n    this.ddColor.change = (color) => {\n      this.color = color;\n    };\n    this.ddType = new DropdownLineType(this.style);\n    this.ddType.change = ([s]) => {\n      this.style = s;\n    };\n    this.el = h('div', `${cssPrefix}-border-palette`);\n    const table = buildTable(\n      h('tr', '').children(\n        h('td', `${cssPrefix}-border-palette-left`).child(\n          buildTable(\n            h('tr', '').children(\n              ...['all', 'inside', 'horizontal', 'vertical', 'outside'].map(it => buildTd.call(this, it)),\n            ),\n            h('tr', '').children(\n              ...['left', 'top', 'right', 'bottom', 'none'].map(it => buildTd.call(this, it)),\n            ),\n          ),\n        ),\n        h('td', `${cssPrefix}-border-palette-right`).children(\n          h('div', `${cssPrefix}-toolbar-btn`).child(this.ddColor.el),\n          h('div', `${cssPrefix}-toolbar-btn`).child(this.ddType.el),\n        ),\n      ),\n    );\n    this.el.child(table);\n  }\n}\n","import Dropdown from './dropdown';\nimport Icon from './icon';\nimport BorderPalette from './border_palette';\n\nexport default class DropdownBorder extends Dropdown {\n  constructor() {\n    const icon = new Icon('border-all');\n    const borderPalette = new BorderPalette();\n    borderPalette.change = (v) => {\n      this.change(v);\n      this.hide();\n    };\n    super(icon, 'auto', false, 'bottom-left', borderPalette.el);\n  }\n}\n","/* global window */\nimport { h } from './element';\nimport { bind } from '../event';\nimport tooltip from './tooltip';\nimport DropdownFont from './dropdown_font';\nimport DropdownFontSize from './dropdown_fontsize';\nimport DropdownFormat from './dropdown_format';\nimport DropdownFormula from './dropdown_formula';\nimport DropdownColor from './dropdown_color';\nimport DropdownAlign from './dropdown_align';\nimport DropdownBorder from './dropdown_border';\nimport Dropdown from './dropdown';\nimport Icon from './icon';\nimport { cssPrefix } from '../config';\n\nfunction buildIcon(name) {\n  return new Icon(name);\n}\n\nfunction buildButton(tooltipdata) {\n  return h('div', `${cssPrefix}-toolbar-btn`)\n    .on('mouseenter', (evt) => {\n      tooltip(tooltipdata, evt.target);\n    })\n    .attr('data-tooltip', tooltipdata);\n}\n\nfunction buildDivider() {\n  return h('div', `${cssPrefix}-toolbar-divider`);\n}\n\nfunction buildButtonWithIcon(tooltipdata, iconName, change = () => {}) {\n  return buildButton(tooltipdata)\n    .child(buildIcon(iconName))\n    .on('click', () => change());\n}\n\nfunction bindDropdownChange() {\n  this.ddFormat.change = it => this.change('format', it.key);\n  this.ddFont.change = it => this.change('font-name', it.key);\n  this.ddFormula.change = it => this.change('formula', it.key);\n  this.ddFontSize.change = it => this.change('font-size', it.pt);\n  this.ddTextColor.change = it => this.change('color', it);\n  this.ddFillColor.change = it => this.change('bgcolor', it);\n  this.ddAlign.change = it => this.change('align', it);\n  this.ddVAlign.change = it => this.change('valign', it);\n  this.ddBorder.change = it => this.change('border', it);\n}\n\n\nfunction toggleChange(type) {\n  let elName = type;\n  const types = type.split('-');\n  if (types.length > 1) {\n    types.forEach((t, i) => {\n      if (i === 0) elName = t;\n      else elName += t[0].toUpperCase() + t.substring(1);\n    });\n  }\n  const el = this[`${elName}El`];\n  el.toggle();\n  this.change(type, el.hasClass('active'));\n}\n\nclass DropdownMore extends Dropdown {\n  constructor() {\n    const icon = new Icon('ellipsis');\n    const moreBtns = h('div', `${cssPrefix}-toolbar-more`);\n    super(icon, 'auto', false, 'bottom-right', moreBtns);\n    this.moreBtns = moreBtns;\n    this.contentEl.css('max-width', '420px');\n  }\n}\n\nfunction moreResize() {\n  const {\n    el, btns, moreEl, ddMore, btnChildren,\n  } = this;\n  const { moreBtns, contentEl } = ddMore;\n  const elBox = el.box();\n\n  let sumWidth = 160;\n  let sumWidth2 = 12;\n  const list1 = [];\n  const list2 = [];\n  // console.log('elBox:', elBox);\n  btnChildren.forEach((it) => {\n    const rect = it.box();\n    sumWidth += rect.width;\n    // console.log('sumWidth:', sumWidth, elBox.width);\n    if (it.attr('data-tooltip') === 'More' || sumWidth < elBox.width) {\n      list1.push(it);\n    } else {\n      // console.log('margin:', it.computedStyle());\n      const { marginLeft, marginRight } = it.computedStyle();\n      sumWidth2 += rect.width + parseInt(marginLeft, 10) + parseInt(marginRight, 10);\n      list2.push(it);\n    }\n  });\n  btns.html('').children(...list1);\n  moreBtns.html('').children(...list2);\n  contentEl.css('width', `${sumWidth2}px`);\n  if (list2.length > 0) {\n    moreEl.show();\n  } else {\n    moreEl.hide();\n  }\n}\n\nexport default class Toolbar {\n  constructor(data, isHide = false) {\n    this.data = data;\n    this.change = () => {};\n    const style = data.defaultStyle();\n    // console.log('data:', data);\n    this.ddFormat = new DropdownFormat();\n    this.ddFont = new DropdownFont();\n    this.ddFormula = new DropdownFormula();\n    this.ddFontSize = new DropdownFontSize();\n    this.ddTextColor = new DropdownColor('text-color', style.color);\n    this.ddFillColor = new DropdownColor('fill-color', style.bgcolor);\n    this.ddAlign = new DropdownAlign(['left', 'center', 'right'], style.align);\n    this.ddVAlign = new DropdownAlign(['top', 'middle', 'bottom'], style.valign);\n    this.ddBorder = new DropdownBorder();\n    this.ddMore = new DropdownMore();\n    this.btnChildren = [\n      this.undoEl = buildButtonWithIcon('Undo (Ctrl+Z)', 'undo', () => this.change('undo')),\n      this.redoEl = buildButtonWithIcon('Redo (Ctrl+Y)', 'redo', () => this.change('redo')),\n      // this.printEl = buildButtonWithIcon('Print (Ctrl+P)', 'print', () => this.change('print')),\n      this.paintformatEl = buildButtonWithIcon('Paint format', 'paintformat', () => toggleChange.call(this, 'paintformat')),\n      this.clearformatEl = buildButtonWithIcon('Clear format', 'clearformat', () => this.change('clearformat')),\n      buildDivider(),\n      buildButton('Format').child(this.ddFormat.el),\n      buildDivider(),\n      buildButton('Font').child(this.ddFont.el),\n      buildButton('Font size').child(this.ddFontSize.el),\n      buildDivider(),\n      this.fontBoldEl = buildButtonWithIcon('Bold (Ctrl+B)', 'bold', () => toggleChange.call(this, 'font-bold')),\n      this.fontItalicEl = buildButtonWithIcon('Italic (Ctrl+I)', 'italic', () => toggleChange.call(this, 'font-italic')),\n      this.underlineEl = buildButtonWithIcon('Underline (Ctrl+U)', 'underline', () => toggleChange.call(this, 'underline')),\n      this.striketEl = buildButtonWithIcon('Strike', 'strike', () => toggleChange.call(this, 'strike')),\n      buildButton('Text color').child(this.ddTextColor.el),\n      buildDivider(),\n      buildButton('Fill color').child(this.ddFillColor.el),\n      buildButton('Borders').child(this.ddBorder.el),\n      this.mergeEl = buildButtonWithIcon('Merge cells', 'merge', () => toggleChange.call(this, 'merge')),\n      buildDivider(),\n      buildButton('Horizontal align').child(this.ddAlign.el),\n      buildButton('Vertical align').child(this.ddVAlign.el),\n      this.textwrapEl = buildButtonWithIcon('Text wrapping', 'textwrap', () => toggleChange.call(this, 'textwrap')),\n      buildDivider(),\n      // this.linkEl = buildButtonWithIcon('Insert link', 'link'),\n      // this.chartEl = buildButtonWithIcon('Insert chart', 'chart'),\n      // this.autofilterEl = buildButtonWithIcon('Filter', 'autofilter'),\n      this.freezeEl = buildButtonWithIcon('Freeze cell', 'freeze', () => toggleChange.call(this, 'freeze')),\n      buildButton('Functions').child(this.ddFormula.el),\n      // buildDivider(),\n      this.moreEl = buildButton('More').child(this.ddMore.el).hide(),\n    ];\n    this.el = h('div', `${cssPrefix}-toolbar`);\n    this.btns = h('div', `${cssPrefix}-toolbar-btns`).children(...this.btnChildren);\n    this.el.child(this.btns);\n    if (isHide) this.el.hide();\n    bindDropdownChange.call(this);\n    this.reset();\n    setTimeout(() => {\n      moreResize.call(this);\n    }, 0);\n    bind(window, 'resize', () => {\n      moreResize.call(this);\n    });\n  }\n\n  paintformatActive() {\n    return this.paintformatEl.hasClass('active');\n  }\n\n  paintformatToggle() {\n    this.paintformatEl.toggle();\n  }\n\n  trigger(type) {\n    toggleChange.call(this, type);\n  }\n\n  reset() {\n    const { data } = this;\n    const style = data.getSelectedCellStyle();\n    const cell = data.getSelectedCell();\n    // console.log('canUndo:', data.canUndo());\n    this.undoEl.disabled(!data.canUndo());\n    this.redoEl.disabled(!data.canRedo());\n    this.mergeEl.active(data.canUnmerge())\n      .disabled(!data.selector.multiple());\n    // this.mergeEl.disabled();\n    // console.log('selectedCell:', style, cell);\n    const { font } = style;\n    this.ddFont.setTitle(font.name);\n    this.ddFontSize.setTitle(font.size);\n    this.fontBoldEl.active(font.bold);\n    this.fontItalicEl.active(font.italic);\n    this.underlineEl.active(style.underline);\n    this.striketEl.active(style.strike);\n    this.ddTextColor.setTitle(style.color);\n    this.ddFillColor.setTitle(style.bgcolor);\n    this.ddAlign.setTitle(style.align);\n    this.ddVAlign.setTitle(style.valign);\n    this.textwrapEl.active(style.textwrap);\n    // console.log('freeze is Active:', data.freezeIsActive());\n    this.freezeEl.active(data.freezeIsActive());\n    if (cell) {\n      if (cell.format) {\n        this.ddFormat.setTitle(cell.format);\n      }\n    }\n  }\n}\n","/* global document */\nimport { h } from './element';\nimport { bind } from '../event';\nimport { cssPrefix } from '../config';\n\nexport default function tooltip(html, target) {\n  if (target.classList.contains('active')) {\n    return;\n  }\n  const {\n    left, top, width, height,\n  } = target.getBoundingClientRect();\n  const el = h('div', `${cssPrefix}-tooltip`).html(html).show();\n  document.body.appendChild(el.el);\n  const elBox = el.box();\n  // console.log('elBox:', elBox);\n  el.css('left', `${left + (width / 2) - (elBox.width / 2)}px`)\n    .css('top', `${top + height + 2}px`);\n\n  bind(target, 'mouseleave', () => {\n    if (document.body.contains(el.el)) {\n      document.body.removeChild(el.el);\n    }\n  });\n\n  bind(target, 'click', () => {\n    if (document.body.contains(el.el)) {\n      document.body.removeChild(el.el);\n    }\n  });\n}\n","/* global window */\nimport { h } from './element';\nimport { bind, mouseMoveUp, bindTouch } from '../event';\nimport Resizer from './resizer';\nimport Scrollbar from './scrollbar';\nimport Selector from './selector';\nimport Editor from './editor';\nimport ContextMenu from './contextmenu';\nimport Table from './table';\nimport Toolbar from './toolbar';\nimport { cssPrefix } from '../config';\nimport { formulas } from '../core/formula';\n\nfunction scrollbarMove() {\n  const {\n    data, verticalScrollbar, horizontalScrollbar,\n  } = this;\n  const {\n    l, t, left, top, width, height,\n  } = data.getSelectedRect();\n  const tableOffset = this.getTableOffset();\n  // console.log(',l:', l, ', left:', left, ', tOffset.left:', tableOffset.width);\n  if (Math.abs(left) + width > tableOffset.width) {\n    horizontalScrollbar.move({ left: l + width - tableOffset.width });\n  } else {\n    const fsw = data.freezeTotalWidth();\n    if (left < fsw) {\n      horizontalScrollbar.move({ left: l - 1 - fsw });\n    }\n  }\n  // console.log('top:', top, ', height:', height, ', tof.height:', tableOffset.height);\n  if (Math.abs(top) + height > tableOffset.height) {\n    verticalScrollbar.move({ top: t + height - tableOffset.height - 1 });\n  } else {\n    const fsh = data.freezeTotalHeight();\n    if (top < fsh) {\n      verticalScrollbar.move({ top: t - 1 - fsh });\n    }\n  }\n}\n\nfunction selectorSet(multiple, ri, ci, indexesUpdated = true) {\n  if (ri === -1 && ci === -1) return;\n  // console.log(multiple, ', ri:', ri, ', ci:', ci);\n  const {\n    table, selector, toolbar,\n  } = this;\n  if (multiple) {\n    selector.setEnd(ri, ci);\n  } else {\n    selector.set(ri, ci, indexesUpdated);\n  }\n  toolbar.reset();\n  table.render();\n}\n\n// multiple: boolean\n// direction: left | right | up | down | row-first | row-last | col-first | col-last\nfunction selectorMove(multiple, direction) {\n  const {\n    selector, data,\n  } = this;\n  const { rows, cols } = data;\n  let [ri, ci] = selector.indexes;\n  const { eri, eci } = selector.range;\n  if (multiple) {\n    [ri, ci] = selector.moveIndexes;\n  }\n  // console.log('selector.move:', ri, ci);\n  if (direction === 'left') {\n    if (ci > 0) ci -= 1;\n  } else if (direction === 'right') {\n    if (eci !== ci) ci = eci;\n    if (ci < cols.len - 1) ci += 1;\n  } else if (direction === 'up') {\n    if (ri > 0) ri -= 1;\n  } else if (direction === 'down') {\n    if (eri !== ri) ri = eri;\n    if (ri < rows.len - 1) ri += 1;\n  } else if (direction === 'row-first') {\n    ci = 0;\n  } else if (direction === 'row-last') {\n    ci = cols.len - 1;\n  } else if (direction === 'col-first') {\n    ri = 0;\n  } else if (direction === 'col-last') {\n    ri = rows.len - 1;\n  }\n  if (multiple) {\n    selector.moveIndexes = [ri, ci];\n  }\n  selectorSet.call(this, multiple, ri, ci);\n  scrollbarMove.call(this);\n}\n\n// private methods\nfunction overlayerMousemove(evt) {\n  // console.log('x:', evt.offsetX, ', y:', evt.offsetY);\n  if (evt.buttons !== 0) return;\n  if (evt.target.className === `${cssPrefix}-resizer-hover`) return;\n  const { offsetX, offsetY } = evt;\n  const {\n    rowResizer, colResizer, tableEl, data,\n  } = this;\n  const { rows, cols } = data;\n  if (offsetX > cols.indexWidth && offsetY > rows.height) {\n    rowResizer.hide();\n    colResizer.hide();\n    return;\n  }\n  const tRect = tableEl.box();\n  const cRect = data.getCellRectByXY(evt.offsetX, evt.offsetY);\n  if (cRect.ri >= 0 && cRect.ci === -1) {\n    cRect.width = cols.indexWidth;\n    rowResizer.show(cRect, {\n      width: tRect.width,\n    });\n  } else {\n    rowResizer.hide();\n  }\n  if (cRect.ri === -1 && cRect.ci >= 0) {\n    cRect.height = rows.height;\n    colResizer.show(cRect, {\n      height: tRect.height,\n    });\n  } else {\n    colResizer.hide();\n  }\n}\n\nfunction overlayerMousescroll(evt) {\n  const { verticalScrollbar, data } = this;\n  const { top } = verticalScrollbar.scroll();\n  // console.log('evt:::', evt.wheelDelta, evt.detail * 40);\n  let delta = evt.deltaY;\n  const { rows } = data;\n  if (evt.detail) delta = evt.detail * 40;\n  if (delta > 0) {\n    // up\n    const ri = data.scroll.ri + 1;\n    if (ri < rows.len) {\n      verticalScrollbar.move({ top: top + rows.getHeight(ri) - 1 });\n    }\n  } else {\n    // down\n    const ri = data.scroll.ri - 1;\n    if (ri >= 0) {\n      verticalScrollbar.move({ top: ri === 0 ? 0 : top - rows.getHeight(ri) });\n    }\n  }\n}\n\nfunction overlayerTouch(direction, distance) {\n  const { verticalScrollbar, horizontalScrollbar } = this;\n  const { top } = verticalScrollbar.scroll();\n  const { left } = horizontalScrollbar.scroll();\n  // console.log('direction:', direction, ', distance:', distance);\n  if (direction === 'left' || direction === 'right') {\n    horizontalScrollbar.move({ left: left - distance });\n  } else if (direction === 'up' || direction === 'down') {\n    verticalScrollbar.move({ top: top - distance });\n  }\n}\n\nfunction verticalScrollbarSet() {\n  const { data, verticalScrollbar } = this;\n  const { height } = this.getTableOffset();\n  verticalScrollbar.set(height, data.rows.totalHeight());\n}\n\nfunction horizontalScrollbarSet() {\n  const { data, horizontalScrollbar } = this;\n  const { width } = this.getTableOffset();\n  if (data) {\n    horizontalScrollbar.set(width, data.cols.totalWidth());\n  }\n}\n\nfunction sheetFreeze() {\n  const {\n    selector, data, editor,\n  } = this;\n  const [ri, ci] = data.freeze;\n  if (ri > 0 || ci > 0) {\n    const fwidth = data.freezeTotalWidth();\n    const fheight = data.freezeTotalHeight();\n    editor.setFreezeLengths(fwidth, fheight);\n  }\n  selector.resetAreaOffset();\n}\n\nfunction sheetReset() {\n  const {\n    tableEl,\n    overlayerEl,\n    overlayerCEl,\n    table,\n    toolbar,\n    selector,\n  } = this;\n  const tOffset = this.getTableOffset();\n  const vRect = this.getRect();\n  tableEl.attr(vRect);\n  overlayerEl.offset(vRect);\n  overlayerCEl.offset(tOffset);\n  verticalScrollbarSet.call(this);\n  horizontalScrollbarSet.call(this);\n  sheetFreeze.call(this);\n  table.render();\n  toolbar.reset();\n  selector.reset();\n}\n\nfunction clearClipboard() {\n  const { data, selector } = this;\n  data.clearClipboard();\n  selector.hideClipboard();\n}\n\nfunction copy() {\n  const { data, selector } = this;\n  data.copy();\n  selector.showClipboard();\n}\n\nfunction cut() {\n  const { data, selector } = this;\n  data.cut();\n  selector.showClipboard();\n}\n\nfunction paste(what) {\n  this.data.paste(what);\n  sheetReset.call(this);\n}\n\nfunction toolbarChangePaintformatPaste() {\n  const { toolbar } = this;\n  if (toolbar.paintformatActive()) {\n    paste.call(this, 'format');\n    clearClipboard.call(this);\n    toolbar.paintformatToggle();\n  }\n}\n\nfunction overlayerMousedown(evt) {\n  // console.log(':::::overlayer.mousedown:', evt.detail, evt.button, evt.buttons, evt.shiftKey);\n  // console.log('evt.target.className:', evt.target.className);\n  const {\n    selector, data, table,\n  } = this;\n  const isAutofillEl = evt.target.className === `${cssPrefix}-selector-corner`;\n  let { ri, ci } = data.getCellRectByXY(evt.offsetX, evt.offsetY);\n  // console.log('ri:', ri, ', ci:', ci);\n  if (!evt.shiftKey) {\n    // console.log('selectorSetStart:::');\n    if (isAutofillEl) {\n      selector.showAutofill(ri, ci);\n    } else {\n      selectorSet.call(this, false, ri, ci);\n    }\n\n    // mouse move up\n    mouseMoveUp(window, (e) => {\n      // console.log('mouseMoveUp::::');\n      ({ ri, ci } = data.getCellRectByXY(e.offsetX, e.offsetY));\n      if (isAutofillEl) {\n        selector.showAutofill(ri, ci);\n      } else if (e.buttons === 1 && !e.shiftKey) {\n        selectorSet.call(this, true, ri, ci);\n      }\n    }, () => {\n      if (isAutofillEl) {\n        data.autofill(selector.arange, 'all');\n        table.render();\n      }\n      selector.hideAutofill();\n      toolbarChangePaintformatPaste.call(this);\n    });\n  }\n\n  if (!isAutofillEl && evt.buttons === 1) {\n    if (evt.shiftKey) {\n      // console.log('shiftKey::::');\n      selectorSet.call(this, true, ri, ci);\n    }\n  }\n}\n\nfunction editorSetOffset() {\n  const { editor, data } = this;\n  const sOffset = data.getSelectedRect();\n  const tOffset = this.getTableOffset();\n  let sPosition = 'top';\n  // console.log('sOffset:', sOffset, ':', tOffset);\n  if (sOffset.top > tOffset.height / 2) {\n    sPosition = 'bottom';\n  }\n  editor.setOffset(sOffset, sPosition);\n}\n\nfunction editorSet() {\n  const { editor, data } = this;\n  editorSetOffset.call(this);\n  editor.setCell(data.getSelectedCell());\n  clearClipboard.call(this);\n}\n\nfunction verticalScrollbarMove(distance) {\n  const { data, table, selector } = this;\n  data.scrolly(distance, () => {\n    selector.resetBRLAreaOffset();\n    editorSetOffset.call(this);\n    table.render();\n  });\n}\n\nfunction horizontalScrollbarMove(distance) {\n  const { data, table, selector } = this;\n  data.scrollx(distance, () => {\n    selector.resetBRTAreaOffset();\n    editorSetOffset.call(this);\n    table.render();\n  });\n}\n\nfunction rowResizerFinished(cRect, distance) {\n  const { ri } = cRect;\n  const { table, selector, data } = this;\n  data.rows.setHeight(ri, distance);\n  table.render();\n  selector.resetAreaOffset();\n  verticalScrollbarSet.call(this);\n  editorSetOffset.call(this);\n}\n\nfunction colResizerFinished(cRect, distance) {\n  const { ci } = cRect;\n  const { table, selector, data } = this;\n  data.cols.setWidth(ci, distance);\n  // console.log('data:', data);\n  table.render();\n  selector.resetAreaOffset();\n  horizontalScrollbarSet.call(this);\n  editorSetOffset.call(this);\n}\n\nfunction dataSetCellText(text, triggerChange = true) {\n  const { data, table } = this;\n  // const [ri, ci] = selector.indexes;\n  data.setSelectedCellText(text, triggerChange);\n  table.render();\n}\n\nfunction insertDeleteRowColumn(type) {\n  const { data } = this;\n  if (type === 'insert-row') {\n    data.insert('row');\n  } else if (type === 'delete-row') {\n    data.delete('row');\n  } else if (type === 'insert-column') {\n    data.insert('column');\n  } else if (type === 'delete-column') {\n    data.delete('column');\n  } else if (type === 'delete-cell') {\n    data.deleteCell();\n  } else if (type === 'delete-cell-format') {\n    data.deleteCell('format');\n  } else if (type === 'delete-cell-text') {\n    data.deleteCell('text');\n  }\n  clearClipboard.call(this);\n  sheetReset.call(this);\n}\n\nfunction toolbarChange(type, value) {\n  const { data } = this;\n  if (type === 'undo') {\n    this.undo();\n  } else if (type === 'redo') {\n    this.redo();\n  } else if (type === 'print') {\n    // print\n  } else if (type === 'paintformat') {\n    if (value === true) copy.call(this);\n    else clearClipboard.call(this);\n  } else if (type === 'clearformat') {\n    insertDeleteRowColumn.call(this, 'delete-cell-format');\n  } else if (type === 'link') {\n    // link\n  } else if (type === 'chart') {\n    // chart\n  } else if (type === 'filter') {\n    // filter\n  } else if (type === 'freeze') {\n    if (value) {\n      const { ri, ci } = data.selector;\n      this.freeze(ri, ci);\n    } else {\n      this.freeze(0, 0);\n    }\n  } else {\n    data.setSelectedCellAttr(type, value);\n    if (type === 'formula') {\n      editorSet.call(this);\n    }\n    sheetReset.call(this);\n  }\n}\n\nfunction sheetInitEvents() {\n  const {\n    overlayerEl,\n    rowResizer,\n    colResizer,\n    verticalScrollbar,\n    horizontalScrollbar,\n    editor,\n    contextMenu,\n    data,\n    toolbar,\n  } = this;\n  // overlayer\n  overlayerEl\n    .on('mousemove', (evt) => {\n      overlayerMousemove.call(this, evt);\n    }).on('mousedown', (evt) => {\n      if (evt.buttons === 2) {\n        if (data.xyInSelectedRect(evt.offsetX, evt.offsetY)) {\n          contextMenu.setPosition(evt.offsetX, evt.offsetY);\n        } else {\n          contextMenu.hide();\n        }\n      } else if (evt.detail === 2) {\n        editorSet.call(this);\n      } else {\n        editor.clear();\n        overlayerMousedown.call(this, evt);\n      }\n    }).on('mousewheel.stop', (evt) => {\n      overlayerMousescroll.call(this, evt);\n    });\n\n  // slide on mobile\n  bindTouch(overlayerEl.el, {\n    move: (direction, d) => {\n      overlayerTouch.call(this, direction, d);\n    },\n  });\n\n  // toolbar change\n  toolbar.change = (type, value) => toolbarChange.call(this, type, value);\n\n  // resizer finished callback\n  rowResizer.finishedFn = (cRect, distance) => {\n    rowResizerFinished.call(this, cRect, distance);\n  };\n  colResizer.finishedFn = (cRect, distance) => {\n    colResizerFinished.call(this, cRect, distance);\n  };\n  // scrollbar move callback\n  verticalScrollbar.moveFn = (distance, evt) => {\n    verticalScrollbarMove.call(this, distance, evt);\n  };\n  horizontalScrollbar.moveFn = (distance, evt) => {\n    horizontalScrollbarMove.call(this, distance, evt);\n  };\n  // editor\n  editor.change = (itext) => {\n    dataSetCellText.call(this, itext);\n    toolbar.reset();\n  };\n  // contextmenu\n  contextMenu.itemClick = (type) => {\n    // console.log('type:', type);\n    if (type === 'copy') {\n      copy.call(this);\n    } else if (type === 'cut') {\n      cut.call(this);\n    } else if (type === 'paste') {\n      paste.call(this, 'all');\n    } else if (type === 'paste-value') {\n      paste.call(this, 'text');\n    } else if (type === 'paste-format') {\n      paste.call(this, 'format');\n    } else {\n      insertDeleteRowColumn.call(this, type);\n    }\n  };\n\n  bind(window, 'resize', () => {\n    this.reload();\n  });\n\n  bind(window, 'click', (evt) => {\n    this.focusing = overlayerEl.contains(evt.target);\n  });\n\n  // for selector\n  bind(window, 'keydown', (evt) => {\n    if (!this.focusing) return;\n    const keyCode = evt.keyCode || evt.which;\n    const {\n      key, ctrlKey, shiftKey, altKey,\n    } = evt;\n    // console.log('keydown.evt: ', keyCode);\n    if (ctrlKey) {\n      // const { sIndexes, eIndexes } = selector;\n      let what = 'all';\n      if (shiftKey) what = 'text';\n      if (altKey) what = 'format';\n      switch (keyCode) {\n        case 90:\n          // undo: ctrl + z\n          this.undo();\n          evt.preventDefault();\n          break;\n        case 89:\n          // redo: ctrl + y\n          this.redo();\n          evt.preventDefault();\n          break;\n        case 67:\n          // ctrl + c\n          copy.call(this);\n          evt.preventDefault();\n          break;\n        case 88:\n          // ctrl + x\n          cut.call(this);\n          evt.preventDefault();\n          break;\n        case 85:\n          // ctrl + u\n          toolbar.trigger('underline');\n          evt.preventDefault();\n          break;\n        case 86:\n          // ctrl + v\n          paste.call(this, what);\n          evt.preventDefault();\n          break;\n        case 37:\n          // ctrl + left\n          selectorMove.call(this, shiftKey, 'row-first');\n          evt.preventDefault();\n          break;\n        case 38:\n          // ctrl + up\n          selectorMove.call(this, shiftKey, 'col-first');\n          evt.preventDefault();\n          break;\n        case 39:\n          // ctrl + right\n          selectorMove.call(this, shiftKey, 'row-last');\n          evt.preventDefault();\n          break;\n        case 40:\n          // ctrl + down\n          selectorMove.call(this, shiftKey, 'col-last');\n          evt.preventDefault();\n          break;\n        case 32:\n          // ctrl + space, all cells in col\n          selectorSet.call(this, false, -1, data.selector.ci, false);\n          evt.preventDefault();\n          break;\n        case 66:\n          // ctrl + B\n          toolbar.trigger('font-bold');\n          break;\n        case 73:\n          // ctrl + I\n          toolbar.trigger('font-italic');\n          break;\n        default:\n          break;\n      }\n    } else {\n      // console.log('evt.keyCode:', evt.keyCode);\n      switch (keyCode) {\n        case 32:\n          if (shiftKey) {\n            // shift + space, all cells in row\n            selectorSet.call(this, false, data.selector.ri, -1, false);\n          }\n          break;\n        case 27: // esc\n          contextMenu.hide();\n          clearClipboard.call(this);\n          break;\n        case 37: // left\n          selectorMove.call(this, shiftKey, 'left');\n          evt.preventDefault();\n          break;\n        case 38: // up\n          selectorMove.call(this, shiftKey, 'up');\n          evt.preventDefault();\n          break;\n        case 39: // right\n          selectorMove.call(this, shiftKey, 'right');\n          evt.preventDefault();\n          break;\n        case 40: // down\n          selectorMove.call(this, shiftKey, 'down');\n          evt.preventDefault();\n          break;\n        case 9: // tab\n          editor.clear();\n          // shift + tab => move left\n          // tab => move right\n          selectorMove.call(this, false, shiftKey ? 'left' : 'right');\n          evt.preventDefault();\n          break;\n        case 13: // enter\n          editor.clear();\n          // shift + enter => move up\n          // enter => move down\n          selectorMove.call(this, false, shiftKey ? 'up' : 'down');\n          evt.preventDefault();\n          break;\n        case 8: // backspace\n          insertDeleteRowColumn.call(this, 'delete-cell-text');\n          evt.preventDefault();\n          break;\n        default:\n          break;\n      }\n\n      if (key === 'Delete') {\n        insertDeleteRowColumn.call(this, 'delete-cell-text');\n        evt.preventDefault();\n      } else if ((keyCode >= 65 && keyCode <= 90)\n        || (keyCode >= 48 && keyCode <= 57)\n        || (keyCode >= 96 && keyCode <= 105)\n        || evt.key === '='\n      ) {\n        dataSetCellText.call(this, evt.key, false);\n        editorSet.call(this);\n      } else if (keyCode === 113) {\n        // F2\n        editorSet.call(this);\n      }\n    }\n  });\n}\n\nexport default class Sheet {\n  constructor(targetEl, data) {\n    this.el = h('div', `${cssPrefix}-sheet`);\n    this.toolbar = new Toolbar(data, !data.settings.showToolbar);\n    targetEl.children(this.toolbar.el, this.el);\n    this.data = data;\n    // table\n    this.tableEl = h('canvas', `${cssPrefix}-table`);\n    // resizer\n    this.rowResizer = new Resizer(false, data.rows.height);\n    this.colResizer = new Resizer(true, data.cols.minWidth);\n    // scrollbar\n    this.verticalScrollbar = new Scrollbar(true);\n    this.horizontalScrollbar = new Scrollbar(false);\n    // editor\n    this.editor = new Editor(\n      formulas,\n      () => this.getTableOffset(),\n      data.rows.height,\n    );\n    // contextMenu\n    this.contextMenu = new ContextMenu(() => this.getTableOffset());\n    // selector\n    this.selector = new Selector(data);\n    this.overlayerCEl = h('div', `${cssPrefix}-overlayer-content`)\n      .children(\n        this.editor.el,\n        this.selector.el,\n      );\n    this.overlayerEl = h('div', `${cssPrefix}-overlayer`)\n      .child(this.overlayerCEl);\n    // root element\n    this.el.children(\n      this.tableEl,\n      this.overlayerEl.el,\n      this.rowResizer.el,\n      this.colResizer.el,\n      this.verticalScrollbar.el,\n      this.horizontalScrollbar.el,\n      this.contextMenu.el,\n    );\n    // table\n    this.table = new Table(this.tableEl.el, data);\n    sheetInitEvents.call(this);\n    sheetReset.call(this);\n    // init selector [0, 0]\n    selectorSet.call(this, false, 0, 0);\n  }\n\n  loadData(data) {\n    this.data.setData(data);\n    sheetReset.call(this);\n    return this;\n  }\n\n  // freeze rows or cols\n  freeze(ri, ci) {\n    const { data } = this;\n    data.setFreeze(ri, ci);\n    sheetReset.call(this);\n    return this;\n  }\n\n  undo() {\n    this.data.undo();\n    sheetReset.call(this);\n  }\n\n  redo() {\n    this.data.redo();\n    sheetReset.call(this);\n  }\n\n  reload() {\n    sheetReset.call(this);\n    return this;\n  }\n\n  getRect() {\n    const { data } = this;\n    return { width: data.viewWidth(), height: data.viewHeight() };\n  }\n\n  getTableOffset() {\n    const { rows, cols } = this.data;\n    const { width, height } = this.getRect();\n    return {\n      width: width - cols.indexWidth,\n      height: height - rows.height,\n      left: cols.indexWidth,\n      top: rows.height,\n    };\n  }\n}\n","/* global window, document */\nimport { h } from './component/element';\nimport DataProxy from './core/data_proxy';\nimport Sheet from './component/sheet';\nimport { cssPrefix } from './config';\n// import Bottombar from './component/bottombar';\nimport './index.less';\n\n\nclass Spreadsheet {\n  constructor(selectors, options = {}) {\n    let targetEl = selectors;\n    if (typeof selectors === 'string') {\n      targetEl = document.querySelector(selectors);\n    }\n    this.data = new DataProxy('sheet1', options);\n    const rootEl = h('div', `${cssPrefix}`)\n      .on('contextmenu', evt => evt.preventDefault());\n    // create canvas element\n    targetEl.appendChild(rootEl.el);\n    this.sheet = new Sheet(rootEl, this.data);\n  }\n\n  loadData(data) {\n    this.sheet.loadData(data);\n    return this;\n  }\n\n  getData() {\n    return this.data.getData();\n  }\n\n  change(cb) {\n    this.data.change = cb;\n    return this;\n  }\n}\n\nconst spreadsheet = (el, options = {}) => new Spreadsheet(el, options);\n\nif (window) {\n  window.x = window.x || {};\n  window.x.spreadsheet = spreadsheet;\n}\n\nexport default Spreadsheet;\nexport {\n  spreadsheet,\n};\n"],"sourceRoot":""}